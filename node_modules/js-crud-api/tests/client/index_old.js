import pcajs from "../../esm";
const pca=pcajs('./../../server/api.php');


let username='tit';
let password='titpass';
const all=[
    [
        ()=>pca.register(username,password),
        true,
        '{"login":"tit","id":1}'
    ],
    [
        ()=>pca.register(username,password),
        false,1020
    ]
];
function isOk(c,v) {
    let ok;
    if (c[0]===v[1]) {
        if (v[1]) {
            ok=(JSON.stringify(c[1])===v[2]);
        } else {
            ok=c[1].code===v[2];
        }
    } else {
        ok=false;
    }
    return  ok;
}
async function * test(all) {
    for (let i = 0; i < all.length; i++) {
        try {
            let c= await all[i][0]();
            console.log('ok',c);
            yield c;
        } catch (e) {
            console.log('nok',e);
            yield e
        }
    }
}
    
async function * test2() {
    let res=[];
    for (let i = 0; i < all.length; i++) {
        let c, v=all[i];
        try {
            let temp = await v[0]();
            c = [true, temp];
        } catch (e) {
            c = [false, e];
        }
        let checkin=isOk(c,v);
        res.push([checkin,c]);
        yield [checkin,c];
        if (!checkin) break;

    }
    return new Promise(a=>a(res));
}

const _fetch=(url)=>{
    return fetch(url).then(x=>x.json());
};
const url='./../server/api.php/records/user';
const urls=Array(3).fill("").map(v=>()=>_fetch(url));
const urls2=[
    ()=>pca.register('tit','titpass'),
    ()=>pca.read('user'),
    ()=>pca.create('note',{user_id:1,note:'A Note'})
];

pca.sequenceIt(
    urls2,
    (valid,data,index)=> {
        console.log(index,valid,data);
        return true;
    }
);





