import jscrudapi from "../../../esm/index.js";

const jsa=jscrudapi('./../../server/original/index.php');
jsa.read('barcodes').then(
    x=>console.log(x)
).catch (
    x=>console.log(x)
);

/*
const parseOpenApi=(data)=> {
    let map = {};
    data.tags.forEach((item) => {
        map[item.name] = {};
        map[item.name].properties = data.components.schemas["read-" + item.name].properties;
        map[item.name].fked = {};
        map[item.name].fkes = {};
        Object.keys(map[item.name].properties).forEach((name) => {
            let property = map[item.name].properties[name];
            if (property.hasOwnProperty("x-primary-key")) map[item.name].pk = name;
            if (property.hasOwnProperty("x-referenced") && property["x-referenced"].length !== 0) {
                if (!map[item.name].fked.hasOwnProperty(name)) map[item.name].fked[name] = [];
                map[item.name].fked[name].push(...property["x-referenced"]);
            }
            if (property.hasOwnProperty("x-references")) {
                if (!map[item.name].fkes.hasOwnProperty(name)) map[item.name].fkes[name] = [];
                map[item.name].fkes[name] = property["x-references"];
            }

        });
    });
    return map;
}
const callback=(id)=>(valid,data,response)=> {
    console.log(id,valid,data,response.url)
};
const api=php_crud_api('tit:soft')('./../server/index.php', callback);
let id=0;
// 0-5
api.definition(++id);
api.read(++id)('categories',{filter:'id,eq,2'});
api.read(++id)('categories');
api.read(++id)('categories',2);
api.read(++id)('categories',[2,1]);
api.read(++id)('categories',{filter1:'id,eq,2',filter2:'id,eq,3'});
//
api.read(++id)('categories',{filter:['id,ge,1','id,le,2']});

 */

//api.read(2)('categories',1);