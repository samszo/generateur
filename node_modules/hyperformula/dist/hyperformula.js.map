{"version":3,"sources":["webpack://HyperFormula/webpack/universalModuleDefinition","webpack://HyperFormula/webpack/bootstrap","webpack://HyperFormula/./lib/index.js","webpack://HyperFormula/./lib/Cell.js","webpack://HyperFormula/./lib/DependencyGraph/index.js","webpack://HyperFormula/./lib/DependencyGraph/DependencyGraph.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.push.js","webpack://HyperFormula/./node_modules/core-js/internals/export.js","webpack://HyperFormula/./node_modules/core-js/internals/global.js","webpack://HyperFormula/(webpack)/buildin/global.js","webpack://HyperFormula/./node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack://HyperFormula/./node_modules/core-js/internals/descriptors.js","webpack://HyperFormula/./node_modules/core-js/internals/fails.js","webpack://HyperFormula/./node_modules/core-js/internals/function-call.js","webpack://HyperFormula/./node_modules/core-js/internals/function-bind-native.js","webpack://HyperFormula/./node_modules/core-js/internals/object-property-is-enumerable.js","webpack://HyperFormula/./node_modules/core-js/internals/create-property-descriptor.js","webpack://HyperFormula/./node_modules/core-js/internals/to-indexed-object.js","webpack://HyperFormula/./node_modules/core-js/internals/indexed-object.js","webpack://HyperFormula/./node_modules/core-js/internals/function-uncurry-this.js","webpack://HyperFormula/./node_modules/core-js/internals/classof-raw.js","webpack://HyperFormula/./node_modules/core-js/internals/require-object-coercible.js","webpack://HyperFormula/./node_modules/core-js/internals/is-null-or-undefined.js","webpack://HyperFormula/./node_modules/core-js/internals/to-property-key.js","webpack://HyperFormula/./node_modules/core-js/internals/to-primitive.js","webpack://HyperFormula/./node_modules/core-js/internals/is-object.js","webpack://HyperFormula/./node_modules/core-js/internals/is-callable.js","webpack://HyperFormula/./node_modules/core-js/internals/document-all.js","webpack://HyperFormula/./node_modules/core-js/internals/is-symbol.js","webpack://HyperFormula/./node_modules/core-js/internals/get-built-in.js","webpack://HyperFormula/./node_modules/core-js/internals/object-is-prototype-of.js","webpack://HyperFormula/./node_modules/core-js/internals/use-symbol-as-uid.js","webpack://HyperFormula/./node_modules/core-js/internals/symbol-constructor-detection.js","webpack://HyperFormula/./node_modules/core-js/internals/engine-v8-version.js","webpack://HyperFormula/./node_modules/core-js/internals/engine-user-agent.js","webpack://HyperFormula/./node_modules/core-js/internals/get-method.js","webpack://HyperFormula/./node_modules/core-js/internals/a-callable.js","webpack://HyperFormula/./node_modules/core-js/internals/try-to-string.js","webpack://HyperFormula/./node_modules/core-js/internals/ordinary-to-primitive.js","webpack://HyperFormula/./node_modules/core-js/internals/well-known-symbol.js","webpack://HyperFormula/./node_modules/core-js/internals/shared.js","webpack://HyperFormula/./node_modules/core-js/internals/is-pure.js","webpack://HyperFormula/./node_modules/core-js/internals/shared-store.js","webpack://HyperFormula/./node_modules/core-js/internals/define-global-property.js","webpack://HyperFormula/./node_modules/core-js/internals/has-own-property.js","webpack://HyperFormula/./node_modules/core-js/internals/to-object.js","webpack://HyperFormula/./node_modules/core-js/internals/uid.js","webpack://HyperFormula/./node_modules/core-js/internals/ie8-dom-define.js","webpack://HyperFormula/./node_modules/core-js/internals/document-create-element.js","webpack://HyperFormula/./node_modules/core-js/internals/create-non-enumerable-property.js","webpack://HyperFormula/./node_modules/core-js/internals/object-define-property.js","webpack://HyperFormula/./node_modules/core-js/internals/v8-prototype-define-bug.js","webpack://HyperFormula/./node_modules/core-js/internals/an-object.js","webpack://HyperFormula/./node_modules/core-js/internals/define-built-in.js","webpack://HyperFormula/./node_modules/core-js/internals/make-built-in.js","webpack://HyperFormula/./node_modules/core-js/internals/function-name.js","webpack://HyperFormula/./node_modules/core-js/internals/inspect-source.js","webpack://HyperFormula/./node_modules/core-js/internals/internal-state.js","webpack://HyperFormula/./node_modules/core-js/internals/weak-map-basic-detection.js","webpack://HyperFormula/./node_modules/core-js/internals/shared-key.js","webpack://HyperFormula/./node_modules/core-js/internals/hidden-keys.js","webpack://HyperFormula/./node_modules/core-js/internals/copy-constructor-properties.js","webpack://HyperFormula/./node_modules/core-js/internals/own-keys.js","webpack://HyperFormula/./node_modules/core-js/internals/object-get-own-property-names.js","webpack://HyperFormula/./node_modules/core-js/internals/object-keys-internal.js","webpack://HyperFormula/./node_modules/core-js/internals/array-includes.js","webpack://HyperFormula/./node_modules/core-js/internals/to-absolute-index.js","webpack://HyperFormula/./node_modules/core-js/internals/to-integer-or-infinity.js","webpack://HyperFormula/./node_modules/core-js/internals/math-trunc.js","webpack://HyperFormula/./node_modules/core-js/internals/length-of-array-like.js","webpack://HyperFormula/./node_modules/core-js/internals/to-length.js","webpack://HyperFormula/./node_modules/core-js/internals/enum-bug-keys.js","webpack://HyperFormula/./node_modules/core-js/internals/object-get-own-property-symbols.js","webpack://HyperFormula/./node_modules/core-js/internals/is-forced.js","webpack://HyperFormula/./node_modules/core-js/internals/array-set-length.js","webpack://HyperFormula/./node_modules/core-js/internals/is-array.js","webpack://HyperFormula/./node_modules/core-js/internals/does-not-exceed-safe-integer.js","webpack://HyperFormula/./lib/AbsoluteCellRange.js","webpack://HyperFormula/./lib/errors.js","webpack://HyperFormula/./lib/parser/index.js","webpack://HyperFormula/./lib/parser/addressRepresentationConverters.js","webpack://HyperFormula/./lib/parser/CellAddress.js","webpack://HyperFormula/./lib/parser/ColumnAddress.js","webpack://HyperFormula/./lib/parser/RowAddress.js","webpack://HyperFormula/./lib/parser/LexerConfig.js","webpack://HyperFormula/external {\"root\":\"chevrotain\",\"commonjs2\":\"chevrotain\",\"commonjs\":\"chevrotain\",\"amd\":\"chevrotain\"}","webpack://HyperFormula/./lib/parser/ParserWithCaching.js","webpack://HyperFormula/./lib/parser/Ast.js","webpack://HyperFormula/./lib/parser/binaryOpTokenMap.js","webpack://HyperFormula/./lib/parser/Cache.js","webpack://HyperFormula/./lib/parser/FormulaParser.js","webpack://HyperFormula/./lib/error-message.js","webpack://HyperFormula/./lib/parser/Unparser.js","webpack://HyperFormula/./lib/parser/collectDependencies.js","webpack://HyperFormula/./lib/parser/RelativeDependency.js","webpack://HyperFormula/./lib/Span.js","webpack://HyperFormula/./lib/absolutizeDependencies.js","webpack://HyperFormula/./lib/ContentChanges.js","webpack://HyperFormula/./lib/interpreter/SimpleRangeValue.js","webpack://HyperFormula/./lib/ArraySize.js","webpack://HyperFormula/./lib/interpreter/InterpreterState.js","webpack://HyperFormula/./lib/interpreter/plugin/FunctionPlugin.js","webpack://HyperFormula/./lib/interpreter/ArithmeticHelper.js","webpack://HyperFormula/external {\"root\":\"unorm\",\"commonjs2\":\"unorm\",\"commonjs\":\"unorm\",\"amd\":\"unorm\"}","webpack://HyperFormula/./lib/StringHelper.js","webpack://HyperFormula/./lib/interpreter/InterpreterValue.js","webpack://HyperFormula/./lib/statistics/index.js","webpack://HyperFormula/./lib/statistics/EmptyStatistics.js","webpack://HyperFormula/./lib/statistics/Statistics.js","webpack://HyperFormula/./lib/statistics/StatType.js","webpack://HyperFormula/./lib/DependencyGraph/AddressMapping/AddressMapping.js","webpack://HyperFormula/./lib/DependencyGraph/ArrayMapping.js","webpack://HyperFormula/./lib/DependencyGraph/collectAddressesDependentToRange.js","webpack://HyperFormula/./lib/DependencyGraph/FormulaCellVertex.js","webpack://HyperFormula/./lib/ArrayValue.js","webpack://HyperFormula/./lib/DependencyGraph/RangeVertex.js","webpack://HyperFormula/./lib/DependencyGraph/Graph.js","webpack://HyperFormula/./lib/DependencyGraph/RangeMapping.js","webpack://HyperFormula/./lib/DependencyGraph/SheetMapping.js","webpack://HyperFormula/./lib/i18n/index.js","webpack://HyperFormula/./lib/i18n/TranslationPackage.js","webpack://HyperFormula/./lib/DependencyGraph/EmptyCellVertex.js","webpack://HyperFormula/./lib/DependencyGraph/ValueCellVertex.js","webpack://HyperFormula/./lib/DependencyGraph/ParsingErrorVertex.js","webpack://HyperFormula/./lib/DependencyGraph/AddressMapping/SparseStrategy.js","webpack://HyperFormula/./lib/DependencyGraph/AddressMapping/DenseStrategy.js","webpack://HyperFormula/./lib/CellValue.js","webpack://HyperFormula/./lib/Config.js","webpack://HyperFormula/./lib/ArgumentSanitization.js","webpack://HyperFormula/./lib/DateTimeDefault.js","webpack://HyperFormula/./lib/DateTimeHelper.js","webpack://HyperFormula/./lib/DependencyGraph/AddressMapping/ChooseAddressMappingPolicy.js","webpack://HyperFormula/./lib/format/format.js","webpack://HyperFormula/./lib/format/parser.js","webpack://HyperFormula/./lib/helpers/licenseKeyValidator.js","webpack://HyperFormula/./lib/helpers/licenseKeyHelper.js","webpack://HyperFormula/./lib/HyperFormula.js","webpack://HyperFormula/./lib/BuildEngineFactory.js","webpack://HyperFormula/./lib/CellContentParser.js","webpack://HyperFormula/./lib/ClipboardOperations.js","webpack://HyperFormula/./lib/CrudOperations.js","webpack://HyperFormula/./lib/NamedExpressions.js","webpack://HyperFormula/./lib/Operations.js","webpack://HyperFormula/./lib/dependencyTransformers/AddColumnsTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/Transformer.js","webpack://HyperFormula/./lib/dependencyTransformers/AddRowsTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/CleanOutOfScopeDependenciesTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/MoveCellsTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/RemoveColumnsTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/RemoveRowsTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/RemoveSheetTransformer.js","webpack://HyperFormula/./lib/Sheet.js","webpack://HyperFormula/./lib/UndoRedo.js","webpack://HyperFormula/./lib/Evaluator.js","webpack://HyperFormula/./lib/Exporter.js","webpack://HyperFormula/./lib/GraphBuilder.js","webpack://HyperFormula/./lib/interpreter/FunctionRegistry.js","webpack://HyperFormula/./lib/interpreter/plugin/VersionPlugin.js","webpack://HyperFormula/./lib/interpreter/Interpreter.js","webpack://HyperFormula/./lib/interpreter/Criterion.js","webpack://HyperFormula/./lib/LazilyTransformingAstService.js","webpack://HyperFormula/./lib/dependencyTransformers/CombinedTransformer.js","webpack://HyperFormula/./lib/Lookup/SearchStrategy.js","webpack://HyperFormula/./lib/Lookup/ColumnBinarySearch.js","webpack://HyperFormula/./lib/Lookup/AdvancedFind.js","webpack://HyperFormula/./lib/interpreter/binarySearch.js","webpack://HyperFormula/./lib/Lookup/ColumnIndex.js","webpack://HyperFormula/./lib/NumberLiteralHelper.js","webpack://HyperFormula/./lib/Serialization.js","webpack://HyperFormula/./lib/Destroy.js","webpack://HyperFormula/./lib/Emitter.js","webpack://HyperFormula/external {\"root\":\"TinyEmitter\",\"commonjs2\":\"tiny-emitter\",\"commonjs\":\"tiny-emitter\",\"amd\":\"tiny-emitter\"}","webpack://HyperFormula/./lib/i18n/languages/enGB.js","webpack://HyperFormula/./lib/interpreter/index.js","webpack://HyperFormula/./lib/interpreter/plugin/index.js","webpack://HyperFormula/./lib/interpreter/plugin/ArrayPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/AbsPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/BitShiftPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/BitwiseLogicOperationsPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/BooleanPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/CharPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/CodePlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/CountBlankPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/CountUniquePlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/DateTimePlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/DegreesPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/DeltaPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/ExpPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/FinancialPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/FormulaTextPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/InformationPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/IsEvenPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/IsOddPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/LogarithmPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/MathConstantsPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/MatrixPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/MedianPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/ModuloPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/NumericAggregationPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/PowerPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/RadiansPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/RadixConversionPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/RandomPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/RoundingPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/SqrtPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/ConditionalAggregationPlugin.js","webpack://HyperFormula/./lib/interpreter/CriterionFunctionCompute.js","webpack://HyperFormula/./lib/generatorUtils.js","webpack://HyperFormula/./lib/interpreter/plugin/SumprodPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/TextPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/TrigonometryPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/LookupPlugin.js","webpack://HyperFormula/./lib/Lookup/RowSearchStrategy.js","webpack://HyperFormula/./lib/interpreter/plugin/RomanPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/SimpleArithmertic.js","webpack://HyperFormula/./lib/interpreter/plugin/StatisticalPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/3rdparty/bessel/bessel.js","webpack://HyperFormula/./lib/interpreter/plugin/3rdparty/jstat/jstat.js","webpack://HyperFormula/./lib/interpreter/plugin/MathPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/ComplexPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/StatisticalAggregationPlugin.js"],"names":["HyperFormulaNS","HyperFormula","ErrorType","CellType","CellValueType","CellValueDetailedType","DetailedCellError","ExportedCellChange","ExportedNamedExpressionChange","ConfigValueTooBigError","ConfigValueTooSmallError","EvaluationSuspendedError","ExpectedOneOfValuesError","ExpectedValueOfTypeError","FunctionPlugin","FunctionPluginValidationError","InvalidAddressError","InvalidArgumentsError","LanguageNotRegisteredError","LanguageAlreadyRegisteredError","MissingTranslationError","NamedExpressionDoesNotExistError","NamedExpressionNameIsAlreadyTakenError","NamedExpressionNameIsInvalidError","NoOperationToRedoError","NoOperationToUndoError","NoRelativeAddressesAllowedError","NoSheetWithIdError","NoSheetWithNameError","NotAFormulaError","NothingToPasteError","ProtectedFunctionTranslationError","SheetNameAlreadyTakenError","SheetSizeLimitExceededError","SourceLocationHasArrayError","TargetLocationHasArrayError","UnableToParseError","defaultLanguage","Config","defaultConfig","language","registerLanguage","enGB","languages","langCode","pluginName","Object","getOwnPropertyNames","plugins","startsWith","registerFunctionPlugin","getCellType","vertex","address","ArrayVertex","isLeftCorner","ARRAYFORMULA","ARRAY","FormulaCellVertex","ParsingErrorVertex","FORMULA","ValueCellVertex","VALUE","EMPTY","CellValueNoNumber","CellValueJustNumber","assign","NumberType","CellValueTypeOrd","arg","NUMBER","STRING","BOOLEAN","ERROR","Error","getCellValueType","cellValue","EmptyValue","CellError","SimpleRangeValue","isExtendedNumber","getCellValueDetailedType","getTypeOfExtendedNumber","getCellValueFormat","getFormatOfExtendedNumber","undefined","constructor","type","message","root","parsingError","ErrorMessage","ParseError","attachRootVertex","simpleRowAddress","sheet","row","invalidSimpleRowAddress","simpleColumnAddress","col","invalidSimpleColumnAddress","simpleCellAddress","invalidSimpleCellAddress","movedSimpleCellAddress","toSheet","toRight","toBottom","addressKey","isSimpleCellAddress","obj","absoluteSheetReference","baseAddress","_a","equalSimpleCellAddress","left","right","DependencyGraph","addressMapping","rangeMapping","sheetMapping","arrayMapping","stats","lazilyTransformingAstService","functionRegistry","namedExpressions","changes","ContentChanges","empty","dependencyQueryAddresses","RangeVertex","rangeDependencyQuery","map","_","dependenciesResult","formulaDependencyQuery","dependencies","dependency","NamedExpressionDependency","namedExpressionOrPlaceholder","name","simpleCellRange","start","end","dependencyQueryVertices","v","AbsoluteCellRange","fetchRange","namedExpression","fetchCell","allDeps","smallerRangeVertex","restRange","findSmallerRange","range","graph","adjacentNodes","has","push","addresses","cell","getCell","EmptyCellVertex","formula","FormulaVertex","getAddress","getFormula","deps","collectDependencies","absolutizeDependencies","Graph","buildEmpty","config","AddressMapping","chooseAddressMappingPolicy","RangeMapping","SheetMapping","translationPackage","ArrayMapping","setFormulaToCell","ast","size","hasVolatileFunction","hasStructuralChangeFunction","newVertex","fromAst","version","exchangeOrAddFormulaVertex","processCellDependencies","markNodeAsSpecialRecentlyChanged","markAsVolatile","markAsDependentOnStructureChange","correctInfiniteRangesDependency","getAndClearContentChanges","setParsingErrorToCell","errorVertex","shrinkPossibleArrayAndGetCell","exchangeOrAddGraphNode","setCell","setValueToCell","value","removeArray","getRange","oldValues","getValues","rawValue","setValues","parsedValue","setCellEmpty","emptyVertex","exchangeGraphNode","adjacentNodesCount","removeVertex","removeCell","ensureThatVertexIsNonArrayCellVertex","clearRecentlyChangedVertices","clearSpecialNodesRecentlyChanged","verticesToRecompute","Set","specialNodesRecentlyChanged","volatileVertices","cellDependencies","endVertex","forEach","dep","rangeVertex","setRange","addNode","isFinite","markNodeAsInfiniteRange","addEdge","bruteForce","cellFromRange","removeEdge","array","getArray","fetchCellOrCreateEmpty","correctInfiniteRangesDependenciesByRangeVertex","sheetOfVertex","namedExpressionVertex","fetchNamedExpressionVertex","expressionName","sheetId","exchangeNode","addressFrom","addressTo","vertexFrom","vertexTo","infiniteRanges","infiniteRangeVertex","addressInRange","removeRows","removedRows","measure","StatType","ADJUSTING_GRAPH","entriesFromRowsSpan","adjacentNode","shrinkArrayToCorner","ADJUSTING_ADDRESS_MAPPING","affectedArrays","ADJUSTING_RANGES","affectedRanges","truncateRanges","getArrayVerticesRelatedToRanges","ADJUSTING_ARRAY_MAPPING","fixArraysAfterRemovingRows","rowStart","numberOfRows","addStructuralNodesToChangeSet","contentChanges","removeSheet","removedSheetId","arrays","adr","sheetEntries","add","values","rangesToRemove","removeRangesInSheet","clearSheet","setArrayEmpty","removeColumns","removedColumns","entriesFromColumnsSpan","fixArraysAfterRemovingColumns","columnStart","numberOfColumns","addRows","addedRows","result","moveAllRangesInSheetAfterRowByRows","fixRangesWhenAddingRows","verticesWithChangedSize","fixArraysAfterAddingRow","verticesFromRowsSpan","addColumns","addedColumns","moveAllRangesInSheetAfterColumnByColumns","fixRangesWhenAddingColumns","fixArraysAfterAddingColumn","verticesFromColumnsSpan","ensureNoArrayInRange","isFormulaArrayInRange","isThereSpaceForArray","arrayVertex","getRangeOrUndef","vertexUnderAddress","moveCells","sourceRange","sourceAddress","addressesWithDirection","targetAddress","sourceVertex","targetVertex","containsRange","rangeVerticesContainedInRange","newEmptyVertex","moveRangesInsideSourceRange","arrayRange","spanFrom","width","height","nodeDependencies","collectAddressesDependentToRange","length","addVertex","addArrayVertex","setAddressMappingForArrayVertex","arrayFormulaNodes","nodes","rowsSpan","columnsSpan","existsVertex","getCellValue","getRawValue","getScalarValue","ScalarExpected","existsEdge","fromNode","toNode","getSheetId","sheetName","fetch","getSheetHeight","getHeight","getSheetWidth","getWidth","setArray","topSortWithScc","markNodeAsSpecial","markNodeAsChangingWithStructure","forceApplyPostponedTransformations","ensureRecentData","specialNodes","ranges","arrayVertices","hasNode","Array","from","filter","node","rawValuesFromRange","entriesFromRange","oldNode","newNode","adjNodesStored","computeListOfValuesInRange","cleanAddressMappingUnderArray","adjacentVertex","adjacentArrayVertices","relevantDependencies","formulaDirectDependenciesToArray","rangeDirectDependenciesToArray","dependentToCorner","isArrayInternalCell","getAdjacentNodesAddresses","inputVertex","ret","castVertex","intersection","intersectionWith","oldValue","getArrayCellValue","addChange","REF","formulaDependencies","item","specialNodesStructuralChanges","originalValues","rangesInSheet","includesRow","addedSubrangeInThatRange","rangeWithSameWidth","currentRangeVertex","find","newRangeVertex","addAllFromRange","column","includesColumn","subrange","rangeWithSameHeight","cellAddress","old","formulaAddress","spanFromOrUndef","span","coordinate","verticesToRemove","verticesToMerge","existingVertex","mergedVertex","mergeRangeVertices","removeVertexAndCleanupDependencies","moveArrayVerticesAfterRowByRows","arraysInRows","RowsSpan","fromRowStartAndEnd","destination","source","moveCell","setNoSpaceIfArray","moveArrayVerticesAfterColumnByColumns","arraysInCols","ColumnsSpan","fromColumnStartAndEnd","setNoSpace","removeRange","softRemoveEdge","removeNode","next","delete","candidate","WRONG_RANGE_SIZE","isSimpleCellRange","SheetsNotEqual","AstNodeType","CELL_RANGE","fromCellRange","COLUMN_RANGE","AbsoluteColumnRange","fromColumnRange","AbsoluteRowRange","fromRowRangeAst","fromAstOrUndef","_e","x","toSimpleCellAddress","topLeftCorner","Number","fromCoordinates","x1","y1","x2","y2","doesOverlap","other","columnInRange","rowInRange","startRow","Math","max","endRow","min","startCol","endCol","shiftByRows","expandByRows","shiftByColumns","shifted","byCols","byRows","expandByColumns","moveToSheet","removeSpan","shouldBeRemoved","startColumn","toString","arrayOfAddressesInRange","y","withStart","newStart","sameDimensionsAs","sameAs","addressesArrayMap","dependencyGraph","op","currentRow","effectiveEndRow","currentColumn","tmp","effectiveEndColumn","limitRow","limitColumn","bottom","exceedsSheetSizeLimits","maxColumns","maxRows","_dependencyGraph","effectiveWidth","effectiveHeight","rowEnd","columnEnd","POSITIVE_INFINITY","toSimpleColumnAddress","_numberOfRows","_byRows","_maxRows","_rowStart","_rowEnd","toSimpleRowAddress","_numberOfColumns","_maxColumns","_columnStart","_columnEnd","expectedArguments","sheet1","sheet2","replacer","key","val","RegExp","JSON","stringify","expectedType","paramName","ConfigValueEmpty","minimum","maximum","functionNotDeclaredInPlugin","functionId","functionMethodNotFound","functionName","ProtectedFunctionError","cannotRegisterFunctionWithId","cannotUnregisterFunctionWithId","cannotUnregisterProtectedPlugin","AliasAlreadyExisting","addressRegex","sheetNameRegexp","ABSOLUTE_OPERATOR","columnRegex","rowRegex","simpleSheetNameRegex","simpleSheetName","cellAddressFromString","stringAddress","exec","columnLabelToIndex","extractSheetNumber","CellAddress","absolute","absoluteCol","absoluteRow","relative","columnAddressFromString","ColumnAddress","rowAddressFromString","RowAddress","simpleCellAddressFromString","sheetContext","simpleCellRangeFromString","split","RANGE_OPERATOR","startString","endString","simpleCellAddressToString","sheetIndexMapping","sheetIndex","columnIndexToLabel","sheetIndexToString","simpleCellRangeToString","columnStringRepresentation","toUpperCase","charCodeAt","reduce","nextLetter","String","fromCharCode","floor","sheetMappingFn","test","replace","regexResult","maybeSheetName","CellReferenceType","fromColAndRow","factoryMethod","isColumnAbsolute","isRowAbsolute","bind","CELL_REFERENCE_RELATIVE","CELL_REFERENCE_ABSOLUTE","CELL_REFERENCE_ABSOLUTE_COL","CELL_REFERENCE_ABSOLUTE_ROW","toColumnAddress","refType","isColumnRelative","ReferenceType","RELATIVE","ABSOLUTE","toRowAddress","isRowRelative","isAbsolute","shiftedByRows","shiftedByColumns","moved","newSheet","withSheet","isInvalid","shiftRelativeDimensions","shiftAbsoluteDimensions","hash","sheetPart","unparse","simpleAddress","rowDollar","colDollar","compareByAbsoluteAddress","colA","colB","_toBottom","dollar","rowA","rowB","ALL_WHITESPACE_REGEXP","ODFF_WHITESPACE_REGEXP","AdditionOp","createToken","pattern","Lexer","NA","PlusOp","categories","MinusOp","MultiplicationOp","TimesOp","DivOp","PowerOp","PercentOp","BooleanOp","EqualsOp","NotEqualOp","GreaterThanOp","LessThanOp","GreaterThanOrEqualOp","LessThanOrEqualOp","ConcatenateOp","quotedSheetName","CellReference","ColumnRange","RowRange","RangeSeparator","LParen","RParen","ArrayLParen","ArrayRParen","ProcedureName","NamedExpression","StringLiteral","ErrorLiteral","buildLexerConfig","offsetProcedureNameLiteral","getFunctionTranslation","errorMapping","functionMapping","buildFunctionMapping","whitespaceTokenRegexp","ignoreWhiteSpace","WhiteSpace","ArrayRowSeparator","arrayRowSeparator","ArrayColSeparator","arrayColumnSeparator","ArgSeparator","inject","functionArgSeparator","NumberLiteral","decimalSeparator","OffsetProcedureName","allTokens","ParserWithCaching","statsCacheUsed","lexerConfig","lexer","FormulaLexer","formulaParser","FormulaParser","cache","Cache","parse","text","lexerResult","tokenizeFormula","errors","e","ParsingErrorType","LexingError","buildParsingErrorAst","computeHashFromTokens","tokens","cacheResult","get","processedTokens","bindWhitespacesToTokens","parsingResult","parseFromTokens","set","relativeDependencies","fetchCachedResultForAst","computeHashFromAst","fetchCachedResult","idx","token","tokenMatcher","image","concat","procedureName","slice","canonicalProcedureName","startAddress","endAddress","rememberNewAst","maybeSetAndThenGet","computeHashOfAstNode","leadingWhitespace","imageWithWhitespace","formatNumber","NAMED_EXPRESSION","FUNCTION_CALL","args","join","rightPart","internalWhitespace","CELL_REFERENCE","reference","ROW_RANGE","sheetReferenceType","RangeSheetReferenceType","BOTH_ABSOLUTE","MINUS_UNARY_OP","PLUS_UNARY_OP","PERCENT_OP","getErrorTranslation","error","ERROR_WITH_RAW_INPUT","rawInput","PARENTHESIS","expression","binaryOpTokenMap","first","i","current","previous","buildEmptyArgAst","buildNumberAst","buildStringAst","buildCellReferenceAst","buildCellRangeAst","assertRangeConsistency","buildColumnRangeAst","buildRowRangeAst","buildConcatenateOpAst","CONCATENATE_OP","buildEqualsOpAst","EQUALS_OP","buildNotEqualOpAst","NOT_EQUAL_OP","buildGreaterThanOpAst","GREATER_THAN_OP","buildLessThanOpAst","LESS_THAN_OP","buildGreaterThanOrEqualOpAst","GREATER_THAN_OR_EQUAL_OP","buildLessThanOrEqualOpAst","LESS_THAN_OR_EQUAL_OP","buildPlusOpAst","PLUS_OP","buildMinusOpAst","MINUS_OP","buildTimesOpAst","TIMES_OP","buildDivOpAst","DIV_OP","buildPowerOpAst","POWER_OP","buildMinusUnaryOpAst","buildPlusUnaryOpAst","buildPercentOpAst","buildProcedureAst","buildArrayAst","buildNamedExpressionAst","buildParenthesisAst","buildCellErrorAst","buildErrorWithRawInputAst","buildCacheEntry","Map","astRelativeDependencies","cacheEntry","doesContainFunctions","isFunctionVolatile","isFunctionDependentOnSheetStructureChange","entryFromCache","functionCriterion","some","EmbeddedActionsParser","outputCst","maxLookahead","booleanExpressionOrEmpty","RULE","OR","ALT","SUBRULE","booleanExpression","EMPTY_ALT","procedureExpression","procedureNameToken","CONSUME","argument","MANY","separator","SUBRULE2","rParenToken","namedExpressionExpression","offsetProcedureExpression","MANY_SEP","SEP","DEF","handleOffsetHeuristic","columnRangeExpression","startImage","endImage","firstAddress","ACTION","secondAddress","NAME","ParserError","firstEnd","secondEnd","sheetRefType","fixSheetIdsForRangeEnds","orderColumnRangeEnds","rowRangeExpression","orderRowRangeEnds","cellReference","endRangeReference","buildCellRange","endOfRangeExpression","ARGS","offsetProcedure","RangeOffsetNotAllowed","cellRangeExpression","CONSUME2","endRangeWithOffsetStartReference","endOfRangeWithOffsetStartExpression","offsetExpression","OPTION","insideArrayExpression","SUBRULE3","parenthesisExpression","lParenToken","arrayExpression","ltoken","rtoken","numericStringToNumber","input","normalized","positiveAtomicExpression","atomicExpCache","number","str","errString","errorType","rightUnaryOpAtomicExpression","percentage","atomicExpression","customParsingError","powerExpression","lhs","rhs","multiplicationExpression","additionExpression","concatenateExpression","performSelfAnalysis","formulaWithContext","reset","orderCellRangeEnds","rangeSheetReferenceType","secondEndFixed","endA","endB","ends","sort","startSheet","endSheet","compareSheetIds","sheetA","sheetB","Infinity","cellArg","StaticOffsetError","rowsArg","rowShift","isInteger","columnsArg","colShift","heightArg","widthArg","OutOfSheet","bottomRightCorner","START_ABSOLUTE","ensureOptimizations","lexingResult","tokenize","trimTrailingWhitespaces","skipWhitespacesInsideRanges","skipWhitespacesBeforeArgSeparators","filterTokensByNeighbors","shouldBeSkipped","filteredTokens","pop","DistinctSigns","WrongArgNumber","EmptyArg","EmptyArray","ArrayDimensions","NoSpaceForArrayResult","ValueSmall","ValueLarge","BadCriterion","RangeManySheets","CellRangeExpected","WrongDimension","NumberCoercion","NumberExpected","IntegerExpected","BadMode","DateBounds","WrongType","NaN","EqualLength","Negative","NotBinary","NotOctal","NotHex","EndStartPeriod","CellRefExpected","EmptyRange","BadRef","NumberRange","ValueNotFound","ValueBaseLarge","ValueBaseSmall","ValueBaseLong","NegativeLength","PatternNotFound","OneValue","TwoValues","ThreeValues","IndexBounds","IndexLarge","Formula","NegativeCount","SheetRef","PeriodLong","InvalidDate","BitshiftLong","EmptyString","LengthBounds","NegativeTime","NoDefault","Selector","StartEndDate","IncorrectDateTime","CharacterCodeBounds","NonZero","LessThanOne","WeekendString","InvalidRoman","WrongOrder","ComplexNumberExpected","ShouldBeIorJ","SizeMismatch","FunctionName","NamedExpressionName","LicenseKey","Unparser","unparseAst","_b","isFunctionTranslated","originalNamedExpressionName","nearestNamedExpression","displayName","unparseSheetName","formatRange","unparsedExpr","startSheeet","unparsedStart","unparsedEnd","numericString","collectDependenciesFn","dependenciesSet","needArgument","AddressDependency","CellRangeDependency","ColumnRangeDependency","RowRangeDependency","functionNeedArgument","doesFunctionNeedArgumentToBeComputed","argAst","absolutize","_baseAddress","fromNumberOfRows","rows","intersect","otherSpan","firstRow","fromNumberOfColumns","columns","firstColumn","filterDependenciesOutOfScope","addAll","change","newValue","addInterpreterValue","exportChanges","exporter","exportChange","isArray","getChanges","isEmpty","effectiveAddressesFromData","_data","_hasOnlyNumbers","ArraySize","data","ensureThatComputed","fromRange","onlyNumbers","onlyValues","onlyRange","fromScalar","scalar","isAdHoc","valuesFromTopLeftCorner","j","leftCorner","rowData","entriesFromTopLeftCorner","iterateValuesFromTopLeftCorner","numberOfElements","hasOnlyNumbers","rawNumbers","rawData","isRef","fromArray","isScalar","arraySizeForBinaryOp","leftArraySize","rightArraySize","arraySizeForUnaryOp","arraySize","ArraySizePredictor","checkArraySize","checkArraySizeForAst","arraysFlag","useArrayArithmetic","state","checkArraySizeForFunction","heights","widths","sizes","h","w","total","metadata","getMetadata","pluginArraySizeFunction","getArraySizeFunction","subChecks","InterpreterState","arrayFunction","expandRanges","vectorizationForbidden","parameters","argumentDefinitions","repeatLastArgs","maxWidth","maxHeight","argumentType","ArgumentTypes","RANGE","ANY","formulaVertex","interpreter","coerceScalarToNumberOrError","arithmeticHelper","runFunction","fn","_c","_d","argValues","listOfScalarValues","evaluateAst","defaultValue","optionalArg","retArr","rowArr","argCoerceFailure","coercedArguments","ignorable","coercedArg","coerceToType","SCALAR","returnNumberWrapper","returnNumberType","runFunctionWithReferenceArgument","noArgCallback","referenceCallback","nonReferenceCallback","columnSearch","serialization","arraySizePredictor","dateTimeHelper","arraySizeForAst","asts","scalarValue","coercedType","coerce","coerceRangeToScalar","INTEGER","coerced","maxValue","NUM","minValue","lessThan","greaterThan","coerceScalarToString","coerceScalarToBoolean","NOERROR","coerceToRange","COMPLEX","coerceScalarToComplex","passSubtype","params","implementedFunctions","format","ExtendedNumberFactory","COMPLEX_NUMBER_SYMBOL","complexParsingRegexp","ArithmeticHelper","numberLiteralsHelper","lt","compare","leq","gt","geq","eq","neq","pow","addWithEpsilonRaw","abs","actualEps","addWithEpsilon","typeOfResult","inferExtendedNumberTypeAdditive","unaryMinus","cloneNumber","unaryPlus","unaryPercent","PercentNumber","nonstrictadd","subtract","leftArg","rightArg","divide","DIV_BY_ZERO","inferExtendedNumberTypeMultiplicative","multiply","manyToExactComplex","coerceNumbersExactRanges","manyToNumbers","manyToExactNumbers","coerceNumbersCoerceRangesDropNulls","manyToCoercedNumbersDropNulls","manyToOnlyNumbersDropNulls","collator","collatorFromConfig","smartRounding","precisionEpsilon","eqMatcherFunction","regexp","buildRegex","normalizeString","neqMatcherFunction","searchString","index","requiresRegex","useRegularExpressions","useWildcards","matchWholeCell","c","charAt","isWildcard","needsEscape","floatCmp","mod","coerceToMaybeNumber","coerceNonDateScalarToMaybeNumber","dateStringToDateNumber","maybePercentNumber","coerceStringToMaybePercentNumber","maybeCurrencyNumber","coerceStringToMaybeCurrencyNumber","numericStringToMaybeNumber","trim","trimmedInput","endsWith","numOfPercents","parsedNumOfPercents","matchedCurrency","currencyMatcher","currencySymbol","currencyValue","parsedCurrencyValue","CurrencyNumber","currency","coerceComplexExactRanges","vals","expandedVals","arr","coerceStringToComplex","typeFormat","NUMBER_RAW","NUMBER_CURRENCY","NUMBER_DATE","DateNumber","NUMBER_DATETIME","DateTimeNumber","NUMBER_TIME","TimeNumber","NUMBER_PERCENT","regexpStr","escapeNoCharacters","caseSensitive","escapeNonWildcards","escapeAllCharacters","toLowerCase","accentSensitive","leftTmp","rightTmp","coerceEmptyToValue","stringCmp","numberCmp","coerceBooleanToNumber","rangeFn","match","val1","parseComplexToken","val2","coerceComplexToString","symb","re","im","imStr","coerceToRangeNumbersOrError","argUppered","zeroIfEmpty","isNumberOverflow","isNaN","fixNegativeZero","includes","escapedCharacters","d","leftType","leftFormat","getTypeFormatOfExtendedNumber","rightType","rightFormat","forceNormalizeString","offset","form","normalize","unorm","sensitivity","caseFirst","ignorePunctuation","Intl","Collator","localeLang","Symbol","num","RichNumber","fromNumber","newVal","getDetailedType","EmptyStatistics","Statistics","incrementCriterionFunctionFullCacheUsed","incrementCriterionFunctionPartialCacheUsed","_name","CRITERION_FUNCTION_FULL_CACHE_USED","CRITERION_FUNCTION_PARTIAL_CACHE_USED","startTimes","clear","Date","now","startTime","func","snapshot","policy","mapping","strategyFor","strategy","addSheet","autoAddSheet","sheetBoundaries","fill","strategyConstructor","call","getArrayCellRawValue","entries","getEntries","getArrayByCorner","count","mtxKey","mtx","spansThroughSheetRows","spansThroughSheetColumn","isFormulaArrayInRow","isFormulaArrayInAllRows","isFormulaArrayInColumn","isFormulaArrayInAllColumns","isFormulaArrayAtAddress","updateArrayVerticesInSheet","updated","updatingService","newAst","newAddress","newVersion","applyTransformations","ErroredArray","NotComputedArray","setCellValue","setErrorValue","ArrayValue","fromInterpreterValue","resize","simpleRangeValue","valueOrUndef","setArrayCellValue","SPILL","setAddress","setFormula","newFormula","isComputed","columnsFromArray","rowsFromArray","_updatingService","cachedCellValue","aboveRow","splice","nullArrays","aboveColumn","outOfBound","leftmostColumn","rightmostColumn","raw","newSize","functionCache","criterionFunctionCache","dependentCacheRanges","getFunctionValue","setFunctionValue","getCriterionFunctionValue","cacheKey","criterionString","getCriterionFunctionValues","setCriterionFunctionValues","addDependentCacheRange","dependentRange","clearCache","getStart","getEnd","NodeVisitStatus","dependencyQuery","edges","removeIncomingEdges","nodeEdges","nodesCount","edgesCount","edgesForNode","removeDependencies","getTopSortedWithSccSubgraphFrom","modifiedNodes","operatingFunction","onCycle","entranceTime","low","parent","inSCC","nodeStatus","order","time","sccNonSingletons","reverse","DFSstack","SCCstack","ON_STACK","u","t","PROCESSED","uLow","currentSCC","POPPED","shouldBeUpdatedMapping","sorted","cycled","s","getDependencies","sourceNode","getMappingSize","sheetMap","keyFromAddresses","maybeRange","entriesFromSheet","removeByKey","compareBy","oldKey","newKey","keyFromRange","getByKey","updateVerticesFromSheet","changedSize","iterator","valuesRangeEndRowLess","rowLessVertex","entry","leftStart","rightStart","leftEnd","rightEnd","canonicalize","sheetDisplayName","Sheet","id","canonicalName","mappingFromCanonicalName","mappingFromId","lastSheetId","fetchDisplayName","fetchSheetById","sheetNamePrefix","getUITranslation","UIElement","NEW_SHEET_PREFIX","newSheetDisplayName","newSheetCanonicalName","store","getDisplayName","displayNames","numberOfSheets","hasSheetWithId","hasSheetWithName","renameSheet","newDisplayName","currentDisplayName","sheetWithThisCanonicalName","currentCanonicalName","sheetNames","TranslationPackage","functions","ui","_protectedTranslations","checkUI","checkErrors","checkFunctionTranslations","extendFunctions","additionalFunctionTranslations","keys","buildErrorMapping","getFunctionTranslations","functionIds","translations","getMaybeFunctionTranslation","LIC","functionNames","protectedTranslation","buildTranslationPackage","rawTranslationPackage","_cellValue","SparseStrategy","colMapping","rowMapping","tmpMapping","rowNumber","colNumber","rightmostRowRemoved","numberOfRowsRemoved","rightmostColumnRemoved","numberOfColumnsRemoved","verticesFromColumn","verticesFromRow","rowVertex","vertices","DenseStrategy","getCellVertex","newRows","valueOf","privatePool","WeakMap","options","showDeprecatedWarns","binarySearchThreshold","dateFormats","evaluateNullToZero","functionPlugins","leapYear1900","licenseKey","nullYear","nullDate","parseDateTime","precisionRounding","stringifyDateTime","stringifyDuration","timeFormats","thousandSeparator","useStats","undoLimit","useColumnIndex","warnDeprecatedOptions","configValueFromParam","configValueFromParamCheck","validateNumberToBeAtLeast","validateNumberToBeAtMost","getLanguage","instanceOfSimpleDate","setupCurrencySymbol","licenseKeyValidityState","checkLicenseKeyValidity","configCheckIfParametersNotInConflict","valueAfterCheck","getConfig","getFullConfigFromPartial","mergeConfig","init","mergedConfig","warnDeprecatedIfUsed","inputValue","fromVersion","replacementName","console","warn","AlwaysDense","year","month","day","defaultParseToDateTime","defaultStringifyDateTime","defaultStringifyDuration","partialConfig","getDefaultConfig","typeCheck","valuesMap","param","names","duplicates","paramNames","validateArgToType","dateTimeString","dateFormat","timeFormat","ampmtoken","substring","dateItems","timeItems","defaultParseToTime","defaultParseToDate","parsedDate","parsedTime","secondsExtendedRegexp","precision","formatItems","ampm","hourIndex","indexOf","minuteIndex","secondIndex","findIndex","hourString","hours","minuteString","minutes","secondString","seconds","round","monthIndex","dayIndex","yearIndexLong","yearIndexShort","yearString","monthString","dayString","numDays","prefSumDays","SECONDS_PER_MINUTE","MINUTES_PER_HOUR","HOURS_PER_DAY","instanceOfSimpleTime","maxDate","DateTimeHelper","minDateAbsoluteValue","dateToNumberFromZero","maxDateValue","dateToNumber","epochYearZero","numberToSimpleDate","getWithinBounds","dayNumber","dateTime","parseDateTimeFromConfigFormats","timeToNumber","parseDateTimeFromFormats","getNullYear","getEpochYearZero","isValidDate","date","isLeapYear","relativeNumberToAbsoluteNumber","dateNumber","dayOfYear","dayToMonth","numberToSimpleDateTime","numberToSimpleTime","carryDays","leapYearsCount","daysInMonth","endOfMonth","toBasisUS","yearLengthForBasis","countLeapDays","parseSingleFormat","dateString","dateFormatsIterate","timeFormatsIterate","offsetMonth","totalM","truncateDayInMonth","roundToNearestSecond","roundToEpsilon","epsilon","argAsSeconds","argAsMinutes","argAsHours","toBasisEU","DenseSparseChooseBasedOnThreshold","threshold","AlwaysSparse","formatArg","dateHelper","tryDateTime","tryDuration","parseForNumberFormat","numberFormat","padLeft","padRight","countChars","char","TokenType","FREE_TEXT","tokenParts","integerFormat","decimalFormat","valueParts","toFixed","integerPart","decimalPart","padSizeInteger","substr","padSizeDecimal","parseForDateTimeFormat","fractionOfSecondPrecision","FORMAT","am","pm","dateFormatRegex","numberFormatRegex","formatToken","FormatExpressionType","matchDateFormat","lastIndex","m","matchNumberFormat","numberFormatToken","createTokens","regexTokens","beforeToken","lastToken","afterLastToken","dateFormatTokens","every","elem","isEscapeToken","DATE","numberFormatTokens","consoleMessages","invalid","expired","keyValidityDate","missing","_notified","messageDescriptor","template","vars","checkKeySchema","releaseDays","getTime","keyValidityDays","extractTime","formatDate","monthNames","getMonth","getDate","getFullYear","_rl","_hd","parseInt","_pi","_nm","_ss","l","_cp","sp","a","b","padStart","_config","_stats","_columnSearch","_parser","_unparser","_cellContentParser","_evaluator","_lazilyTransformingAstService","_crudOperations","_exporter","_namedExpressions","_serialization","_functionRegistry","_emitter","Emitter","_evaluationSuspended","evaluator","buildFromArray","configInput","buildFromEngineState","BuildEngineFactory","buildFromSheet","buildFromSheets","sheets","languageCode","registeredLanguages","languagePackage","unregisterLanguage","getRegisteredLanguagesCodes","plugin","FunctionRegistry","unregisterFunctionPlugin","registerFunction","unregisterFunction","unregisterAllFunctions","unregisterAll","getRegisteredFunctionNames","code","getRegisteredFunctionIds","getFunctionPlugin","getAllFunctionPlugins","getPlugins","engine","parser","unparser","cellContentParser","crudOperations","ensureEvaluationIsNotSuspended","getCellFormula","getCellSerialized","getSheetValues","getSheetFormulas","getSheetSerialized","getAllSheetsDimensions","genericAllSheetsGetter","getSheetDimensions","getAllSheetsValues","getAllSheetsFormulas","getAllSheetsSerialized","updateConfig","newParams","newConfig","configNewLanguage","serializedSheets","withNewConfig","serializedNamedExpressions","getAllNamedExpressionsSerialized","newEngine","rebuildWithConfig","rebuildAndRecalculate","getStats","undo","recomputeIfDependencyGraphNeedsIt","redo","isThereSomethingToUndo","isThereSomethingToRedo","isItPossibleToSetCellContents","ensureRangeInSizeLimits","it","ensureItIsPossibleToChangeContent","setCellContents","topLeftCornerAddress","cellContents","swapRowIndexes","setRowOrder","isItPossibleToSwapRowIndexes","validateSwapRowIndexes","testRowOrderForArrays","newRowOrder","mappingFromOrder","isItPossibleToSetRowOrder","swapColumnIndexes","columnMapping","setColumnOrder","isItPossibleToSwapColumnIndexes","validateSwapColumnIndexes","testColumnOrderForArrays","newColumnOrder","isItPossibleToSetColumnOrder","isItPossibleToAddRows","indexes","normalizedIndexes","normalizeAddedIndexes","ensureItIsPossibleToAddRows","isItPossibleToRemoveRows","normalizeRemovedIndexes","ensureItIsPossibleToRemoveRows","isItPossibleToAddColumns","ensureItIsPossibleToAddColumns","isItPossibleToRemoveColumns","ensureItIsPossibleToRemoveColumns","isItPossibleToMoveCells","destinationLeftCorner","operations","ensureItIsPossibleToMoveCells","isItPossibleToMoveRows","targetRow","ensureItIsPossibleToMoveRows","moveRows","isItPossibleToMoveColumns","targetColumn","ensureItIsPossibleToMoveColumns","moveColumns","copy","getRangeValues","cut","paste","targetLeftCorner","isClipboardEmpty","clearClipboard","clearRedoStack","undoRedo","clearUndoStack","cellRange","subarray","getRangeFormulas","getRangeSerialized","getFillRangeData","target","offsetsFromTarget","targetRange","isItPossibleToAddSheet","ensureItIsPossibleToAddSheet","addedSheetName","emit","Events","SheetAdded","isItPossibleToRemoveSheet","ensureScopeIdIsValid","SheetRemoved","isItPossibleToClearSheet","isItPossibleToReplaceSheetContent","ensureItIsPossibleToChangeSheetContents","setSheetContent","getCellDependents","getCellPrecedents","getSheetName","getSheetNames","doesSheetExist","doesCellHaveSimpleValue","doesCellHaveFormula","cellType","isCellEmpty","isCellPartOfArray","countSheets","isItPossibleToRenameSheet","newName","ensureItIsPossibleToRenameSheet","oldName","SheetRenamed","batch","batchOperations","suspendEvaluation","beginUndoRedoBatchMode","commitUndoRedoBatchMode","resumeEvaluation","EvaluationSuspended","EvaluationResumed","isEvaluationSuspended","isItPossibleToAddNamedExpression","scope","ensureItIsPossibleToAddNamedExpression","addNamedExpression","NamedExpressionAdded","getNamedExpressionValue","namedExpressionForScope","getNamedExpressionFormula","getNamedExpression","isItPossibleToChangeNamedExpression","newExpression","ensureItIsPossibleToChangeNamedExpression","changeNamedExpression","changeNamedExpressionExpression","isItPossibleToRemoveNamedExpression","removeNamedExpression","removedNamedExpression","NamedExpressionRemoved","listNamedExpressions","getAllNamedExpressionsNamesInScope","normalizeFormula","formulaString","extractTemporaryFormula","calculateFormula","internalCellValue","runAndForget","exportScalarOrRange","validateFormula","numberToDateTime","inputNumber","numberToDate","numberToTime","on","event","listener","once","off","destroy","objectDestroy","parsedCellContent","CellContent","verticesToRecomputeFrom","partialRun","exportedChanges","ValuesUpdated","buildDate","releaseDate","buildEngine","newsheetprefix","inputNamedExpressions","BUILD_ENGINE_TOTAL","NamedExpressions","LazilyTransformingAstService","buildColumnSearchStrategy","prototype","hasOwnProperty","validateAsSheet","boundaries","findBoundaries","numberLiteralHelper","NumberLiteralHelper","CellContentParser","Operations","UndoRedo","clipboardOperations","ClipboardOperations","CrudOperations","Exporter","Serialization","Interpreter","GRAPH_BUILD","graphBuilder","GraphBuilder","buildGraph","Evaluator","run","Boolean","Empty","getSingletonInstance","instance","isFormula","isBoolean","tl","isError","upperCased","errorRegex","content","dateVal","timeVal","getHours","getMinutes","getSeconds","getMilliseconds","trimmedContent","mode","res","parseAsNum","parsedDateNumber","ClipboardOperationType","ClipboardCellType","Clipboard","sourceLeftCorner","getContent","clipboard","CUT","clipboardCell","getClipboardCell","COPY","abortCut","ensureItIsPossibleToCopyPaste","isCutClipboard","isCopyClipboard","addRowsCommand","AddRowsCommand","saveOperation","AddRowsUndoEntry","removeRowsCommand","RemoveRowsCommand","rowsRemovals","RemoveRowsUndoEntry","addColumnsCommand","AddColumnsCommand","AddColumnsUndoEntry","removeColumnsCommand","RemoveColumnsCommand","columnsRemovals","RemoveColumnsUndoEntry","overwrittenCellsData","addedGlobalNamedExpressions","MoveCellsUndoEntry","MoveRowsUndoEntry","MoveColumnsUndoEntry","ensureItIsPossibleToCopy","isPositiveInteger","oldContent","getRangeClipboardCells","restoreClipboardCells","PasteUndoEntry","beginBatchMode","commitBatchMode","AddSheetUndoEntry","originalName","oldSheetContent","getSheetClipboardCells","scopedNamedExpressions","RemoveSheetUndoEntry","RenameSheetUndoEntry","ClearSheetUndoEntry","ensureItIsPossibleToChangeCellContents","oldContents","newContent","setCellContent","SetCellContentsUndoEntry","SetSheetContentUndoEntry","SetRowOrderUndoEntry","validateRowOrColumnMapping","rowRange","SetColumnOrderUndoEntry","newOrder","rowOrColumn","limit","isUndoStackEmpty","isRedoStackEmpty","AddNamedExpressionUndoEntry","oldNamedExpression","ChangeNamedExpressionUndoEntry","RemoveNamedExpressionUndoEntry","ensureNamedExpressionNameIsValid","ensureNamedExpressionIsValid","sheetHeight","newRowsCount","numberOfRowsToAdd","isNonnegativeInteger","sheetWidth","newColumnsCount","numberOfColumnsToAdd","sourceStart","targetStart","existingSheetId","inputAddress","scopeId","sources","targets","isNameValid","isNameAvailable","parsedExpression","doesContainRelativeReferences","InternalNamedExpression","added","normalizeExpressionName","WorkbookStore","normalizedExpressionName","getExisting","remove","getAllNamedExpressions","ne","WorksheetStore","nextNamedExpressionRow","workbookStore","worksheetStores","addressCache","worksheetStore","namedExpressionInAddress","isExpressionInScope","worksheetStoreOrCreate","nextAddress","restoreNamedExpression","workbookNamedExpressionOrPlaceholder","getAllNamedExpressionsNames","storedNamedExpressions","expr","sheetNum","getAllNamedExpressionsForScope","SHEET_FOR_WORKBOOK_EXPRESSIONS","rowsSpans","normalizedIndex","columnsSpans","allocateNamedExpressionAddressSpace","cmd","rowsToRemove","rowsRemoval","doRemoveRows","doAddRows","doAddColumns","columnsToRemove","columnsRemoval","doRemoveColumns","TRANSFORM_ASTS","transformation","RemoveSheetTransformer","performEagerTransformations","addTransformation","namedexpression","removeSheetByName","rowsToAdd","beginCombinedMode","commitCombinedMode","columnsToAdd","currentDataAtTarget","valuesToRemove","removeValues","valuesToMove","moveValues","MoveCellsTransformer","updateNamedExpressionsForMovedCells","buffer","_col","storeNamedExpressionInCell","adjustNamedExpressionEdges","restoreCell","restoredNamedExpression","globalNamedExpression","isRowOrColumnRange","sourceSheetId","cells","addedNamedExpressions","updateNamedExpressionsForTargetAddress","setFormulaToCellFromCache","PARSING_ERROR","getOldContent","newCellContent","parserResult","newSheetContent","arrayChanges","applyChanges","formulaHash","absoluteDependencies","cleanedAst","CleanOutOfScopeDependenciesTransformer","transformSingleAst","cleanedDependencies","rowEffectivelyNotInSheet","removedCells","RemoveRowsTransformer","rewriteAffectedArrays","rowFrom","rowCount","columnEffectivelyNotInSheet","RemoveColumnsTransformer","columnFrom","columnCount","AddRowsTransformer","AddColumnsTransformer","localVertex","globalVertex","sourceSheet","namedExpressionDependency","namedExpressionInTargetScope","targetScopeExpressionVertex","copyOrFetchGlobalNamedExpressionVertex","merged","acc","startIndex","amount","shift","Transformer","isIrreversible","transformRowRangeAst","_formulaAddress","transformCellRange","transformRange","transformRowRange","_start","_end","transformColumnRange","transformCellAddress","dependencyAddress","absoluteDependencySheet","absolutizedDependencyAddress","fixNodeAddress","newEnd","cachedAst","transformAst","transformCellReferenceAst","transformCellRangeAst","transformColumnRangeAst","newCellAddress","newRange","dependentFormulaTransformer","DependentFormulaTransformer","transformAddress","absoluteDependencyAddress","absoluteStart","absoluteEnd","shouldMove","actualStart","actualEnd","startSCA","endSCA","cellsCount","currentRowWidth","currentCol","currentValue","sheetSize","BaseUndoEntry","command","doUndo","undoRemoveRows","doRedo","redoRemoveRows","undoMoveCells","redoMoveCells","undoAddRows","redoAddRows","undoSetRowOrder","redoSetRowOrder","undoSetColumnOrder","redoSetColumnOrder","undoSetSheetContent","redoSetSheetContent","undoStart","undoEnd","undoMoveRows","redoMoveRows","undoMoveColumns","redoMoveColumns","undoAddColumns","redoAddColumns","undoRemoveColumns","redoRemoveColumns","undoAddSheet","redoAddSheet","undoRemoveSheet","redoRemoveSheet","undoRenameSheet","redoRenameSheet","undoClearSheet","redoClearSheet","undoSetCellContents","redoSetCellContents","undoPaste","redoPaste","undoAddNamedExpression","redoAddNamedExpression","undoRemoveNamedExpression","redoRemoveNamedExpression","undoChangeNamedExpression","redoChangeNamedExpression","BatchUndoEntry","arguments","operation","reversedOperations","undoBatch","redoBatch","oldData","undoStack","redoStack","batchUndoEntry","addUndoEntry","storeDataForVersion","astHash","currentOldData","undoEntry","batchOperation","restoreOldDataFromVersion","addedRowsSpans","addedColumnsSpans","cellContentData","oldContentAddress","restoreOperationOldContent","rowIndex","redoEntry","oldDataToRestore","entryToRestore","TOP_SORT","EVALUATION","recomputeFormulas","newCellValue","recomputeFormulaVertexValue","CYCLE","tmpRanges","evaluateAstToCellValue","interpreterValue","lazilyTransformingService","exportValue","detailedError","cellValueRounding","originAddress","magnitudeMultiplierExponent","log10","placesMultiplier","buildStrategy","SimpleStrategy","COLLECT_DEPENDENCIES","PROCESS_DEPENDENCIES","processDependencies","columnIndex","cellContent","parseResult","PARSER","shrinkArrayIfNeeded","validateAndReturnMetadataFromName","aliases","arraySizeFunctions","volatileFunctions","arrayFunctions","structuralChangeFunctions","functionsWhichDoesNotNeedArgumentsToBeComputed","functionsMetadata","isArrayFunction","instancePlugins","loadPluginFunctions","protectedFunctions","loadFunctionUnprotected","categorizeFunction","loadTranslations","loadPluginFunction","functionIsProtected","protectedPlugin","protectedPlugins","registeredPlugin","_protectedPlugins","registry","methodName","method","initializePlugins","instances","foundPluginInstance","pluginInstance","arraySizeMethodName","arraySizeMethod","getFunction","pluginEntry","pluginFunction","functionMetadata","isVolatile","doesNotNeedArgumentsToBeComputed","isDependentOnSheetStructureChange","VersionPlugin","LICENSE_STATUS_MAP","validityState","status","equalOp","arg1","arg2","binaryErrorWrapper","notEqualOp","greaterThanOp","lessThanOp","greaterThanOrEqualOp","lessThanOrEqualOp","concatOp","plusOp","minusOp","timesOp","powerOp","divOp","unaryMinusOp","unaryErrorWrapper","percentOp","unaryPlusOp","criterionBuilder","CriterionBuilder","evaluateAstWithoutPostprocessing","wrapperForRootVertex","leftResult","rightResult","binaryRangeWrapper","unaryRangeWrapper","rangeSpansOneSheet","totalWidth","astRow","rowHeight","rowRet","astIt","newRaw","raw2","raw1","i1","i2","j1","j2","CriterionType","buildCriterion","operator","trueString","falseString","fromCellValue","criterion","parseCriterion","lambda","buildCriterionLambda","EQUAL","ANY_CRITERION_REGEX","criterionValue","criterionType","StrToCriterionType","boolvalue","NOT_EQUAL","GREATER_THAN","GREATER_THAN_OR_EQUAL","LESS_THAN","LESS_THAN_OR_EQUAL","transformations","combinedTransformer","CombinedTransformer","TRANSFORM_ASTS_POSTPONED","getTransformationsFrom","transformedAst","transformedAddress","statistics","ColumnIndex","ColumnBinarySearch","AdvancedFind","searchKey","rangeValue","searchOptions","basicFind","advancedFind","keyMatcher","searchCoordinate","ordering","matchExactly","normalizedSearchKey","findNormalizedValue","findLastOccurrenceInOrderedRange","orderingDirection","searchArray","NOT_FOUND","getValueFromIndexFn","compareFn","foundIndex","findLastMatchingIndex","foundValue","findLastOccurrenceInOrderedArray","predicate","startRange","endRange","pivot","ceil","transformingService","binarySearchStrategy","arrayValue","addSingleCellValue","removeSingleValue","handlingDuplicates","resultUsingColumnIndex","findUsingColumnIndex","columnMap","getColumnMap","normalizedKey","valueIndexForTheKey","findRowBelongingToRange","valueIndex","positionInIndex","findInOrderedArray","isRowNumberBelongingToRange","getValueIndex","actualVersion","relevantTransformations","BUILD_COLUMN_INDEX","addValue","shiftRows","removeRowsFromValues","isRowNumberAlreadyInIndex","isFoundSpanValid","afterRow","handlingMisses","center","isIndexInRange","numberPattern","allThousandSeparatorsRegex","arrayVertexAddress","genericSheetGetter","getter","sheetGetter","idMap","newUnparser","object","Function","postMortem","TinyEmitter","dictionary","FILTER","ABS","ACOS","ACOSH","ACOT","ACOTH","AND","ARABIC","ASIN","ASINH","ATAN2","ATAN","ATANH","AVERAGE","AVERAGEA","AVERAGEIF","BASE","BIN2DEC","BIN2HEX","BIN2OCT","BITAND","BITLSHIFT","BITOR","BITRSHIFT","BITXOR","CEILING","CHAR","CHOOSE","CLEAN","CODE","COLUMN","COLUMNS","CONCATENATE","CORREL","COS","COSH","COT","COTH","COUNT","COUNTA","COUNTBLANK","COUNTIF","COUNTIFS","COUNTUNIQUE","CSC","CSCH","CUMIPMT","CUMPRINC","DATEDIF","DATEVALUE","DAY","DAYS360","DAYS","DB","DDB","DEC2BIN","DEC2HEX","DEC2OCT","DECIMAL","DEGREES","DELTA","DOLLARDE","DOLLARFR","EDATE","EFFECT","EOMONTH","ERF","ERFC","EVEN","EXACT","EXP","FALSE","FIND","FORMULATEXT","FV","FVSCHEDULE","HEX2BIN","HEX2DEC","HEX2OCT","HLOOKUP","HOUR","IF","IFERROR","IFNA","INDEX","INT","INTERVAL","IPMT","ISBINARY","ISBLANK","ISERR","ISERROR","ISEVEN","ISFORMULA","ISLOGICAL","ISNA","ISNONTEXT","ISNUMBER","ISODD","ISOWEEKNUM","ISPMT","ISREF","ISTEXT","LEFT","LEN","LN","LOG10","LOG","LOWER","MATCH","MAX","MAXA","MAXIFS","MAXPOOL","MEDIAN","MEDIANPOOL","MID","MIN","MINA","MINIFS","MINUTE","MIRR","MMULT","MOD","MONTH","NETWORKDAYS","NOMINAL","NOT","NOW","NPER","NPV","OCT2BIN","OCT2DEC","OCT2HEX","ODD","OFFSET","PI","PMT","PDURATION","PRODUCT","POWER","PPMT","PROPER","PV","RADIANS","RAND","RATE","REPLACE","REPT","RIGHT","ROMAN","ROUND","ROUNDDOWN","ROUNDUP","ROW","ROWS","RRI","SEARCH","SEC","SECH","SECOND","SHEET","SHEETS","SIN","SINH","SLN","SPLIT","SQRT","STDEVA","STDEVPA","SUBSTITUTE","SUBTOTAL","SUM","SUMIF","SUMIFS","SUMPRODUCT","SUMSQ","SWITCH","SYD","T","TAN","TANH","TBILLEQ","TBILLPRICE","TBILLYIELD","TEXT","TIME","TIMEVALUE","TODAY","TRANSPOSE","TRIM","TRUE","TRUNC","UNICHAR","UNICODE","UPPER","VARA","VARPA","VLOOKUP","WEEKDAY","WEEKNUM","WORKDAY","XNPV","XOR","YEAR","YEARFRAC","VARP","VAR","STDEVP","STDEV","FISHER","FISHERINV","GAMMA","GAMMALN","GAUSS","FACT","FACTDOUBLE","COMBIN","COMBINA","GCD","LCM","MROUND","MULTINOMIAL","QUOTIENT","RANDBETWEEN","SERIESSUM","SIGN","SQRTPI","SUMX2MY2","SUMX2PY2","SUMXMY2","GAMMADIST","GAMMAINV","BETADIST","BETAINV","BINOMDIST","BESSELI","BESSELJ","BESSELK","BESSELY","CHIDIST","CHIINV","FDIST","FINV","WEIBULL","POISSON","HYPGEOMDIST","TDIST","TINV","LOGINV","LOGNORMDIST","NORMDIST","NORMINV","NORMSDIST","NORMSINV","PHI","IMABS","IMAGINARY","IMARGUMENT","IMCONJUGATE","IMCOS","IMCOSH","IMCOT","IMCSC","IMCSCH","IMDIV","IMEXP","IMLN","IMLOG10","IMLOG2","IMPOWER","IMPRODUCT","IMREAL","IMSEC","IMSECH","IMSIN","IMSINH","IMSQRT","IMSUB","IMSUM","IMTAN","LARGE","SMALL","AVEDEV","CONFIDENCE","DEVSQ","GEOMEAN","HARMEAN","CRITBINOM","PEARSON","RSQ","STANDARDIZE","ZTEST","FTEST","STEYX","SLOPE","CHITEST","TTEST","SKEW","WEIBULLDIST","VARS","TINV2T","TDISTRT","TDIST2T","STDEVS","FINVRT","FDISTRT","CHIDISTRT","CHIINVRT","COVARIANCEP","COVARIANCES","LOGNORMINV","POISSONDIST","SKEWP","FLOOR","ArrayPlugin","arrayformula","arrayformulaArraySize","arrayconstrain","numRows","numCols","arrayconstrainArraySize","rangeVals","rangeFilters","ok","filterArraySize","AbsPlugin","MAX_48BIT_INTEGER","SHIFT_MIN_POSITIONS","SHIFT_MAX_POSITIONS","BitShiftPlugin","bitlshift","shiftLeft","bitrshift","shiftRight","positions","validate","BitwiseLogicOperationsPlugin","bitand","bitor","bitxor","BooleanPlugin","literalTrue","literalFalse","conditionalIf","condition","arg3","and","or","not","xor","cnt","switch","selector","n","iferror","ifna","choose","CharPlugin","trunc","unichar","fromCodePoint","CodePlugin","unicode","codePointAt","CountBlankPlugin","countblank","counter","CountUniquePlugin","countunique","valuesSet","errorsSet","DateTimePlugin","isoweeknumCore","absoluteDay","yearStart","yearStartAbsolute","firstThursdayAbs","days360Core","startDate","endDate","nStart","nEnd","delta","eomonth","numberOfMonthsToShift","days","hour","timeNumber","minute","second","numberRepresentation","weekday","weekdayOffsets","weeknum","isoweeknum","datevalue","timevalue","today","edate","newDate","datedif","unit","days360","yearfrac","interval","networkdays","holidays","networkdayscore","networkdaysintl","weekend","workday","workdaycore","workdayintl","multiplier","weekendPattern","computeWeekendPattern","filteredHolidays","simpleRangeToFilteredHolidays","countWorkdays","upper","lower","mid","sortedHolidays","ans","lowerBound","holidaysArr","processedHolidays","sortedArray","workdayPatterns","DegreesPlugin","degrees","DeltaPlugin","ExpPlugin","exp","FinancialPlugin","pmt","pmtCore","ipmt","ipmtCore","ppmt","ppmtCore","fv","fvCore","cumipmt","rate","periods","cumprinc","db","cost","salvage","life","period","initial","ddb","factor","dollarde","fraction","dollarfr","effect","ispmt","nominal","nper","payment","present","future","log","guess","epsMax","iterMax","f","dy","df","pv","rri","sln","syd","tbilleq","settlement","maturity","discount","denom","tbillprice","tbillyield","price","fvschedule","ratios","npv","npvCore","mirr","frate","rrate","posFlag","negFlag","posValues","negValues","nom","pduration","xnpv","dates","valArr","valArrNum","dateArr","dateArrNum","term","FormulaTextPlugin","formulatext","InformationPlugin","isbinary","iserr","iserror","isformula","isblank","isna","isnumber","islogical","isref","istext","isnontext","_f","na","_ast","_state","sheetNumber","optional","IsEvenPlugin","iseven","IsOddPlugin","isodd","LogarithmPlugin","base","ln","parseFloat","MathConstantsPlugin","pi","sqrtpi","sqrt","arraySizeForMultiplication","arraySizeForPoolFunction","inputArray","windowSize","stride","MatrixPlugin","mmult","leftMatrix","rightMatrix","outputSize","createKernel","sum","thread","mmultArraySize","maxpool","matrix","leftCornerX","leftCornerY","currentMax","medianpool","currentMin","iter","medianGuess","medianGuessCount","i3","j3","maxpoolArraySize","windowArg","window","strideArg","medianpoolArraySize","transpose","inputSize","transposeArraySize","kernel","apply","MedianPlugin","median","large","small","ModuloPlugin","dividend","divisor","zeroForInfinite","MomentsAggregate","sumsq","single","compose","averageValue","varSValue","varPValue","NumericAggregationPlugin","doSum","strictlyNumbers","doMax","maxa","NEGATIVE_INFINITY","numbersBooleans","doMin","mina","doCount","counta","doCounta","average","doAverage","averagea","doVarS","varp","doVarP","vara","reduceAggregateA","varpa","stdevs","doStdevS","stdevp","doStdevP","stdeva","stdevpa","product","doProduct","subtotal","functionType","reduceAggregate","initialAccValue","reducingFunction","mapFunction","coercionFunction","evaluateRange","coercedRangeValues","err","rangeValues","rangeResult","actualRange","cachedValue","PowerPlugin","power","RadiansPlugin","radians","MAX_LENGTH","DECIMAL_NUMBER_OF_BITS","MIN_BASE","MAX_BASE","ALPHABET","RadixConversionPlugin","dec2bin","places","decimalToBaseWithExactPadding","dec2oct","dec2hex","bin2dec","binary","binaryWithSign","coerceStringToBase","twoComplementToDecimal","bin2oct","bin2hex","oct2dec","octal","octalWithSign","oct2bin","oct2hex","hex2dec","hexadecimal","hexadecimalWithSign","hex2bin","hex2oct","decimalToBaseWithMinimumPadding","decimal","maxLength","baseAlphabet","regex","maxValFromBase","minValFromBase","decimalToRadixComplement","parsed","RandomPlugin","rand","random","randbetween","findNextOddNumber","ceiled","findNextEvenNumber","RoundingPlugin","roundup","numberToRound","rounddown","intFunc","coercedNumberToRound","even","odd","ceilingmath","significance","ceiling","ceilingprecise","floormath","floorprecise","SqrtPlugin","AverageResult","conditionalAggregationFunctionCacheKey","conditions","conditionsStrings","conditionRange","mapToRawScalarValue","ConditionalAggregationPlugin","sumif","computeFn","computeConditionalAggregationFunction","sumifs","averageif","averageResult","countif","countifs","minifs","composeFunction","minResult","maxifs","maxResult","valuesRange","conditionArgs","reduceInitialValue","conditionArg","criterionPackage","Condition","CriterionFunctionCompute","compute","findSmallerRangeForMany","conditionRanges","restValuesRange","restConditionRanges","simpleValuesRange","valuesRangeVertex","tryToGetRangeVertexForRangeValue","conditionsVertices","fullCriterionString","cachedResult","findAlreadyComputedValueInCache","buildNewCriterionCache","evaluateRangeValue","reduceFunction","iterable","criterionLambdas","conditionsIterators","filteredValues","ifFilter","simpleConditionRanges","smallerCache","newCache","rcr","newCacheValue","conditionalIterables","computableIterable","computable","conditionalSplits","conditionalIterable","cs","conditionalFirsts","zip","conditionalFirst","criterionLambda","rest","arr1","arr2","done","SumprodPlugin","sumproduct","iterators","coercedVal","TextPlugin","concatenate","stringToSplit","indexToUse","splittedString","len","proper","word","clean","exact","rept","repeat","startPosition","numberOfChars","newText","search","normalizedText","substitute","oldText","occurrence","oldTextRegexp","shiftedText","TrigonometryPlugin","acos","asin","cos","sin","tan","atan","atan2","cot","acot","sec","csc","sinh","asinh","cosh","acosh","tanh","atanh","coth","acoth","sech","csch","LookupPlugin","rowSearch","RowSearchStrategy","vlookup","doVlookup","hlookup","doHlookup","doMatch","searchInRange","searchStrategy","searchedRange","colIndex","RomanPlugin","roman","romanMode","arabic","inputString","minusSign","work","eatToken","inputAcc","absorb","valAcc","SimpleArithmerticPlugin","gte","lte","minus","uminus","upercent","uplus","StatisticalPlugin","erf","upperBound","erfc","expondist","cumulative","exponential","cdf","pdf","fisher","fisherinv","gamma","gammafn","gammadist","alphaVal","betaVal","gammaln","gammainv","inv","gauss","z","normal","betadist","A","B","beta","betainv","binomialdist","succ","trials","prob","binomial","binomialinv","alpha","besselifn","besseli","besseljfn","besselj","besselkfn","besselk","besselyfn","bessely","chisqdist","deg","chisquare","chisqdistrt","chisqinv","p","chisqinvrt","fdist","deg1","deg2","centralF","fdistrt","finv","finvrt","weibulldist","shape","scale","weibull","poissondist","mean","poisson","hypgeomdist","numberS","populationS","numberPop","hypgeom","tdist","studentt","tdist2t","tdistrt","tdistold","tinv","tinv2t","lognormdist","stddev","lognormal","lognorminv","normdist","norminv","normsdist","normsinv","phi","negbinomdist","nf","ns","negbin","confidencenorm","normalci","confidencet","tci","standardize","NEGBINOMDIST","EXPONDIST","M","_horner","_bessel_iter","f0","f1","sign","tdx","f2","o","_bessel_wrap","bessel0","bessel1","nonzero","bessel","b0","b1","W","b0_a1a","b0_a2a","b0_a1b","b0_a2b","a1","a2","xx","b1_a1a","b1_a2a","b1_a1b","b1_a2b","jsum","bjp","bj","bjm","tox","b0_a","b0_b","b1_a","b1_b","bip","bi","bim","cof","isneg","dd","ty","erfcinv","pp","q","fact","xden","xnum","yi","lowRegGamma","gammapinv","ser","aln","ap","del","ITMAX","an","EPS","gln","lna1","afac","std","betafn","betaln","ibeta","ibetainv","lna","lnb","al","bt","betacf","fpmin","qab","qap","qam","m2","aa","k","combination","betacdf","eps","betinc","a0","m9","c9","combinationln","factorial","factorialln","dof","df1","df2","N","scaledPDF","samplesDone","scaledCDF","dof2","mu","sigma","r","sumsqerr","meanv","variance","flag","stdev","prod","geomean","covariance","arr1Len","sq_dev","corrcoeff","MathPlugin","factdouble","combin","combina","gcd","processedArgs","binaryGCD","MAX_SAFE_INTEGER","lcm","binaryLCM","mround","multinomial","quotient","seriessum","coefs","coef","sumx2my2","rangeX","rangeY","valsX","valsY","valX","valY","sumx2py2","sumxmy2","ComplexPlugin","complex","imabs","imaginary","_re","imreal","_im","imargument","imconjugate","imcos","imcosh","imcot","div","imcsc","imcsch","imsec","imsech","imsin","imsinh","imtan","imdiv","improduct","mul","imsum","imsub","sub","imexp","imln","imlog10","imlog2","impower","imsqrt","re1","im1","re2","im2","nomRe","nomIm","StatisticalAggregationPlugin","avedev","avg","devsq","harmean","correl","dataX","dataY","parseTwoArrays","rsq","covariancep","covariances","ztest","ftest","arrX","arrY","vx","vy","steyx","slope","chisqtest","ttest","tails","sx","sy","skew","skewp","COVAR","xit","yit","xval","yval"],"mappings":"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rD,MAAM,EAAE1R,YAAY,EAAE;IAChD2R,kCAAgB,CAACnrD,sBAAsB,CAACkrD,MAAM,EAAE1R,YAAY,CAAC;EACjE;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,OAAO4R,wBAAwB,CAACF,MAAM,EAAE;IACpCC,kCAAgB,CAACC,wBAAwB,CAACF,MAAM,CAAC;EACrD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,OAAOG,gBAAgB,CAACttC,UAAU,EAAEmtC,MAAM,EAAE1R,YAAY,EAAE;IACtD,IAAAqF,uCAAiB,EAAC9gC,UAAU,EAAE,QAAQ,EAAE,YAAY,CAAC;IACrDotC,kCAAgB,CAACE,gBAAgB,CAACttC,UAAU,EAAEmtC,MAAM,EAAE1R,YAAY,CAAC;EACvE;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,OAAO8R,kBAAkB,CAACvtC,UAAU,EAAE;IAClC,IAAA8gC,uCAAiB,EAAC9gC,UAAU,EAAE,QAAQ,EAAE,YAAY,CAAC;IACrDotC,kCAAgB,CAACG,kBAAkB,CAACvtC,UAAU,CAAC;EACnD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,OAAOwtC,sBAAsB,GAAG;IAC5BJ,kCAAgB,CAACK,aAAa,EAAE;EACpC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,OAAOC,0BAA0B,CAACC,IAAI,EAAE;IACpC,IAAA7M,uCAAiB,EAAC6M,IAAI,EAAE,QAAQ,EAAE,MAAM,CAAC;IACzC,MAAMnS,WAAW,GAAG4R,kCAAgB,CAACQ,wBAAwB,EAAE;IAC/D,MAAMrsD,QAAQ,GAAG,IAAI,CAACs9C,WAAW,CAAC8O,IAAI,CAAC;IACvC,OAAOpsD,QAAQ,CAACg6C,uBAAuB,CAACC,WAAW,CAAC;EACxD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,OAAOqS,iBAAiB,CAAC7tC,UAAU,EAAE;IACjC,IAAA8gC,uCAAiB,EAAC9gC,UAAU,EAAE,QAAQ,EAAE,YAAY,CAAC;IACrD,OAAOotC,kCAAgB,CAACS,iBAAiB,CAAC7tC,UAAU,CAAC;EACzD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,OAAO8tC,qBAAqB,GAAG;IAC3B,OAAOV,kCAAgB,CAACW,UAAU,EAAE;EACxC;EACA,OAAOtB,oBAAoB,CAACuB,MAAM,EAAE;IAChC,OAAO,IAAIhvD,YAAY,CAACgvD,MAAM,CAACtkD,MAAM,EAAEskD,MAAM,CAACxnD,KAAK,EAAEwnD,MAAM,CAAC7wC,eAAe,EAAE6wC,MAAM,CAAClpB,YAAY,EAAEkpB,MAAM,CAACC,MAAM,EAAED,MAAM,CAACE,QAAQ,EAAEF,MAAM,CAACG,iBAAiB,EAAEH,MAAM,CAAC1B,SAAS,EAAE0B,MAAM,CAACvnD,4BAA4B,EAAEunD,MAAM,CAACI,cAAc,EAAEJ,MAAM,CAAChvB,QAAQ,EAAEgvB,MAAM,CAACrnD,gBAAgB,EAAEqnD,MAAM,CAACjpB,aAAa,EAAEipB,MAAM,CAACtnD,gBAAgB,CAAC;EACtU;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIkN,YAAY,CAACoE,WAAW,EAAE;IACtB,IAAI,CAAC,IAAArS,yBAAmB,EAACqS,WAAW,CAAC,EAAE;MACnC,MAAM,IAAIpY,gCAAwB,CAAC,mBAAmB,EAAE,aAAa,CAAC;IAC1E;IACA,IAAI,CAACyuD,8BAA8B,EAAE;IACrC,OAAO,IAAI,CAACpC,cAAc,CAACr4C,YAAY,CAACoE,WAAW,CAAC;EACxD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIs2C,cAAc,CAACt2C,WAAW,EAAE;IACxB,IAAI,CAAC,IAAArS,yBAAmB,EAACqS,WAAW,CAAC,EAAE;MACnC,MAAM,IAAIpY,gCAAwB,CAAC,mBAAmB,EAAE,aAAa,CAAC;IAC1E;IACA,OAAO,IAAI,CAACqsD,cAAc,CAACqC,cAAc,CAACt2C,WAAW,CAAC;EAC1D;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIu2C,iBAAiB,CAACv2C,WAAW,EAAE;IAC3B,IAAI,CAAC,IAAArS,yBAAmB,EAACqS,WAAW,CAAC,EAAE;MACnC,MAAM,IAAIpY,gCAAwB,CAAC,mBAAmB,EAAE,aAAa,CAAC;IAC1E;IACA,IAAI,CAACyuD,8BAA8B,EAAE;IACrC,OAAO,IAAI,CAACpC,cAAc,CAACsC,iBAAiB,CAACv2C,WAAW,CAAC;EAC7D;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIw2C,cAAc,CAACxgD,OAAO,EAAE;IACpB,IAAA8yC,uCAAiB,EAAC9yC,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC;IAC/C,IAAI,CAACqgD,8BAA8B,EAAE;IACrC,OAAO,IAAI,CAACpC,cAAc,CAACuC,cAAc,CAACxgD,OAAO,CAAC;EACtD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIygD,gBAAgB,CAACzgD,OAAO,EAAE;IACtB,IAAA8yC,uCAAiB,EAAC9yC,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC;IAC/C,OAAO,IAAI,CAACi+C,cAAc,CAACwC,gBAAgB,CAACzgD,OAAO,CAAC;EACxD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI0gD,kBAAkB,CAAC1gD,OAAO,EAAE;IACxB,IAAA8yC,uCAAiB,EAAC9yC,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC;IAC/C,IAAI,CAACqgD,8BAA8B,EAAE;IACrC,OAAO,IAAI,CAACpC,cAAc,CAACyC,kBAAkB,CAAC1gD,OAAO,CAAC;EAC1D;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI2gD,sBAAsB,GAAG;IACrB,OAAO,IAAI,CAAC1C,cAAc,CAAC2C,sBAAsB,CAAExrD,GAAG,IAAK,IAAI,CAACyrD,kBAAkB,CAACzrD,GAAG,CAAC,CAAC;EAC5F;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIyrD,kBAAkB,CAAC7gD,OAAO,EAAE;IACxB,IAAA8yC,uCAAiB,EAAC9yC,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC;IAC/C,OAAO;MACH+E,KAAK,EAAE,IAAI,CAACoK,eAAe,CAAC3I,aAAa,CAACxG,OAAO,CAAC;MAClDgF,MAAM,EAAE,IAAI,CAACmK,eAAe,CAAC7I,cAAc,CAACtG,OAAO;IACvD,CAAC;EACL;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI8gD,kBAAkB,GAAG;IACjB,IAAI,CAACT,8BAA8B,EAAE;IACrC,OAAO,IAAI,CAACpC,cAAc,CAAC6C,kBAAkB,EAAE;EACnD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,oBAAoB,GAAG;IACnB,OAAO,IAAI,CAAC9C,cAAc,CAAC8C,oBAAoB,EAAE;EACrD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,sBAAsB,GAAG;IACrB,IAAI,CAACX,8BAA8B,EAAE;IACrC,OAAO,IAAI,CAACpC,cAAc,CAAC+C,sBAAsB,EAAE;EACvD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,YAAY,CAACC,SAAS,EAAE;IACpB,MAAMC,SAAS,GAAG,IAAI,CAAC7D,OAAO,CAAChM,WAAW,CAAC4P,SAAS,CAAC;IACrD,MAAME,iBAAiB,GAAG,IAAI,CAAC9D,OAAO,CAAChM,WAAW,CAAC;MAAE/9C,QAAQ,EAAE2tD,SAAS,CAAC3tD;IAAS,CAAC,CAAC;IACpF,MAAM8tD,gBAAgB,GAAG,IAAI,CAACpD,cAAc,CAACqD,aAAa,CAACF,iBAAiB,EAAE,IAAI,CAACpD,iBAAiB,CAAC,CAACgD,sBAAsB,EAAE;IAC9H,MAAMO,0BAA0B,GAAG,IAAI,CAACtD,cAAc,CAACuD,gCAAgC,EAAE;IACzF,MAAMC,SAAS,GAAG/C,sCAAkB,CAACgD,iBAAiB,CAACP,SAAS,EAAEE,gBAAgB,EAAEE,0BAA0B,EAAE,IAAI,CAAChE,MAAM,CAAC;IAC5H,IAAI,CAACD,OAAO,GAAGmE,SAAS,CAAC/lD,MAAM;IAC/B,IAAI,CAAC6hD,MAAM,GAAGkE,SAAS,CAACjpD,KAAK;IAC7B,IAAI,CAACwX,gBAAgB,GAAGyxC,SAAS,CAACtyC,eAAe;IACjD,IAAI,CAACquC,aAAa,GAAGiE,SAAS,CAAC3qB,YAAY;IAC3C,IAAI,CAAC2mB,OAAO,GAAGgE,SAAS,CAACxB,MAAM;IAC/B,IAAI,CAACvC,SAAS,GAAG+D,SAAS,CAACvB,QAAQ;IACnC,IAAI,CAACvC,kBAAkB,GAAG8D,SAAS,CAACtB,iBAAiB;IACrD,IAAI,CAACvC,UAAU,GAAG6D,SAAS,CAACnD,SAAS;IACrC,IAAI,CAACT,6BAA6B,GAAG4D,SAAS,CAAChpD,4BAA4B;IAC3E,IAAI,CAACqlD,eAAe,GAAG2D,SAAS,CAACrB,cAAc;IAC/C,IAAI,CAACrC,SAAS,GAAG0D,SAAS,CAACzwB,QAAQ;IACnC,IAAI,CAACgtB,iBAAiB,GAAGyD,SAAS,CAAC9oD,gBAAgB;IACnD,IAAI,CAACslD,cAAc,GAAGwD,SAAS,CAAC1qB,aAAa;IAC7C,IAAI,CAACmnB,iBAAiB,GAAGuD,SAAS,CAAC/oD,gBAAgB;EACvD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI04C,SAAS,GAAG;IACR,OAAO,IAAI,CAACkM,OAAO,CAAClM,SAAS,EAAE;EACnC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIuQ,qBAAqB,GAAG;IACpB,IAAI,CAACV,YAAY,CAAC,CAAC,CAAC,CAAC;EACzB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIW,QAAQ,GAAG;IACP,OAAO,IAAI,CAACrE,MAAM,CAAC5a,QAAQ,EAAE;EACjC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIkf,IAAI,GAAG;IACH,IAAI,CAAC/D,eAAe,CAAC+D,IAAI,EAAE;IAC3B,OAAO,IAAI,CAACC,iCAAiC,EAAE;EACnD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,IAAI,GAAG;IACH,IAAI,CAACjE,eAAe,CAACiE,IAAI,EAAE;IAC3B,OAAO,IAAI,CAACD,iCAAiC,EAAE;EACnD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIE,sBAAsB,GAAG;IACrB,OAAO,IAAI,CAAClE,eAAe,CAACkE,sBAAsB,EAAE;EACxD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,sBAAsB,GAAG;IACrB,OAAO,IAAI,CAACnE,eAAe,CAACmE,sBAAsB,EAAE;EACxD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,6BAA6B,CAAC9tD,OAAO,EAAE;IACnC,IAAIoG,KAAK;IACT,IAAI,IAAA7C,yBAAmB,EAACvD,OAAO,CAAC,EAAE;MAC9BoG,KAAK,GAAG,IAAIR,oCAAiB,CAAC5F,OAAO,EAAEA,OAAO,CAAC;IACnD,CAAC,MACI,IAAI,IAAA4X,oCAAiB,EAAC5X,OAAO,CAAC,EAAE;MACjCoG,KAAK,GAAG,IAAIR,oCAAiB,CAAC5F,OAAO,CAACwF,KAAK,EAAExF,OAAO,CAACyF,GAAG,CAAC;IAC7D,CAAC,MACI;MACD,MAAM,IAAIjI,gCAAwB,CAAC,qCAAqC,EAAE,SAAS,CAAC;IACxF;IACA,IAAI;MACA,IAAI,CAACksD,eAAe,CAACqE,uBAAuB,CAAC3nD,KAAK,CAAC;MACnD,KAAK,MAAM4nD,EAAE,IAAI5nD,KAAK,CAACK,SAAS,CAAC,IAAI,CAACmV,gBAAgB,CAAC,EAAE;QACrD,IAAI,CAAC8tC,eAAe,CAACuE,iCAAiC,CAACD,EAAE,CAAC;MAC9D;IACJ,CAAC,CACD,OAAO/lC,CAAC,EAAE;MACN,OAAO,KAAK;IAChB;IACA,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIimC,eAAe,CAACC,oBAAoB,EAAEC,YAAY,EAAE;IAChD,IAAI,CAAC1E,eAAe,CAACwE,eAAe,CAACC,oBAAoB,EAAEC,YAAY,CAAC;IACxE,OAAO,IAAI,CAACV,iCAAiC,EAAE;EACnD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIW,cAAc,CAACziD,OAAO,EAAEmuC,UAAU,EAAE;IAChC,IAAA2E,uCAAiB,EAAC9yC,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC;IAC/C,IAAI,CAAC89C,eAAe,CAAC4E,WAAW,CAAC1iD,OAAO,EAAEmuC,UAAU,CAAC;IACrD,OAAO,IAAI,CAAC2T,iCAAiC,EAAE;EACnD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIa,4BAA4B,CAAC3iD,OAAO,EAAEmuC,UAAU,EAAE;IAC9C,IAAA2E,uCAAiB,EAAC9yC,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC;IAC/C,IAAI;MACA,IAAI,CAAC89C,eAAe,CAAC8E,sBAAsB,CAAC5iD,OAAO,EAAEmuC,UAAU,CAAC;MAChE,IAAI,CAAC2P,eAAe,CAAC+E,qBAAqB,CAAC7iD,OAAO,EAAEmuC,UAAU,CAAC;MAC/D,OAAO,IAAI;IACf,CAAC,CACD,OAAO9xB,CAAC,EAAE;MACN,OAAO,KAAK;IAChB;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIqmC,WAAW,CAAC1iD,OAAO,EAAE8iD,WAAW,EAAE;IAC9B,IAAAhQ,uCAAiB,EAAC9yC,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC;IAC/C,MAAM6iC,OAAO,GAAG,IAAI,CAACib,eAAe,CAACiF,gBAAgB,CAAC/iD,OAAO,EAAE8iD,WAAW,EAAE,KAAK,CAAC;IAClF,OAAO,IAAI,CAACL,cAAc,CAACziD,OAAO,EAAE6iC,OAAO,CAAC;EAChD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACImgB,yBAAyB,CAAChjD,OAAO,EAAE8iD,WAAW,EAAE;IAC5C,IAAAhQ,uCAAiB,EAAC9yC,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC;IAC/C,IAAI;MACA,MAAMmuC,UAAU,GAAG,IAAI,CAAC2P,eAAe,CAACiF,gBAAgB,CAAC/iD,OAAO,EAAE8iD,WAAW,EAAE,KAAK,CAAC;MACrF,IAAI,CAAChF,eAAe,CAAC8E,sBAAsB,CAAC5iD,OAAO,EAAEmuC,UAAU,CAAC;MAChE,IAAI,CAAC2P,eAAe,CAAC+E,qBAAqB,CAAC7iD,OAAO,EAAEmuC,UAAU,CAAC;MAC/D,OAAO,IAAI;IACf,CAAC,CACD,OAAO9xB,CAAC,EAAE;MACN,OAAO,KAAK;IAChB;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI4mC,iBAAiB,CAACjjD,OAAO,EAAEkjD,aAAa,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R,IAAI,CAAC,IAAAe,oCAAiB,EAACf,MAAM,CAAC,EAAE;MAC5B,MAAM,IAAIrZ,gCAAwB,CAAC,iBAAiB,EAAE,QAAQ,CAAC;IACnE;IACA,MAAM4I,KAAK,GAAG,IAAIR,oCAAiB,CAACiR,MAAM,CAACrR,KAAK,EAAEqR,MAAM,CAACpR,GAAG,CAAC;IAC7D,IAAI,CAACikD,eAAe,CAACqH,GAAG,CAAC3qD,KAAK,CAACZ,KAAK,EAAEY,KAAK,CAACuK,KAAK,EAAE,EAAEvK,KAAK,CAACwK,MAAM,EAAE,CAAC;IACpE,OAAO,IAAI,CAACkgD,cAAc,CAACj6C,MAAM,CAAC;EACtC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIm6C,KAAK,CAACC,gBAAgB,EAAE;IACpB,IAAI,CAAC,IAAA1tD,yBAAmB,EAAC0tD,gBAAgB,CAAC,EAAE;MACxC,MAAM,IAAIzzD,gCAAwB,CAAC,mBAAmB,EAAE,kBAAkB,CAAC;IAC/E;IACA,IAAI,CAACyuD,8BAA8B,EAAE;IACrC,IAAI,CAACvC,eAAe,CAACsH,KAAK,CAACC,gBAAgB,CAAC;IAC5C,OAAO,IAAI,CAACvD,iCAAiC,EAAE;EACnD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIwD,gBAAgB,GAAG;IACf,OAAO,IAAI,CAACxH,eAAe,CAACwH,gBAAgB,EAAE;EAClD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,cAAc,GAAG;IACb,IAAI,CAACzH,eAAe,CAACyH,cAAc,EAAE;EACzC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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CA;AACA;EACII,KAAK,CAACC,eAAe,EAAE;IACnB,IAAI,CAACC,iBAAiB,EAAE;IACxB,IAAI,CAACpK,eAAe,CAACqK,sBAAsB,EAAE;IAC7C,IAAI;MACAF,eAAe,EAAE;IACrB,CAAC,CACD,OAAO5rC,CAAC,EAAE;MACN,IAAI,CAACyhC,eAAe,CAACsK,uBAAuB,EAAE;MAC9C,IAAI,CAACC,gBAAgB,EAAE;MACvB,MAAOhsC,CAAC;IACZ;IACA,IAAI,CAACyhC,eAAe,CAACsK,uBAAuB,EAAE;IAC9C,OAAO,IAAI,CAACC,gBAAgB,EAAE;EAClC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIH,iBAAiB,GAAG;IAChB,IAAI,CAAC7J,oBAAoB,GAAG,IAAI;IAChC,IAAI,CAACF,QAAQ,CAACmI,IAAI,CAACC,eAAM,CAAC+B,mBAAmB,CAAC;EAClD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACID,gBAAgB,GAAG;IACf,IAAI,CAAChK,oBAAoB,GAAG,KAAK;IACjC,MAAMzlD,OAAO,GAAG,IAAI,CAACkpD,iCAAiC,EAAE;IACxD,IAAI,CAAC3D,QAAQ,CAACmI,IAAI,CAACC,eAAM,CAACgC,iBAAiB,EAAE3vD,OAAO,CAAC;IACrD,OAAOA,OAAO;EAClB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI4vD,qBAAqB,GAAG;IACpB,OAAO,IAAI,CAACnK,oBAAoB;EACpC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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AAO,KAAK;IAChB;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIgtC,qBAAqB,CAACtpD,cAAc,EAAEopD,aAAa,EAAET,KAAK,EAAErZ,OAAO,EAAE;IACjE,IAAAyD,uCAAiB,EAAC/yC,cAAc,EAAE,QAAQ,EAAE,gBAAgB,CAAC;IAC7D,IAAI2oD,KAAK,KAAKtyD,SAAS,EAAE;MACrB,IAAA08C,uCAAiB,EAAC4V,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC;IAC/C;IACA,IAAI,CAAC5K,eAAe,CAACwL,+BAA+B,CAACvpD,cAAc,EAAE2oD,KAAK,EAAES,aAAa,EAAE9Z,OAAO,CAAC;IACnG,OAAO,IAAI,CAACyS,iCAAiC,EAAE;EACnD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIyH,mCAAmC,CAACxpD,cAAc,EAAE2oD,KAAK,EAAE;IACvD,IAAA5V,uCAAiB,EAAC/yC,cAAc,EAAE,QAAQ,EAAE,gBAAgB,CAAC;IAC7D,IAAI2oD,KAAK,KAAKtyD,SAAS,EAAE;MACrB,IAAA08C,uCAAiB,EAAC4V,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC;IAC/C;IACA,IAAI;MACA,IAAI,CAAC5K,eAAe,CAACyL,mCAAmC,CAACxpD,cAAc,EAAE2oD,KAAK,CAAC;MAC/E,OAAO,IAAI;IACf,CAAC,CACD,OAAOrsC,CAAC,EAAE;MACN,OAAO,KAAK;IAChB;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACImtC,qBA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B,cAAc,CAAC6f,sBAAsB,CAACwT,WAAW,CAAC;EACzF;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAGIC,YAAY,CAACD,WAAW,EAAE;IACtB,IAAAxX,uCAAiB,EAACwX,WAAW,EAAE,QAAQ,EAAE,KAAK,CAAC;IAC/C,OAAO,IAAI,CAAC1M,UAAU,CAACxoB,WAAW,CAAC6B,cAAc,CAAC6e,kBAAkB,CAACwU,WAAW,CAAC;EACrF;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIE,YAAY,CAACF,WAAW,EAAE;IACtB,IAAAxX,uCAAiB,EAACwX,WAAW,EAAE,QAAQ,EAAE,KAAK,CAAC;IAC/C,OAAO,IAAAvT,kCAAkB,EAACuT,WAAW,CAAC;EAC1C;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIG,EAAE,CAACC,KAAK,EAAEC,QAAQ,EAAE;IAChB,IAAI,CAACxM,QAAQ,CAACsM,EAAE,CAACC,KAAK,EAAEC,QAAQ,CAAC;EACrC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,IAAI,CAACF,KAAK,EAAEC,QAAQ,EAAE;IAClB,IAAI,CAACxM,QAAQ,CAACyM,IAAI,CAACF,KAAK,EAAEC,QAAQ,CAAC;EACvC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIE,GAAG,CAACH,KAAK,EAAEC,QAAQ,EAAE;IACjB,IAAI,CAACxM,QAAQ,CAAC0M,GAAG,CAACH,KAAK,EAAEC,QAAQ,CAA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","file":"hyperformula.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"chevrotain\"), require(\"unorm\"), require(\"tiny-emitter\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"HyperFormula\", [\"chevrotain\", \"unorm\", \"tiny-emitter\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"HyperFormula\"] = factory(require(\"chevrotain\"), require(\"unorm\"), require(\"tiny-emitter\"));\n\telse\n\t\troot[\"HyperFormula\"] = factory(root[\"chevrotain\"], root[\"unorm\"], root[\"TinyEmitter\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__83__, __WEBPACK_EXTERNAL_MODULE__101__, __WEBPACK_EXTERNAL_MODULE__169__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, CellType, CellValueDetailedType, CellValueType, ErrorType } from './Cell';\r\nimport { DetailedCellError } from './CellValue';\r\nimport { Config } from './Config';\r\nimport { AlwaysDense, AlwaysSparse, DenseSparseChooseBasedOnThreshold } from './DependencyGraph/AddressMapping/ChooseAddressMappingPolicy';\r\nimport { ConfigValueTooBigError, ConfigValueTooSmallError, EvaluationSuspendedError, ExpectedOneOfValuesError, ExpectedValueOfTypeError, FunctionPluginValidationError, InvalidAddressError, InvalidArgumentsError, LanguageAlreadyRegisteredError, LanguageNotRegisteredError, MissingTranslationError, NamedExpressionDoesNotExistError, NamedExpressionNameIsAlreadyTakenError, NamedExpressionNameIsInvalidError, NoOperationToRedoError, NoOperationToUndoError, NoRelativeAddressesAllowedError, NoSheetWithIdError, NoSheetWithNameError, NotAFormulaError, NothingToPasteError, ProtectedFunctionTranslationError, SheetNameAlreadyTakenError, SheetSizeLimitExceededError, SourceLocationHasArrayError, TargetLocationHasArrayError, UnableToParseError } from './errors';\r\nimport { ExportedCellChange, ExportedNamedExpressionChange } from './Exporter';\r\nimport { HyperFormula } from './HyperFormula';\r\nimport enGB from './i18n/languages/enGB';\r\nimport { FunctionPlugin } from './interpreter';\r\nimport * as plugins from './interpreter/plugin';\r\nimport { SimpleRangeValue } from './interpreter/SimpleRangeValue';\r\n/** @internal */\r\nclass HyperFormulaNS extends HyperFormula {\r\n}\r\nHyperFormulaNS.HyperFormula = HyperFormula;\r\nHyperFormulaNS.ErrorType = ErrorType;\r\nHyperFormulaNS.CellType = CellType;\r\nHyperFormulaNS.CellValueType = CellValueType;\r\nHyperFormulaNS.CellValueDetailedType = CellValueDetailedType;\r\nHyperFormulaNS.DetailedCellError = DetailedCellError;\r\nHyperFormulaNS.ExportedCellChange = ExportedCellChange;\r\nHyperFormulaNS.ExportedNamedExpressionChange = ExportedNamedExpressionChange;\r\nHyperFormulaNS.ConfigValueTooBigError = ConfigValueTooBigError;\r\nHyperFormulaNS.ConfigValueTooSmallError = ConfigValueTooSmallError;\r\nHyperFormulaNS.EvaluationSuspendedError = EvaluationSuspendedError;\r\nHyperFormulaNS.ExpectedOneOfValuesError = ExpectedOneOfValuesError;\r\nHyperFormulaNS.ExpectedValueOfTypeError = ExpectedValueOfTypeError;\r\nHyperFormulaNS.FunctionPlugin = FunctionPlugin;\r\nHyperFormulaNS.FunctionPluginValidationError = FunctionPluginValidationError;\r\nHyperFormulaNS.InvalidAddressError = InvalidAddressError;\r\nHyperFormulaNS.InvalidArgumentsError = InvalidArgumentsError;\r\nHyperFormulaNS.LanguageNotRegisteredError = LanguageNotRegisteredError;\r\nHyperFormulaNS.LanguageAlreadyRegisteredError = LanguageAlreadyRegisteredError;\r\nHyperFormulaNS.MissingTranslationError = MissingTranslationError;\r\nHyperFormulaNS.NamedExpressionDoesNotExistError = NamedExpressionDoesNotExistError;\r\nHyperFormulaNS.NamedExpressionNameIsAlreadyTakenError = NamedExpressionNameIsAlreadyTakenError;\r\nHyperFormulaNS.NamedExpressionNameIsInvalidError = NamedExpressionNameIsInvalidError;\r\nHyperFormulaNS.NoOperationToRedoError = NoOperationToRedoError;\r\nHyperFormulaNS.NoOperationToUndoError = NoOperationToUndoError;\r\nHyperFormulaNS.NoRelativeAddressesAllowedError = NoRelativeAddressesAllowedError;\r\nHyperFormulaNS.NoSheetWithIdError = NoSheetWithIdError;\r\nHyperFormulaNS.NoSheetWithNameError = NoSheetWithNameError;\r\nHyperFormulaNS.NotAFormulaError = NotAFormulaError;\r\nHyperFormulaNS.NothingToPasteError = NothingToPasteError;\r\nHyperFormulaNS.ProtectedFunctionTranslationError = ProtectedFunctionTranslationError;\r\nHyperFormulaNS.SheetNameAlreadyTakenError = SheetNameAlreadyTakenError;\r\nHyperFormulaNS.SheetSizeLimitExceededError = SheetSizeLimitExceededError;\r\nHyperFormulaNS.SourceLocationHasArrayError = SourceLocationHasArrayError;\r\nHyperFormulaNS.TargetLocationHasArrayError = TargetLocationHasArrayError;\r\nHyperFormulaNS.UnableToParseError = UnableToParseError;\r\nconst defaultLanguage = Config.defaultConfig.language;\r\nHyperFormula.registerLanguage(defaultLanguage, enGB);\r\nHyperFormula.languages[enGB.langCode] = enGB;\r\nfor (const pluginName of Object.getOwnPropertyNames(plugins)) {\r\n    if (!pluginName.startsWith('_')) {\r\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\r\n        // @ts-ignore\r\n        HyperFormula.registerFunctionPlugin(plugins[pluginName]);\r\n    }\r\n}\r\nexport default HyperFormulaNS;\r\nexport { AlwaysDense, AlwaysSparse, DenseSparseChooseBasedOnThreshold, HyperFormula, CellType, CellValueType, CellValueDetailedType, ErrorType, ExportedCellChange, ExportedNamedExpressionChange, DetailedCellError, CellError, ConfigValueTooBigError, ConfigValueTooSmallError, EvaluationSuspendedError, ExpectedOneOfValuesError, ExpectedValueOfTypeError, FunctionPlugin, FunctionPluginValidationError, InvalidAddressError, InvalidArgumentsError, LanguageAlreadyRegisteredError, LanguageNotRegisteredError, MissingTranslationError, NamedExpressionDoesNotExistError, NamedExpressionNameIsAlreadyTakenError, NamedExpressionNameIsInvalidError, NoOperationToRedoError, NoOperationToUndoError, NoRelativeAddressesAllowedError, NoSheetWithIdError, NoSheetWithNameError, NotAFormulaError, NothingToPasteError, ProtectedFunctionTranslationError, SimpleRangeValue, SheetNameAlreadyTakenError, SheetSizeLimitExceededError, SourceLocationHasArrayError, TargetLocationHasArrayError, UnableToParseError, };\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArrayVertex, FormulaCellVertex, ParsingErrorVertex, ValueCellVertex } from './DependencyGraph';\r\nimport { ErrorMessage } from './error-message';\r\nimport { EmptyValue, getFormatOfExtendedNumber, getTypeOfExtendedNumber, isExtendedNumber, NumberType, } from './interpreter/InterpreterValue';\r\nimport { SimpleRangeValue } from './interpreter/SimpleRangeValue';\r\n/**\r\n * Possible errors returned by our interpreter.\r\n */\r\nexport var ErrorType;\r\n(function (ErrorType) {\r\n    /** Division by zero. */\r\n    ErrorType[\"DIV_BY_ZERO\"] = \"DIV_BY_ZERO\";\r\n    /** Unknown function name. */\r\n    ErrorType[\"NAME\"] = \"NAME\";\r\n    ErrorType[\"VALUE\"] = \"VALUE\";\r\n    ErrorType[\"NUM\"] = \"NUM\";\r\n    ErrorType[\"NA\"] = \"NA\";\r\n    /** Cyclic dependency. */\r\n    ErrorType[\"CYCLE\"] = \"CYCLE\";\r\n    /** Wrong address reference. */\r\n    ErrorType[\"REF\"] = \"REF\";\r\n    /** Array spill error. */\r\n    ErrorType[\"SPILL\"] = \"SPILL\";\r\n    /** Invalid/missing licence error. */\r\n    ErrorType[\"LIC\"] = \"LIC\";\r\n    /** Generic error */\r\n    ErrorType[\"ERROR\"] = \"ERROR\";\r\n})(ErrorType || (ErrorType = {}));\r\nexport var CellType;\r\n(function (CellType) {\r\n    CellType[\"FORMULA\"] = \"FORMULA\";\r\n    CellType[\"VALUE\"] = \"VALUE\";\r\n    CellType[\"ARRAY\"] = \"ARRAY\";\r\n    CellType[\"EMPTY\"] = \"EMPTY\";\r\n    CellType[\"ARRAYFORMULA\"] = \"ARRAYFORMULA\";\r\n})(CellType || (CellType = {}));\r\nexport const getCellType = (vertex, address) => {\r\n    if (vertex instanceof ArrayVertex) {\r\n        if (vertex.isLeftCorner(address)) {\r\n            return CellType.ARRAYFORMULA;\r\n        }\r\n        else {\r\n            return CellType.ARRAY;\r\n        }\r\n    }\r\n    if (vertex instanceof FormulaCellVertex || vertex instanceof ParsingErrorVertex) {\r\n        return CellType.FORMULA;\r\n    }\r\n    if (vertex instanceof ValueCellVertex) {\r\n        return CellType.VALUE;\r\n    }\r\n    return CellType.EMPTY;\r\n};\r\nexport var CellValueNoNumber;\r\n(function (CellValueNoNumber) {\r\n    CellValueNoNumber[\"EMPTY\"] = \"EMPTY\";\r\n    CellValueNoNumber[\"NUMBER\"] = \"NUMBER\";\r\n    CellValueNoNumber[\"STRING\"] = \"STRING\";\r\n    CellValueNoNumber[\"BOOLEAN\"] = \"BOOLEAN\";\r\n    CellValueNoNumber[\"ERROR\"] = \"ERROR\";\r\n})(CellValueNoNumber || (CellValueNoNumber = {}));\r\nexport var CellValueJustNumber;\r\n(function (CellValueJustNumber) {\r\n    CellValueJustNumber[\"NUMBER\"] = \"NUMBER\";\r\n})(CellValueJustNumber || (CellValueJustNumber = {}));\r\nexport const CellValueType = Object.assign(Object.assign({}, CellValueNoNumber), CellValueJustNumber);\r\nexport const CellValueDetailedType = Object.assign(Object.assign({}, CellValueNoNumber), NumberType);\r\nexport const CellValueTypeOrd = (arg) => {\r\n    switch (arg) {\r\n        case CellValueType.EMPTY:\r\n            return 0;\r\n        case CellValueType.NUMBER:\r\n            return 1;\r\n        case CellValueType.STRING:\r\n            return 2;\r\n        case CellValueType.BOOLEAN:\r\n            return 3;\r\n        case CellValueType.ERROR:\r\n            return 4;\r\n    }\r\n    throw new Error('Cell value not computed');\r\n};\r\nexport const getCellValueType = (cellValue) => {\r\n    if (cellValue === EmptyValue) {\r\n        return CellValueType.EMPTY;\r\n    }\r\n    if (cellValue instanceof CellError || cellValue instanceof SimpleRangeValue) {\r\n        return CellValueType.ERROR;\r\n    }\r\n    if (typeof cellValue === 'string') {\r\n        return CellValueType.STRING;\r\n    }\r\n    else if (isExtendedNumber(cellValue)) {\r\n        return CellValueType.NUMBER;\r\n    }\r\n    else if (typeof cellValue === 'boolean') {\r\n        return CellValueType.BOOLEAN;\r\n    }\r\n    throw new Error('Cell value not computed');\r\n};\r\nexport const getCellValueDetailedType = (cellValue) => {\r\n    if (isExtendedNumber(cellValue)) {\r\n        return getTypeOfExtendedNumber(cellValue);\r\n    }\r\n    else {\r\n        return getCellValueType(cellValue);\r\n    }\r\n};\r\nexport const getCellValueFormat = (cellValue) => {\r\n    if (isExtendedNumber(cellValue)) {\r\n        return getFormatOfExtendedNumber(cellValue);\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n};\r\nexport class CellError {\r\n    constructor(type, message, root) {\r\n        this.type = type;\r\n        this.message = message;\r\n        this.root = root;\r\n    }\r\n    static parsingError() {\r\n        return new CellError(ErrorType.ERROR, ErrorMessage.ParseError);\r\n    }\r\n    attachRootVertex(vertex) {\r\n        if (this.root === undefined) {\r\n            return new CellError(this.type, this.message, vertex);\r\n        }\r\n        else {\r\n            return this;\r\n        }\r\n    }\r\n}\r\nexport const simpleRowAddress = (sheet, row) => ({ sheet, row });\r\nexport const invalidSimpleRowAddress = (address) => (address.row < 0);\r\nexport const simpleColumnAddress = (sheet, col) => ({ sheet, col });\r\nexport const invalidSimpleColumnAddress = (address) => (address.col < 0);\r\nexport const simpleCellAddress = (sheet, col, row) => ({ sheet, col, row });\r\nexport const invalidSimpleCellAddress = (address) => (address.col < 0 || address.row < 0);\r\nexport const movedSimpleCellAddress = (address, toSheet, toRight, toBottom) => {\r\n    return simpleCellAddress(toSheet, address.col + toRight, address.row + toBottom);\r\n};\r\nexport const addressKey = (address) => `${address.sheet},${address.row},${address.col}`;\r\nexport function isSimpleCellAddress(obj) {\r\n    if (obj && (typeof obj === 'object' || typeof obj === 'function')) {\r\n        return 'col' in obj && typeof obj.col === 'number' && 'row' in obj && typeof obj.row === 'number' && 'sheet' in obj && typeof obj.sheet === 'number';\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nexport const absoluteSheetReference = (address, baseAddress) => {\r\n    var _a;\r\n    return (_a = address.sheet) !== null && _a !== void 0 ? _a : baseAddress.sheet;\r\n};\r\nexport const equalSimpleCellAddress = (left, right) => {\r\n    return left.sheet === right.sheet && left.col === right.col && left.row === right.row;\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport { DependencyGraph } from './DependencyGraph';\r\nexport { AddressMapping } from './AddressMapping/AddressMapping';\r\nexport { Graph } from './Graph';\r\nexport { RangeMapping } from './RangeMapping';\r\nexport { SheetMapping } from './SheetMapping';\r\nexport { ArrayMapping } from './ArrayMapping';\r\nexport { FormulaCellVertex } from './FormulaCellVertex';\r\nexport { EmptyCellVertex } from './EmptyCellVertex';\r\nexport { ValueCellVertex } from './ValueCellVertex';\r\nexport { ParsingErrorVertex } from './ParsingErrorVertex';\r\nexport { RangeVertex } from './RangeVertex';\r\nexport { SparseStrategy } from './AddressMapping/SparseStrategy';\r\nexport { DenseStrategy } from './AddressMapping/DenseStrategy';\r\nexport { ArrayVertex } from './FormulaCellVertex';\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange, simpleCellRange } from '../AbsoluteCellRange';\r\nimport { absolutizeDependencies } from '../absolutizeDependencies';\r\nimport { CellError, ErrorType, isSimpleCellAddress, simpleCellAddress } from '../Cell';\r\nimport { ContentChanges } from '../ContentChanges';\r\nimport { ErrorMessage } from '../error-message';\r\nimport { EmptyValue, getRawValue } from '../interpreter/InterpreterValue';\r\nimport { SimpleRangeValue } from '../interpreter/SimpleRangeValue';\r\nimport { collectDependencies, NamedExpressionDependency } from '../parser';\r\nimport { ColumnsSpan, RowsSpan } from '../Span';\r\nimport { StatType } from '../statistics';\r\nimport { ArrayVertex, EmptyCellVertex, FormulaCellVertex, RangeVertex, ValueCellVertex, } from './';\r\nimport { AddressMapping } from './AddressMapping/AddressMapping';\r\nimport { ArrayMapping } from './ArrayMapping';\r\nimport { collectAddressesDependentToRange } from './collectAddressesDependentToRange';\r\nimport { FormulaVertex } from './FormulaCellVertex';\r\nimport { Graph } from './Graph';\r\nimport { RangeMapping } from './RangeMapping';\r\nimport { SheetMapping } from './SheetMapping';\r\nexport class DependencyGraph {\r\n    constructor(addressMapping, rangeMapping, sheetMapping, arrayMapping, stats, lazilyTransformingAstService, functionRegistry, namedExpressions) {\r\n        this.addressMapping = addressMapping;\r\n        this.rangeMapping = rangeMapping;\r\n        this.sheetMapping = sheetMapping;\r\n        this.arrayMapping = arrayMapping;\r\n        this.stats = stats;\r\n        this.lazilyTransformingAstService = lazilyTransformingAstService;\r\n        this.functionRegistry = functionRegistry;\r\n        this.namedExpressions = namedExpressions;\r\n        this.changes = ContentChanges.empty();\r\n        this.dependencyQueryAddresses = (vertex) => {\r\n            if (vertex instanceof RangeVertex) {\r\n                return this.rangeDependencyQuery(vertex).map(([address, _]) => address);\r\n            }\r\n            else {\r\n                const dependenciesResult = this.formulaDependencyQuery(vertex);\r\n                if (dependenciesResult !== undefined) {\r\n                    const [address, dependencies] = dependenciesResult;\r\n                    return dependencies.map((dependency) => {\r\n                        if (dependency instanceof NamedExpressionDependency) {\r\n                            return this.namedExpressions.namedExpressionOrPlaceholder(dependency.name, address.sheet).address;\r\n                        }\r\n                        else if (isSimpleCellAddress(dependency)) {\r\n                            return dependency;\r\n                        }\r\n                        else {\r\n                            return simpleCellRange(dependency.start, dependency.end);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    return [];\r\n                }\r\n            }\r\n        };\r\n        this.dependencyQueryVertices = (vertex) => {\r\n            if (vertex instanceof RangeVertex) {\r\n                return this.rangeDependencyQuery(vertex).map(([_, v]) => v);\r\n            }\r\n            else {\r\n                const dependenciesResult = this.formulaDependencyQuery(vertex);\r\n                if (dependenciesResult !== undefined) {\r\n                    const [address, dependencies] = dependenciesResult;\r\n                    return dependencies.map((dependency) => {\r\n                        if (dependency instanceof AbsoluteCellRange) {\r\n                            return this.rangeMapping.fetchRange(dependency.start, dependency.end);\r\n                        }\r\n                        else if (dependency instanceof NamedExpressionDependency) {\r\n                            const namedExpression = this.namedExpressions.namedExpressionOrPlaceholder(dependency.name, address.sheet);\r\n                            return this.addressMapping.fetchCell(namedExpression.address);\r\n                        }\r\n                        else {\r\n                            return this.addressMapping.fetchCell(dependency);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    return [];\r\n                }\r\n            }\r\n        };\r\n        this.rangeDependencyQuery = (vertex) => {\r\n            const allDeps = [];\r\n            const { smallerRangeVertex, restRange } = this.rangeMapping.findSmallerRange(vertex.range); //checking whether this range was splitted by bruteForce or not\r\n            let range;\r\n            if (smallerRangeVertex !== undefined && this.graph.adjacentNodes(smallerRangeVertex).has(vertex)) {\r\n                range = restRange;\r\n                allDeps.push([new AbsoluteCellRange(smallerRangeVertex.start, smallerRangeVertex.end), smallerRangeVertex]);\r\n            }\r\n            else { //did we ever need to use full range\r\n                range = vertex.range;\r\n            }\r\n            for (const address of range.addresses(this)) {\r\n                const cell = this.addressMapping.getCell(address);\r\n                if (cell instanceof EmptyCellVertex) {\r\n                    cell.address = address;\r\n                }\r\n                if (cell !== undefined) {\r\n                    allDeps.push([address, cell]);\r\n                }\r\n            }\r\n            return allDeps;\r\n        };\r\n        this.formulaDependencyQuery = (vertex) => {\r\n            let formula;\r\n            let address;\r\n            if (vertex instanceof FormulaVertex) {\r\n                address = vertex.getAddress(this.lazilyTransformingAstService);\r\n                formula = vertex.getFormula(this.lazilyTransformingAstService);\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n            const deps = collectDependencies(formula, this.functionRegistry);\r\n            return [address, absolutizeDependencies(deps, address)];\r\n        };\r\n        this.graph = new Graph(this.dependencyQueryVertices);\r\n    }\r\n    /**\r\n     * Invariants:\r\n     * - empty cell has associated EmptyCellVertex if and only if it is a dependency (possibly indirect, through range) to some formula\r\n     */\r\n    static buildEmpty(lazilyTransformingAstService, config, functionRegistry, namedExpressions, stats) {\r\n        return new DependencyGraph(new AddressMapping(config.chooseAddressMappingPolicy), new RangeMapping(), new SheetMapping(config.translationPackage), new ArrayMapping(), stats, lazilyTransformingAstService, functionRegistry, namedExpressions);\r\n    }\r\n    setFormulaToCell(address, ast, dependencies, size, hasVolatileFunction, hasStructuralChangeFunction) {\r\n        const newVertex = FormulaVertex.fromAst(ast, address, size, this.lazilyTransformingAstService.version());\r\n        this.exchangeOrAddFormulaVertex(newVertex);\r\n        this.processCellDependencies(dependencies, newVertex);\r\n        this.graph.markNodeAsSpecialRecentlyChanged(newVertex);\r\n        if (hasVolatileFunction) {\r\n            this.markAsVolatile(newVertex);\r\n        }\r\n        if (hasStructuralChangeFunction) {\r\n            this.markAsDependentOnStructureChange(newVertex);\r\n        }\r\n        this.correctInfiniteRangesDependency(address);\r\n        return this.getAndClearContentChanges();\r\n    }\r\n    setParsingErrorToCell(address, errorVertex) {\r\n        const vertex = this.shrinkPossibleArrayAndGetCell(address);\r\n        this.exchangeOrAddGraphNode(vertex, errorVertex);\r\n        this.addressMapping.setCell(address, errorVertex);\r\n        this.graph.markNodeAsSpecialRecentlyChanged(errorVertex);\r\n        this.correctInfiniteRangesDependency(address);\r\n        return this.getAndClearContentChanges();\r\n    }\r\n    setValueToCell(address, value) {\r\n        const vertex = this.shrinkPossibleArrayAndGetCell(address);\r\n        if (vertex instanceof ArrayVertex) {\r\n            this.arrayMapping.removeArray(vertex.getRange());\r\n        }\r\n        if (vertex instanceof ValueCellVertex) {\r\n            const oldValues = vertex.getValues();\r\n            if (oldValues.rawValue !== value.rawValue) {\r\n                vertex.setValues(value);\r\n                this.graph.markNodeAsSpecialRecentlyChanged(vertex);\r\n            }\r\n        }\r\n        else {\r\n            const newVertex = new ValueCellVertex(value.parsedValue, value.rawValue);\r\n            this.exchangeOrAddGraphNode(vertex, newVertex);\r\n            this.addressMapping.setCell(address, newVertex);\r\n            this.graph.markNodeAsSpecialRecentlyChanged(newVertex);\r\n        }\r\n        this.correctInfiniteRangesDependency(address);\r\n        return this.getAndClearContentChanges();\r\n    }\r\n    setCellEmpty(address) {\r\n        const vertex = this.shrinkPossibleArrayAndGetCell(address);\r\n        if (vertex === undefined) {\r\n            return ContentChanges.empty();\r\n        }\r\n        if (this.graph.adjacentNodes(vertex).size > 0) {\r\n            const emptyVertex = new EmptyCellVertex(address);\r\n            this.exchangeGraphNode(vertex, emptyVertex);\r\n            if (this.graph.adjacentNodesCount(emptyVertex) === 0) {\r\n                this.removeVertex(emptyVertex);\r\n                this.addressMapping.removeCell(address);\r\n            }\r\n            else {\r\n                this.graph.markNodeAsSpecialRecentlyChanged(emptyVertex);\r\n                this.addressMapping.setCell(address, emptyVertex);\r\n            }\r\n        }\r\n        else {\r\n            this.removeVertex(vertex);\r\n            this.addressMapping.removeCell(address);\r\n        }\r\n        return this.getAndClearContentChanges();\r\n    }\r\n    ensureThatVertexIsNonArrayCellVertex(vertex) {\r\n        if (vertex instanceof ArrayVertex) {\r\n            throw new Error('Illegal operation');\r\n        }\r\n    }\r\n    clearRecentlyChangedVertices() {\r\n        this.graph.clearSpecialNodesRecentlyChanged();\r\n    }\r\n    verticesToRecompute() {\r\n        return new Set([...this.graph.specialNodesRecentlyChanged, ...this.volatileVertices()]);\r\n    }\r\n    processCellDependencies(cellDependencies, endVertex) {\r\n        cellDependencies.forEach((dep) => {\r\n            if (dep instanceof AbsoluteCellRange) {\r\n                const range = dep;\r\n                let rangeVertex = this.getRange(range.start, range.end);\r\n                if (rangeVertex === undefined) {\r\n                    rangeVertex = new RangeVertex(range);\r\n                    this.rangeMapping.setRange(rangeVertex);\r\n                }\r\n                this.graph.addNode(rangeVertex);\r\n                if (!range.isFinite()) {\r\n                    this.graph.markNodeAsInfiniteRange(rangeVertex);\r\n                }\r\n                const { smallerRangeVertex, restRange } = this.rangeMapping.findSmallerRange(range);\r\n                if (smallerRangeVertex !== undefined) {\r\n                    this.graph.addEdge(smallerRangeVertex, rangeVertex);\r\n                    if (rangeVertex.bruteForce) {\r\n                        rangeVertex.bruteForce = false;\r\n                        for (const cellFromRange of range.addresses(this)) { //if we ever switch heuristic to processing by sorted sizes, this would be unnecessary\r\n                            this.graph.removeEdge(this.fetchCell(cellFromRange), rangeVertex);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    rangeVertex.bruteForce = true;\r\n                }\r\n                const array = this.arrayMapping.getArray(restRange);\r\n                if (array !== undefined) {\r\n                    this.graph.addEdge(array, rangeVertex);\r\n                }\r\n                else {\r\n                    for (const cellFromRange of restRange.addresses(this)) {\r\n                        this.graph.addEdge(this.fetchCellOrCreateEmpty(cellFromRange), rangeVertex);\r\n                    }\r\n                }\r\n                this.graph.addEdge(rangeVertex, endVertex);\r\n                if (range.isFinite()) {\r\n                    this.correctInfiniteRangesDependenciesByRangeVertex(rangeVertex);\r\n                }\r\n            }\r\n            else if (dep instanceof NamedExpressionDependency) {\r\n                const sheetOfVertex = endVertex.getAddress(this.lazilyTransformingAstService).sheet;\r\n                const namedExpressionVertex = this.fetchNamedExpressionVertex(dep.name, sheetOfVertex);\r\n                this.graph.addEdge(namedExpressionVertex, endVertex);\r\n            }\r\n            else {\r\n                this.graph.addEdge(this.fetchCellOrCreateEmpty(dep), endVertex);\r\n            }\r\n        });\r\n    }\r\n    fetchNamedExpressionVertex(expressionName, sheetId) {\r\n        const namedExpression = this.namedExpressions.namedExpressionOrPlaceholder(expressionName, sheetId);\r\n        return this.fetchCellOrCreateEmpty(namedExpression.address);\r\n    }\r\n    exchangeNode(addressFrom, addressTo) {\r\n        const vertexFrom = this.fetchCellOrCreateEmpty(addressFrom);\r\n        const vertexTo = this.fetchCellOrCreateEmpty(addressTo);\r\n        this.addressMapping.removeCell(addressFrom);\r\n        this.exchangeGraphNode(vertexFrom, vertexTo);\r\n    }\r\n    correctInfiniteRangesDependency(address) {\r\n        let vertex = undefined;\r\n        for (const range of this.graph.infiniteRanges) {\r\n            const infiniteRangeVertex = range;\r\n            if (infiniteRangeVertex.range.addressInRange(address)) {\r\n                vertex = vertex !== null && vertex !== void 0 ? vertex : this.fetchCellOrCreateEmpty(address);\r\n                this.graph.addEdge(vertex, infiniteRangeVertex);\r\n            }\r\n        }\r\n    }\r\n    fetchCellOrCreateEmpty(address) {\r\n        let vertex = this.addressMapping.getCell(address);\r\n        if (vertex === undefined) {\r\n            vertex = new EmptyCellVertex(address);\r\n            this.graph.addNode(vertex);\r\n            this.addressMapping.setCell(address, vertex);\r\n        }\r\n        return vertex;\r\n    }\r\n    removeRows(removedRows) {\r\n        this.stats.measure(StatType.ADJUSTING_GRAPH, () => {\r\n            for (const [address, vertex] of this.addressMapping.entriesFromRowsSpan(removedRows)) {\r\n                for (const adjacentNode of this.graph.adjacentNodes(vertex)) {\r\n                    this.graph.markNodeAsSpecialRecentlyChanged(adjacentNode);\r\n                }\r\n                if (vertex instanceof ArrayVertex) {\r\n                    if (vertex.isLeftCorner(address)) {\r\n                        this.shrinkArrayToCorner(vertex);\r\n                        this.arrayMapping.removeArray(vertex.getRange());\r\n                    }\r\n                    else {\r\n                        continue;\r\n                    }\r\n                }\r\n                this.removeVertex(vertex);\r\n            }\r\n        });\r\n        this.stats.measure(StatType.ADJUSTING_ADDRESS_MAPPING, () => {\r\n            this.addressMapping.removeRows(removedRows);\r\n        });\r\n        const affectedArrays = this.stats.measure(StatType.ADJUSTING_RANGES, () => {\r\n            const affectedRanges = this.truncateRanges(removedRows, address => address.row);\r\n            return this.getArrayVerticesRelatedToRanges(affectedRanges);\r\n        });\r\n        this.stats.measure(StatType.ADJUSTING_ARRAY_MAPPING, () => {\r\n            this.fixArraysAfterRemovingRows(removedRows.sheet, removedRows.rowStart, removedRows.numberOfRows);\r\n        });\r\n        this.addStructuralNodesToChangeSet();\r\n        return {\r\n            affectedArrays,\r\n            contentChanges: this.getAndClearContentChanges()\r\n        };\r\n    }\r\n    removeSheet(removedSheetId) {\r\n        const arrays = new Set();\r\n        for (const [adr, vertex] of this.addressMapping.sheetEntries(removedSheetId)) {\r\n            if (vertex instanceof ArrayVertex) {\r\n                if (arrays.has(vertex)) {\r\n                    continue;\r\n                }\r\n                else {\r\n                    arrays.add(vertex);\r\n                }\r\n            }\r\n            for (const adjacentNode of this.graph.adjacentNodes(vertex)) {\r\n                this.graph.markNodeAsSpecialRecentlyChanged(adjacentNode);\r\n            }\r\n            this.removeVertex(vertex);\r\n            this.addressMapping.removeCell(adr);\r\n        }\r\n        this.stats.measure(StatType.ADJUSTING_ARRAY_MAPPING, () => {\r\n            for (const array of arrays.values()) {\r\n                this.arrayMapping.removeArray(array.getRange());\r\n            }\r\n        });\r\n        this.stats.measure(StatType.ADJUSTING_RANGES, () => {\r\n            const rangesToRemove = this.rangeMapping.removeRangesInSheet(removedSheetId);\r\n            for (const range of rangesToRemove) {\r\n                this.removeVertex(range);\r\n            }\r\n            this.stats.measure(StatType.ADJUSTING_ADDRESS_MAPPING, () => {\r\n                this.addressMapping.removeSheet(removedSheetId);\r\n            });\r\n        });\r\n        this.addStructuralNodesToChangeSet();\r\n    }\r\n    clearSheet(sheetId) {\r\n        const arrays = new Set();\r\n        for (const [address, vertex] of this.addressMapping.sheetEntries(sheetId)) {\r\n            if (vertex instanceof ArrayVertex) {\r\n                arrays.add(vertex);\r\n            }\r\n            else {\r\n                this.setCellEmpty(address);\r\n            }\r\n        }\r\n        for (const array of arrays.values()) {\r\n            this.setArrayEmpty(array);\r\n        }\r\n        this.addStructuralNodesToChangeSet();\r\n    }\r\n    removeColumns(removedColumns) {\r\n        this.stats.measure(StatType.ADJUSTING_GRAPH, () => {\r\n            for (const [address, vertex] of this.addressMapping.entriesFromColumnsSpan(removedColumns)) {\r\n                for (const adjacentNode of this.graph.adjacentNodes(vertex)) {\r\n                    this.graph.markNodeAsSpecialRecentlyChanged(adjacentNode);\r\n                }\r\n                if (vertex instanceof ArrayVertex) {\r\n                    if (vertex.isLeftCorner(address)) {\r\n                        this.shrinkArrayToCorner(vertex);\r\n                        this.arrayMapping.removeArray(vertex.getRange());\r\n                    }\r\n                    else {\r\n                        continue;\r\n                    }\r\n                }\r\n                this.removeVertex(vertex);\r\n            }\r\n        });\r\n        this.stats.measure(StatType.ADJUSTING_ADDRESS_MAPPING, () => {\r\n            this.addressMapping.removeColumns(removedColumns);\r\n        });\r\n        const affectedArrays = this.stats.measure(StatType.ADJUSTING_RANGES, () => {\r\n            const affectedRanges = this.truncateRanges(removedColumns, address => address.col);\r\n            return this.getArrayVerticesRelatedToRanges(affectedRanges);\r\n        });\r\n        this.stats.measure(StatType.ADJUSTING_ARRAY_MAPPING, () => {\r\n            return this.fixArraysAfterRemovingColumns(removedColumns.sheet, removedColumns.columnStart, removedColumns.numberOfColumns);\r\n        });\r\n        this.addStructuralNodesToChangeSet();\r\n        return {\r\n            affectedArrays,\r\n            contentChanges: this.getAndClearContentChanges(),\r\n        };\r\n    }\r\n    addRows(addedRows) {\r\n        this.stats.measure(StatType.ADJUSTING_ADDRESS_MAPPING, () => {\r\n            this.addressMapping.addRows(addedRows.sheet, addedRows.rowStart, addedRows.numberOfRows);\r\n        });\r\n        const affectedArrays = this.stats.measure(StatType.ADJUSTING_RANGES, () => {\r\n            const result = this.rangeMapping.moveAllRangesInSheetAfterRowByRows(addedRows.sheet, addedRows.rowStart, addedRows.numberOfRows);\r\n            this.fixRangesWhenAddingRows(addedRows.sheet, addedRows.rowStart, addedRows.numberOfRows);\r\n            return this.getArrayVerticesRelatedToRanges(result.verticesWithChangedSize);\r\n        });\r\n        this.stats.measure(StatType.ADJUSTING_ARRAY_MAPPING, () => {\r\n            this.fixArraysAfterAddingRow(addedRows.sheet, addedRows.rowStart, addedRows.numberOfRows);\r\n        });\r\n        for (const vertex of this.addressMapping.verticesFromRowsSpan(addedRows)) {\r\n            this.graph.markNodeAsSpecialRecentlyChanged(vertex);\r\n        }\r\n        this.addStructuralNodesToChangeSet();\r\n        return { affectedArrays };\r\n    }\r\n    addColumns(addedColumns) {\r\n        this.stats.measure(StatType.ADJUSTING_ADDRESS_MAPPING, () => {\r\n            this.addressMapping.addColumns(addedColumns.sheet, addedColumns.columnStart, addedColumns.numberOfColumns);\r\n        });\r\n        const affectedArrays = this.stats.measure(StatType.ADJUSTING_RANGES, () => {\r\n            const result = this.rangeMapping.moveAllRangesInSheetAfterColumnByColumns(addedColumns.sheet, addedColumns.columnStart, addedColumns.numberOfColumns);\r\n            this.fixRangesWhenAddingColumns(addedColumns.sheet, addedColumns.columnStart, addedColumns.numberOfColumns);\r\n            return this.getArrayVerticesRelatedToRanges(result.verticesWithChangedSize);\r\n        });\r\n        this.stats.measure(StatType.ADJUSTING_ARRAY_MAPPING, () => {\r\n            return this.fixArraysAfterAddingColumn(addedColumns.sheet, addedColumns.columnStart, addedColumns.numberOfColumns);\r\n        });\r\n        for (const vertex of this.addressMapping.verticesFromColumnsSpan(addedColumns)) {\r\n            this.graph.markNodeAsSpecialRecentlyChanged(vertex);\r\n        }\r\n        this.addStructuralNodesToChangeSet();\r\n        return { affectedArrays, contentChanges: this.getAndClearContentChanges() };\r\n    }\r\n    ensureNoArrayInRange(range) {\r\n        if (this.arrayMapping.isFormulaArrayInRange(range)) {\r\n            throw Error('It is not possible to move / replace cells with array');\r\n        }\r\n    }\r\n    isThereSpaceForArray(arrayVertex) {\r\n        const range = arrayVertex.getRangeOrUndef();\r\n        if (range === undefined) {\r\n            return false;\r\n        }\r\n        for (const address of range.addresses(this)) {\r\n            const vertexUnderAddress = this.addressMapping.getCell(address);\r\n            if (vertexUnderAddress !== undefined && !(vertexUnderAddress instanceof EmptyCellVertex) && vertexUnderAddress !== arrayVertex) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    moveCells(sourceRange, toRight, toBottom, toSheet) {\r\n        for (const sourceAddress of sourceRange.addressesWithDirection(toRight, toBottom, this)) {\r\n            const targetAddress = simpleCellAddress(toSheet, sourceAddress.col + toRight, sourceAddress.row + toBottom);\r\n            let sourceVertex = this.addressMapping.getCell(sourceAddress);\r\n            const targetVertex = this.addressMapping.getCell(targetAddress);\r\n            this.addressMapping.removeCell(sourceAddress);\r\n            if (sourceVertex !== undefined) {\r\n                this.graph.markNodeAsSpecialRecentlyChanged(sourceVertex);\r\n                this.addressMapping.setCell(targetAddress, sourceVertex);\r\n                let emptyVertex = undefined;\r\n                for (const adjacentNode of this.graph.adjacentNodes(sourceVertex)) {\r\n                    if (adjacentNode instanceof RangeVertex && !sourceRange.containsRange(adjacentNode.range)) {\r\n                        emptyVertex = emptyVertex !== null && emptyVertex !== void 0 ? emptyVertex : this.fetchCellOrCreateEmpty(sourceAddress);\r\n                        this.graph.addEdge(emptyVertex, adjacentNode);\r\n                        this.graph.removeEdge(sourceVertex, adjacentNode);\r\n                    }\r\n                }\r\n                if (emptyVertex) {\r\n                    this.graph.markNodeAsSpecialRecentlyChanged(emptyVertex);\r\n                    this.addressMapping.setCell(sourceAddress, emptyVertex);\r\n                }\r\n            }\r\n            if (targetVertex !== undefined) {\r\n                if (sourceVertex === undefined) {\r\n                    this.addressMapping.removeCell(targetAddress);\r\n                }\r\n                for (const adjacentNode of this.graph.adjacentNodes(targetVertex)) {\r\n                    sourceVertex = sourceVertex !== null && sourceVertex !== void 0 ? sourceVertex : this.fetchCellOrCreateEmpty(targetAddress);\r\n                    this.graph.addEdge(sourceVertex, adjacentNode);\r\n                    this.graph.markNodeAsSpecialRecentlyChanged(sourceVertex);\r\n                }\r\n                this.removeVertex(targetVertex);\r\n            }\r\n        }\r\n        for (const rangeVertex of this.rangeMapping.rangeVerticesContainedInRange(sourceRange)) {\r\n            for (const adjacentNode of this.graph.adjacentNodes(rangeVertex)) {\r\n                if (adjacentNode instanceof RangeVertex && !sourceRange.containsRange(adjacentNode.range)) {\r\n                    this.graph.removeEdge(rangeVertex, adjacentNode);\r\n                    for (const address of rangeVertex.range.addresses(this)) {\r\n                        const newEmptyVertex = this.fetchCellOrCreateEmpty(address);\r\n                        this.graph.addEdge(newEmptyVertex, adjacentNode);\r\n                        this.addressMapping.setCell(address, newEmptyVertex);\r\n                        this.graph.markNodeAsSpecialRecentlyChanged(newEmptyVertex);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.rangeMapping.moveRangesInsideSourceRange(sourceRange, toRight, toBottom, toSheet);\r\n    }\r\n    setArrayEmpty(arrayVertex) {\r\n        const arrayRange = AbsoluteCellRange.spanFrom(arrayVertex.getAddress(this.lazilyTransformingAstService), arrayVertex.width, arrayVertex.height);\r\n        const adjacentNodes = this.graph.adjacentNodes(arrayVertex);\r\n        for (const address of arrayRange.addresses(this)) {\r\n            this.addressMapping.removeCell(address);\r\n        }\r\n        for (const adjacentNode of adjacentNodes.values()) {\r\n            const nodeDependencies = collectAddressesDependentToRange(this.functionRegistry, adjacentNode, arrayVertex.getRange(), this.lazilyTransformingAstService, this);\r\n            for (const address of nodeDependencies) {\r\n                const vertex = this.fetchCellOrCreateEmpty(address);\r\n                this.graph.addEdge(vertex, adjacentNode);\r\n            }\r\n            if (nodeDependencies.length > 0) {\r\n                this.graph.markNodeAsSpecialRecentlyChanged(adjacentNode);\r\n            }\r\n        }\r\n        this.removeVertex(arrayVertex);\r\n        this.arrayMapping.removeArray(arrayVertex.getRange());\r\n    }\r\n    addVertex(address, vertex) {\r\n        this.graph.addNode(vertex);\r\n        this.addressMapping.setCell(address, vertex);\r\n    }\r\n    addArrayVertex(address, vertex) {\r\n        this.graph.addNode(vertex);\r\n        this.setAddressMappingForArrayVertex(vertex, address);\r\n    }\r\n    *arrayFormulaNodes() {\r\n        for (const vertex of this.graph.nodes) {\r\n            if (vertex instanceof ArrayVertex) {\r\n                yield vertex;\r\n            }\r\n        }\r\n    }\r\n    *entriesFromRowsSpan(rowsSpan) {\r\n        yield* this.addressMapping.entriesFromRowsSpan(rowsSpan);\r\n    }\r\n    *entriesFromColumnsSpan(columnsSpan) {\r\n        yield* this.addressMapping.entriesFromColumnsSpan(columnsSpan);\r\n    }\r\n    existsVertex(address) {\r\n        return this.addressMapping.has(address);\r\n    }\r\n    fetchCell(address) {\r\n        return this.addressMapping.fetchCell(address);\r\n    }\r\n    getCell(address) {\r\n        return this.addressMapping.getCell(address);\r\n    }\r\n    getCellValue(address) {\r\n        return this.addressMapping.getCellValue(address);\r\n    }\r\n    getRawValue(address) {\r\n        return this.addressMapping.getRawValue(address);\r\n    }\r\n    getScalarValue(address) {\r\n        const value = this.addressMapping.getCellValue(address);\r\n        if (value instanceof SimpleRangeValue) {\r\n            return new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\r\n        }\r\n        return value;\r\n    }\r\n    existsEdge(fromNode, toNode) {\r\n        return this.graph.existsEdge(fromNode, toNode);\r\n    }\r\n    getSheetId(sheetName) {\r\n        return this.sheetMapping.fetch(sheetName);\r\n    }\r\n    getSheetHeight(sheet) {\r\n        return this.addressMapping.getHeight(sheet);\r\n    }\r\n    getSheetWidth(sheet) {\r\n        return this.addressMapping.getWidth(sheet);\r\n    }\r\n    getArray(range) {\r\n        return this.arrayMapping.getArray(range);\r\n    }\r\n    setArray(range, vertex) {\r\n        this.arrayMapping.setArray(range, vertex);\r\n    }\r\n    getRange(start, end) {\r\n        return this.rangeMapping.getRange(start, end);\r\n    }\r\n    topSortWithScc() {\r\n        return this.graph.topSortWithScc();\r\n    }\r\n    markAsVolatile(vertex) {\r\n        this.graph.markNodeAsSpecial(vertex);\r\n    }\r\n    markAsDependentOnStructureChange(vertex) {\r\n        this.graph.markNodeAsChangingWithStructure(vertex);\r\n    }\r\n    forceApplyPostponedTransformations() {\r\n        for (const vertex of this.graph.nodes.values()) {\r\n            if (vertex instanceof FormulaCellVertex) {\r\n                vertex.ensureRecentData(this.lazilyTransformingAstService);\r\n            }\r\n        }\r\n    }\r\n    volatileVertices() {\r\n        return this.graph.specialNodes;\r\n    }\r\n    getArrayVerticesRelatedToRanges(ranges) {\r\n        const arrayVertices = ranges.map(range => {\r\n            if (this.graph.hasNode(range)) {\r\n                return Array.from(this.graph.adjacentNodes(range)).filter(node => node instanceof ArrayVertex);\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        });\r\n        return new Set(...arrayVertices);\r\n    }\r\n    *rawValuesFromRange(range) {\r\n        for (const address of range.addresses(this)) {\r\n            const value = this.getScalarValue(address);\r\n            if (value !== EmptyValue) {\r\n                yield [getRawValue(value), address];\r\n            }\r\n        }\r\n    }\r\n    *entriesFromRange(range) {\r\n        for (const address of range.addresses(this)) {\r\n            yield [address, this.getCell(address)];\r\n        }\r\n    }\r\n    exchangeGraphNode(oldNode, newNode) {\r\n        this.graph.addNode(newNode);\r\n        const adjNodesStored = this.graph.adjacentNodes(oldNode);\r\n        this.removeVertex(oldNode);\r\n        adjNodesStored.forEach((adjacentNode) => {\r\n            if (this.graph.hasNode(adjacentNode)) {\r\n                this.graph.addEdge(newNode, adjacentNode);\r\n            }\r\n        });\r\n    }\r\n    exchangeOrAddGraphNode(oldNode, newNode) {\r\n        if (oldNode) {\r\n            this.exchangeGraphNode(oldNode, newNode);\r\n        }\r\n        else {\r\n            this.graph.addNode(newNode);\r\n        }\r\n    }\r\n    computeListOfValuesInRange(range) {\r\n        const values = [];\r\n        for (const cellFromRange of range.addresses(this)) {\r\n            const value = this.getScalarValue(cellFromRange);\r\n            values.push(value);\r\n        }\r\n        return values;\r\n    }\r\n    shrinkArrayToCorner(array) {\r\n        this.cleanAddressMappingUnderArray(array);\r\n        for (const adjacentVertex of this.adjacentArrayVertices(array)) {\r\n            let relevantDependencies;\r\n            if (adjacentVertex instanceof FormulaVertex) {\r\n                relevantDependencies = this.formulaDirectDependenciesToArray(adjacentVertex, array);\r\n            }\r\n            else {\r\n                relevantDependencies = this.rangeDirectDependenciesToArray(adjacentVertex, array);\r\n            }\r\n            let dependentToCorner = false;\r\n            for (const [address, vertex] of relevantDependencies) {\r\n                if (array.isLeftCorner(address)) {\r\n                    dependentToCorner = true;\r\n                }\r\n                this.graph.addEdge(vertex, adjacentVertex);\r\n                this.graph.markNodeAsSpecialRecentlyChanged(vertex);\r\n            }\r\n            if (!dependentToCorner) {\r\n                this.graph.removeEdge(array, adjacentVertex);\r\n            }\r\n        }\r\n        this.graph.markNodeAsSpecialRecentlyChanged(array);\r\n    }\r\n    isArrayInternalCell(address) {\r\n        const vertex = this.getCell(address);\r\n        return vertex instanceof ArrayVertex && !vertex.isLeftCorner(address);\r\n    }\r\n    getAndClearContentChanges() {\r\n        const changes = this.changes;\r\n        this.changes = ContentChanges.empty();\r\n        return changes;\r\n    }\r\n    getAdjacentNodesAddresses(inputVertex) {\r\n        const deps = this.graph.adjacentNodes(inputVertex);\r\n        const ret = [];\r\n        deps.forEach((vertex) => {\r\n            const castVertex = vertex;\r\n            if (castVertex instanceof RangeVertex) {\r\n                ret.push(simpleCellRange(castVertex.start, castVertex.end));\r\n            }\r\n            else {\r\n                ret.push(castVertex.getAddress(this.lazilyTransformingAstService));\r\n            }\r\n        });\r\n        return ret;\r\n    }\r\n    correctInfiniteRangesDependenciesByRangeVertex(vertex) {\r\n        for (const range of this.graph.infiniteRanges) {\r\n            const infiniteRangeVertex = range;\r\n            const intersection = vertex.range.intersectionWith(infiniteRangeVertex.range);\r\n            if (intersection === undefined) {\r\n                continue;\r\n            }\r\n            for (const address of intersection.addresses(this)) {\r\n                this.graph.addEdge(this.fetchCellOrCreateEmpty(address), range);\r\n            }\r\n        }\r\n    }\r\n    cleanAddressMappingUnderArray(vertex) {\r\n        const arrayRange = vertex.getRange();\r\n        for (const address of arrayRange.addresses(this)) {\r\n            const oldValue = vertex.getArrayCellValue(address);\r\n            if (this.getCell(address) === vertex) {\r\n                if (vertex.isLeftCorner(address)) {\r\n                    this.changes.addChange(new CellError(ErrorType.REF), address, oldValue);\r\n                }\r\n                else {\r\n                    this.addressMapping.removeCell(address);\r\n                    this.changes.addChange(EmptyValue, address, oldValue);\r\n                }\r\n            }\r\n            else {\r\n                this.changes.addChange(EmptyValue, address, oldValue);\r\n            }\r\n        }\r\n    }\r\n    *formulaDirectDependenciesToArray(vertex, array) {\r\n        var _a;\r\n        const [, formulaDependencies] = (_a = this.formulaDependencyQuery(vertex)) !== null && _a !== void 0 ? _a : [];\r\n        if (formulaDependencies === undefined) {\r\n            return;\r\n        }\r\n        for (const dependency of formulaDependencies) {\r\n            if (dependency instanceof NamedExpressionDependency || dependency instanceof AbsoluteCellRange) {\r\n                continue;\r\n            }\r\n            if (array.getRange().addressInRange(dependency)) {\r\n                const vertex = this.fetchCellOrCreateEmpty(dependency);\r\n                yield [dependency, vertex];\r\n            }\r\n        }\r\n    }\r\n    *rangeDirectDependenciesToArray(vertex, array) {\r\n        const { restRange: range } = this.rangeMapping.findSmallerRange(vertex.range);\r\n        for (const address of range.addresses(this)) {\r\n            if (array.getRange().addressInRange(address)) {\r\n                const cell = this.fetchCellOrCreateEmpty(address);\r\n                yield [address, cell];\r\n            }\r\n        }\r\n    }\r\n    *adjacentArrayVertices(vertex) {\r\n        const adjacentNodes = this.graph.adjacentNodes(vertex);\r\n        for (const item of adjacentNodes) {\r\n            if (item instanceof FormulaVertex || item instanceof RangeVertex) {\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n    addStructuralNodesToChangeSet() {\r\n        for (const vertex of this.graph.specialNodesStructuralChanges) {\r\n            this.graph.markNodeAsSpecialRecentlyChanged(vertex);\r\n        }\r\n    }\r\n    fixRangesWhenAddingRows(sheet, row, numberOfRows) {\r\n        const originalValues = Array.from(this.rangeMapping.rangesInSheet(sheet));\r\n        for (const rangeVertex of originalValues) {\r\n            if (rangeVertex.range.includesRow(row + numberOfRows)) {\r\n                if (rangeVertex.bruteForce) {\r\n                    const addedSubrangeInThatRange = rangeVertex.range.rangeWithSameWidth(row, numberOfRows);\r\n                    for (const address of addedSubrangeInThatRange.addresses(this)) {\r\n                        this.graph.addEdge(this.fetchCellOrCreateEmpty(address), rangeVertex);\r\n                    }\r\n                }\r\n                else {\r\n                    let currentRangeVertex = rangeVertex;\r\n                    let find = this.rangeMapping.findSmallerRange(currentRangeVertex.range);\r\n                    if (find.smallerRangeVertex !== undefined) {\r\n                        continue;\r\n                    }\r\n                    while (find.smallerRangeVertex === undefined) {\r\n                        const newRangeVertex = new RangeVertex(AbsoluteCellRange.spanFrom(currentRangeVertex.range.start, currentRangeVertex.range.width(), currentRangeVertex.range.height() - 1));\r\n                        this.rangeMapping.setRange(newRangeVertex);\r\n                        this.graph.addNode(newRangeVertex);\r\n                        const restRange = new AbsoluteCellRange(simpleCellAddress(currentRangeVertex.range.start.sheet, currentRangeVertex.range.start.col, currentRangeVertex.range.end.row), currentRangeVertex.range.end);\r\n                        this.addAllFromRange(restRange, currentRangeVertex);\r\n                        this.graph.addEdge(newRangeVertex, currentRangeVertex);\r\n                        currentRangeVertex = newRangeVertex;\r\n                        find = this.rangeMapping.findSmallerRange(currentRangeVertex.range);\r\n                    }\r\n                    this.graph.addEdge(find.smallerRangeVertex, currentRangeVertex);\r\n                    this.addAllFromRange(find.restRange, currentRangeVertex);\r\n                    this.graph.removeEdge(find.smallerRangeVertex, rangeVertex);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    addAllFromRange(range, vertex) {\r\n        for (const address of range.addresses(this)) {\r\n            this.graph.addEdge(this.fetchCellOrCreateEmpty(address), vertex);\r\n        }\r\n    }\r\n    fixRangesWhenAddingColumns(sheet, column, numberOfColumns) {\r\n        for (const rangeVertex of this.rangeMapping.rangesInSheet(sheet)) {\r\n            if (rangeVertex.range.includesColumn(column + numberOfColumns)) {\r\n                let subrange;\r\n                if (rangeVertex.bruteForce) {\r\n                    subrange = rangeVertex.range.rangeWithSameHeight(column, numberOfColumns);\r\n                }\r\n                else {\r\n                    subrange = AbsoluteCellRange.spanFrom(simpleCellAddress(sheet, column, rangeVertex.range.end.row), numberOfColumns, 1);\r\n                }\r\n                for (const address of subrange.addresses(this)) {\r\n                    this.graph.addEdge(this.fetchCellOrCreateEmpty(address), rangeVertex);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    exchangeOrAddFormulaVertex(vertex) {\r\n        const address = vertex.getAddress(this.lazilyTransformingAstService);\r\n        const range = AbsoluteCellRange.spanFrom(address, vertex.width, vertex.height);\r\n        const oldNode = this.shrinkPossibleArrayAndGetCell(address);\r\n        if (vertex instanceof ArrayVertex) {\r\n            this.setArray(range, vertex);\r\n        }\r\n        this.exchangeOrAddGraphNode(oldNode, vertex);\r\n        this.addressMapping.setCell(address, vertex);\r\n        if (vertex instanceof ArrayVertex) {\r\n            if (!this.isThereSpaceForArray(vertex)) {\r\n                return;\r\n            }\r\n            for (const cellAddress of range.addresses(this)) {\r\n                if (vertex.isLeftCorner(cellAddress)) {\r\n                    continue;\r\n                }\r\n                const old = this.getCell(cellAddress);\r\n                this.exchangeOrAddGraphNode(old, vertex);\r\n            }\r\n        }\r\n        for (const cellAddress of range.addresses(this)) {\r\n            this.addressMapping.setCell(cellAddress, vertex);\r\n        }\r\n    }\r\n    setAddressMappingForArrayVertex(vertex, formulaAddress) {\r\n        this.addressMapping.setCell(formulaAddress, vertex);\r\n        if (!(vertex instanceof ArrayVertex)) {\r\n            return;\r\n        }\r\n        const range = AbsoluteCellRange.spanFromOrUndef(formulaAddress, vertex.width, vertex.height);\r\n        if (range === undefined) {\r\n            return;\r\n        }\r\n        this.setArray(range, vertex);\r\n        if (!this.isThereSpaceForArray(vertex)) {\r\n            return;\r\n        }\r\n        for (const address of range.addresses(this)) {\r\n            this.addressMapping.setCell(address, vertex);\r\n        }\r\n    }\r\n    truncateRanges(span, coordinate) {\r\n        const { verticesToRemove, verticesToMerge, verticesWithChangedSize } = this.rangeMapping.truncateRanges(span, coordinate);\r\n        for (const [existingVertex, mergedVertex] of verticesToMerge) {\r\n            this.mergeRangeVertices(existingVertex, mergedVertex);\r\n        }\r\n        for (const rangeVertex of verticesToRemove) {\r\n            this.removeVertexAndCleanupDependencies(rangeVertex);\r\n        }\r\n        return verticesWithChangedSize;\r\n    }\r\n    fixArraysAfterAddingRow(sheet, rowStart, numberOfRows) {\r\n        this.arrayMapping.moveArrayVerticesAfterRowByRows(sheet, rowStart, numberOfRows);\r\n        if (rowStart <= 0) {\r\n            return;\r\n        }\r\n        for (const [, array] of this.arrayMapping.arraysInRows(RowsSpan.fromRowStartAndEnd(sheet, rowStart - 1, rowStart - 1))) {\r\n            const arrayRange = array.getRange();\r\n            for (let col = arrayRange.start.col; col <= arrayRange.end.col; ++col) {\r\n                for (let row = rowStart; row <= arrayRange.end.row; ++row) {\r\n                    const destination = simpleCellAddress(sheet, col, row);\r\n                    const source = simpleCellAddress(sheet, col, row + numberOfRows);\r\n                    const value = array.getArrayCellValue(destination);\r\n                    this.addressMapping.moveCell(source, destination);\r\n                    this.changes.addChange(EmptyValue, source, value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    fixArraysAfterRemovingRows(sheet, rowStart, numberOfRows) {\r\n        this.arrayMapping.moveArrayVerticesAfterRowByRows(sheet, rowStart, -numberOfRows);\r\n        if (rowStart <= 0) {\r\n            return;\r\n        }\r\n        for (const [, array] of this.arrayMapping.arraysInRows(RowsSpan.fromRowStartAndEnd(sheet, rowStart - 1, rowStart - 1))) {\r\n            if (this.isThereSpaceForArray(array)) {\r\n                for (const address of array.getRange().addresses(this)) {\r\n                    this.addressMapping.setCell(address, array);\r\n                }\r\n            }\r\n            else {\r\n                this.setNoSpaceIfArray(array);\r\n            }\r\n        }\r\n    }\r\n    fixArraysAfterAddingColumn(sheet, columnStart, numberOfColumns) {\r\n        this.arrayMapping.moveArrayVerticesAfterColumnByColumns(sheet, columnStart, numberOfColumns);\r\n        if (columnStart <= 0) {\r\n            return;\r\n        }\r\n        for (const [, array] of this.arrayMapping.arraysInCols(ColumnsSpan.fromColumnStartAndEnd(sheet, columnStart - 1, columnStart - 1))) {\r\n            const arrayRange = array.getRange();\r\n            for (let row = arrayRange.start.row; row <= arrayRange.end.row; ++row) {\r\n                for (let col = columnStart; col <= arrayRange.end.col; ++col) {\r\n                    const destination = simpleCellAddress(sheet, col, row);\r\n                    const source = simpleCellAddress(sheet, col + numberOfColumns, row);\r\n                    const value = array.getArrayCellValue(destination);\r\n                    this.addressMapping.moveCell(source, destination);\r\n                    this.changes.addChange(EmptyValue, source, value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    fixArraysAfterRemovingColumns(sheet, columnStart, numberOfColumns) {\r\n        this.arrayMapping.moveArrayVerticesAfterColumnByColumns(sheet, columnStart, -numberOfColumns);\r\n        if (columnStart <= 0) {\r\n            return;\r\n        }\r\n        for (const [, array] of this.arrayMapping.arraysInCols(ColumnsSpan.fromColumnStartAndEnd(sheet, columnStart - 1, columnStart - 1))) {\r\n            if (this.isThereSpaceForArray(array)) {\r\n                for (const address of array.getRange().addresses(this)) {\r\n                    this.addressMapping.setCell(address, array);\r\n                }\r\n            }\r\n            else {\r\n                this.setNoSpaceIfArray(array);\r\n            }\r\n        }\r\n    }\r\n    shrinkPossibleArrayAndGetCell(address) {\r\n        const vertex = this.getCell(address);\r\n        if (!(vertex instanceof ArrayVertex)) {\r\n            return vertex;\r\n        }\r\n        this.setNoSpaceIfArray(vertex);\r\n        return this.getCell(address);\r\n    }\r\n    setNoSpaceIfArray(vertex) {\r\n        if (vertex instanceof ArrayVertex) {\r\n            this.shrinkArrayToCorner(vertex);\r\n            vertex.setNoSpace();\r\n        }\r\n    }\r\n    removeVertex(vertex) {\r\n        this.removeVertexAndCleanupDependencies(vertex);\r\n        if (vertex instanceof RangeVertex) {\r\n            this.rangeMapping.removeRange(vertex);\r\n        }\r\n    }\r\n    mergeRangeVertices(existingVertex, newVertex) {\r\n        const adjNodesStored = this.graph.adjacentNodes(newVertex);\r\n        this.removeVertexAndCleanupDependencies(newVertex);\r\n        this.graph.softRemoveEdge(existingVertex, newVertex);\r\n        adjNodesStored.forEach((adjacentNode) => {\r\n            if (this.graph.hasNode(adjacentNode)) {\r\n                this.graph.addEdge(existingVertex, adjacentNode);\r\n            }\r\n        });\r\n    }\r\n    removeVertexAndCleanupDependencies(inputVertex) {\r\n        const dependencies = new Set(this.graph.removeNode(inputVertex));\r\n        while (dependencies.size > 0) {\r\n            const vertex = dependencies.values().next().value;\r\n            dependencies.delete(vertex);\r\n            if (this.graph.hasNode(vertex) && this.graph.adjacentNodesCount(vertex) === 0) {\r\n                if (vertex instanceof RangeVertex || vertex instanceof EmptyCellVertex) {\r\n                    this.graph.removeNode(vertex).forEach((candidate) => dependencies.add(candidate));\r\n                }\r\n                if (vertex instanceof RangeVertex) {\r\n                    this.rangeMapping.removeRange(vertex);\r\n                }\r\n                else if (vertex instanceof EmptyCellVertex) {\r\n                    this.addressMapping.removeCell(vertex.address);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","'use strict';\nvar $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar setArrayLength = require('../internals/array-set-length');\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\nvar fails = require('../internals/fails');\n\nvar INCORRECT_TO_LENGTH = fails(function () {\n  return [].push.call({ length: 0x100000000 }, 1) !== 4294967297;\n});\n\n// V8 and Safari <= 15.4, FF < 23 throws InternalError\n// https://bugs.chromium.org/p/v8/issues/detail?id=12681\nvar SILENT_ON_NON_WRITABLE_LENGTH = !function () {\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).push();\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n}();\n\n// `Array.prototype.push` method\n// https://tc39.es/ecma262/#sec-array.prototype.push\n$({ target: 'Array', proto: true, arity: 1, forced: INCORRECT_TO_LENGTH || SILENT_ON_NON_WRITABLE_LENGTH }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  push: function push(item) {\n    var O = toObject(this);\n    var len = lengthOfArrayLike(O);\n    var argCount = arguments.length;\n    doesNotExceedSafeInteger(len + argCount);\n    for (var i = 0; i < argCount; i++) {\n      O[len] = arguments[i];\n      len++;\n    }\n    setArrayLength(O, len);\n    return len;\n  }\n});\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar defineGlobalProperty = require('../internals/define-global-property');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target         - name of the target object\n  options.global         - target is the global object\n  options.stat           - export as static methods of target\n  options.proto          - export as prototype methods of target\n  options.real           - real prototype method for the `pure` version\n  options.forced         - export even if the native feature is available\n  options.bind           - bind methods to the target, required for the `pure` version\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n  options.sham           - add a flag to not completely full polyfills\n  options.enumerable     - export as enumerable property\n  options.dontCallGetSet - prevent calling a getter on target\n  options.name           - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || defineGlobalProperty(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty == typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    defineBuiltIn(target, key, sourceProperty, options);\n  }\n};\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var DESCRIPTORS = require('../internals/descriptors');\nvar call = require('../internals/function-call');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar hasOwn = require('../internals/has-own-property');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};\n","var fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar call = Function.prototype.call;\n\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-function-prototype-bind -- safe\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar $Object = Object;\nvar split = uncurryThis(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !$Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split(it, '') : $Object(it);\n} : $Object;\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar call = FunctionPrototype.call;\nvar uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);\n\nmodule.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {\n  return function () {\n    return call.apply(fn, arguments);\n  };\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(''.slice);\n\nmodule.exports = function (it) {\n  return stringSlice(toString(it), 8, -1);\n};\n","var isNullOrUndefined = require('../internals/is-null-or-undefined');\n\nvar $TypeError = TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (isNullOrUndefined(it)) throw $TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","// we can't use just `it == null` since of `document.all` special case\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec\nmodule.exports = function (it) {\n  return it === null || it === undefined;\n};\n","var toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n","var call = require('../internals/function-call');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar getMethod = require('../internals/get-method');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $TypeError = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw $TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n","var isCallable = require('../internals/is-callable');\nvar $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\nmodule.exports = $documentAll.IS_HTMLDDA ? function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it) || it === documentAll;\n} : function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};\n","var $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\n// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\nmodule.exports = $documentAll.IS_HTMLDDA ? function (argument) {\n  return typeof argument == 'function' || argument === documentAll;\n} : function (argument) {\n  return typeof argument == 'function';\n};\n","var documentAll = typeof document == 'object' && document.all;\n\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\nvar IS_HTMLDDA = typeof documentAll == 'undefined' && documentAll !== undefined;\n\nmodule.exports = {\n  all: documentAll,\n  IS_HTMLDDA: IS_HTMLDDA\n};\n","var getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar $Object = Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));\n};\n","var global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar aFunction = function (argument) {\n  return isCallable(argument) ? argument : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis({}.isPrototypeOf);\n","/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n","/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar fails = require('../internals/fails');\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol();\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n","var global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\n","var aCallable = require('../internals/a-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return isNullOrUndefined(func) ? undefined : aCallable(func);\n};\n","var isCallable = require('../internals/is-callable');\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw $TypeError(tryToString(argument) + ' is not a function');\n};\n","var $String = String;\n\nmodule.exports = function (argument) {\n  try {\n    return $String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n","var call = require('../internals/function-call');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\n\nvar $TypeError = TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw $TypeError(\"Can't convert object to primitive value\");\n};\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar hasOwn = require('../internals/has-own-property');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar symbolFor = Symbol && Symbol['for'];\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {\n    var description = 'Symbol.' + name;\n    if (NATIVE_SYMBOL && hasOwn(Symbol, name)) {\n      WellKnownSymbolsStore[name] = Symbol[name];\n    } else if (USE_SYMBOL_AS_UID && symbolFor) {\n      WellKnownSymbolsStore[name] = symbolFor(description);\n    } else {\n      WellKnownSymbolsStore[name] = createWellKnownSymbol(description);\n    }\n  } return WellKnownSymbolsStore[name];\n};\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.26.1',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2014-2022 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.26.1/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n","module.exports = false;\n","var global = require('../internals/global');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || defineGlobalProperty(SHARED, {});\n\nmodule.exports = store;\n","var global = require('../internals/global');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(global, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es/no-object-hasown -- safe\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar $Object = Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return $Object(requireObjectCoercible(argument));\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\n\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thanks to IE8 for its funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw $TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nmodule.exports = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype != 42;\n});\n","var isObject = require('../internals/is-object');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw $TypeError($String(argument) + ' is not an object');\n};\n","var isCallable = require('../internals/is-callable');\nvar definePropertyModule = require('../internals/object-define-property');\nvar makeBuiltIn = require('../internals/make-built-in');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nmodule.exports = function (O, key, value, options) {\n  if (!options) options = {};\n  var simple = options.enumerable;\n  var name = options.name !== undefined ? options.name : key;\n  if (isCallable(value)) makeBuiltIn(value, name, options);\n  if (options.global) {\n    if (simple) O[key] = value;\n    else defineGlobalProperty(key, value);\n  } else {\n    try {\n      if (!options.unsafe) delete O[key];\n      else if (O[key]) simple = true;\n    } catch (error) { /* empty */ }\n    if (simple) O[key] = value;\n    else definePropertyModule.f(O, key, {\n      value: value,\n      enumerable: false,\n      configurable: !options.nonConfigurable,\n      writable: !options.nonWritable\n    });\n  } return O;\n};\n","var fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar hasOwn = require('../internals/has-own-property');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar CONFIGURABLE_FUNCTION_NAME = require('../internals/function-name').CONFIGURABLE;\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar enforceInternalState = InternalStateModule.enforce;\nvar getInternalState = InternalStateModule.get;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nvar CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function () {\n  return defineProperty(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;\n});\n\nvar TEMPLATE = String(String).split('String');\n\nvar makeBuiltIn = module.exports = function (value, name, options) {\n  if (String(name).slice(0, 7) === 'Symbol(') {\n    name = '[' + String(name).replace(/^Symbol\\(([^)]*)\\)/, '$1') + ']';\n  }\n  if (options && options.getter) name = 'get ' + name;\n  if (options && options.setter) name = 'set ' + name;\n  if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {\n    if (DESCRIPTORS) defineProperty(value, 'name', { value: name, configurable: true });\n    else value.name = name;\n  }\n  if (CONFIGURABLE_LENGTH && options && hasOwn(options, 'arity') && value.length !== options.arity) {\n    defineProperty(value, 'length', { value: options.arity });\n  }\n  try {\n    if (options && hasOwn(options, 'constructor') && options.constructor) {\n      if (DESCRIPTORS) defineProperty(value, 'prototype', { writable: false });\n    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable\n    } else if (value.prototype) value.prototype = undefined;\n  } catch (error) { /* empty */ }\n  var state = enforceInternalState(value);\n  if (!hasOwn(state, 'source')) {\n    state.source = TEMPLATE.join(typeof name == 'string' ? name : '');\n  } return value;\n};\n\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n// eslint-disable-next-line no-extend-native -- required\nFunction.prototype.toString = makeBuiltIn(function toString() {\n  return isCallable(this) && getInternalState(this).source || inspectSource(this);\n}, 'toString');\n","var DESCRIPTORS = require('../internals/descriptors');\nvar hasOwn = require('../internals/has-own-property');\n\nvar FunctionPrototype = Function.prototype;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;\n\nvar EXISTS = hasOwn(FunctionPrototype, 'name');\n// additional protection from minified / mangled / dropped function names\nvar PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));\n\nmodule.exports = {\n  EXISTS: EXISTS,\n  PROPER: PROPER,\n  CONFIGURABLE: CONFIGURABLE\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar store = require('../internals/shared-store');\n\nvar functionToString = uncurryThis(Function.toString);\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (!isCallable(store.inspectSource)) {\n  store.inspectSource = function (it) {\n    return functionToString(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","var NATIVE_WEAK_MAP = require('../internals/weak-map-basic-detection');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar TypeError = global.TypeError;\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  /* eslint-disable no-self-assign -- prototype methods protection */\n  store.get = store.get;\n  store.has = store.has;\n  store.set = store.set;\n  /* eslint-enable no-self-assign -- prototype methods protection */\n  set = function (it, metadata) {\n    if (store.has(it)) throw TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    store.set(it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return store.get(it) || {};\n  };\n  has = function (it) {\n    return store.has(it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (hasOwn(it, STATE)) throw TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return hasOwn(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return hasOwn(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","var global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","module.exports = {};\n","var hasOwn = require('../internals/has-own-property');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source, exceptions) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {\n      defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n    }\n  }\n};\n","var getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\nvar concat = uncurryThis([].concat);\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar hasOwn = require('../internals/has-own-property');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar push = uncurryThis([].push);\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (hasOwn(O, key = names[i++])) {\n    ~indexOf(result, key) || push(result, key);\n  }\n  return result;\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = lengthOfArrayLike(O);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toIntegerOrInfinity(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","var trunc = require('../internals/math-trunc');\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return number !== number || number === 0 ? 0 : trunc(number);\n};\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.es/ecma262/#sec-math.trunc\n// eslint-disable-next-line es/no-math-trunc -- safe\nmodule.exports = Math.trunc || function trunc(x) {\n  var n = +x;\n  return (n > 0 ? floor : ceil)(n);\n};\n","var toLength = require('../internals/to-length');\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nmodule.exports = function (obj) {\n  return toLength(obj.length);\n};\n","var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n","var fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : isCallable(detection) ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar isArray = require('../internals/is-array');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Safari < 13 does not throw an error in this case\nvar SILENT_ON_NON_WRITABLE_LENGTH_SET = DESCRIPTORS && !function () {\n  // makes no sense without proper strict mode support\n  if (this !== undefined) return true;\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).length = 1;\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n}();\n\nmodule.exports = SILENT_ON_NON_WRITABLE_LENGTH_SET ? function (O, length) {\n  if (isArray(O) && !getOwnPropertyDescriptor(O, 'length').writable) {\n    throw $TypeError('Cannot set read only .length');\n  } return O.length = length;\n} : function (O, length) {\n  return O.length = length;\n};\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) == 'Array';\n};\n","var $TypeError = TypeError;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991\n\nmodule.exports = function (it) {\n  if (it > MAX_SAFE_INTEGER) throw $TypeError('Maximum allowed index exceeded');\n  return it;\n};\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { equalSimpleCellAddress, isSimpleCellAddress, simpleCellAddress } from './Cell';\r\nimport { SheetsNotEqual } from './errors';\r\nimport { AstNodeType } from './parser';\r\nimport { RowsSpan } from './Span';\r\nexport const WRONG_RANGE_SIZE = 'AbsoluteCellRange: Wrong range size';\r\nexport function isSimpleCellRange(obj) {\r\n    if (obj && (typeof obj === 'object' || typeof obj === 'function')) {\r\n        return 'start' in obj && isSimpleCellAddress(obj.start) && 'end' in obj && isSimpleCellAddress(obj.end);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nexport const simpleCellRange = (start, end) => ({ start, end });\r\nexport class AbsoluteCellRange {\r\n    constructor(start, end) {\r\n        if (start.sheet !== end.sheet) {\r\n            throw new SheetsNotEqual(start.sheet, end.sheet);\r\n        }\r\n        this.start = simpleCellAddress(start.sheet, start.col, start.row);\r\n        this.end = simpleCellAddress(end.sheet, end.col, end.row);\r\n    }\r\n    get sheet() {\r\n        return this.start.sheet;\r\n    }\r\n    static fromAst(ast, baseAddress) {\r\n        if (ast.type === AstNodeType.CELL_RANGE) {\r\n            return AbsoluteCellRange.fromCellRange(ast, baseAddress);\r\n        }\r\n        else if (ast.type === AstNodeType.COLUMN_RANGE) {\r\n            return AbsoluteColumnRange.fromColumnRange(ast, baseAddress);\r\n        }\r\n        else {\r\n            return AbsoluteRowRange.fromRowRangeAst(ast, baseAddress);\r\n        }\r\n    }\r\n    static fromAstOrUndef(ast, baseAddress) {\r\n        try {\r\n            return AbsoluteCellRange.fromAst(ast, baseAddress);\r\n        }\r\n        catch (_e) {\r\n            return undefined;\r\n        }\r\n    }\r\n    static fromCellRange(x, baseAddress) {\r\n        return new AbsoluteCellRange(x.start.toSimpleCellAddress(baseAddress), x.end.toSimpleCellAddress(baseAddress));\r\n    }\r\n    static spanFrom(topLeftCorner, width, height) {\r\n        const ret = AbsoluteCellRange.spanFromOrUndef(topLeftCorner, width, height);\r\n        if (ret === undefined) {\r\n            throw new Error(WRONG_RANGE_SIZE);\r\n        }\r\n        return ret;\r\n    }\r\n    static spanFromOrUndef(topLeftCorner, width, height) {\r\n        if (!Number.isFinite(width) && Number.isFinite(height)) {\r\n            if (topLeftCorner.col !== 0) {\r\n                return undefined;\r\n            }\r\n            return new AbsoluteRowRange(topLeftCorner.sheet, topLeftCorner.row, topLeftCorner.row + height - 1);\r\n        }\r\n        else if (!Number.isFinite(height) && Number.isFinite(width)) {\r\n            if (topLeftCorner.row !== 0) {\r\n                return undefined;\r\n            }\r\n            return new AbsoluteColumnRange(topLeftCorner.sheet, topLeftCorner.col, topLeftCorner.col + width - 1);\r\n        }\r\n        else if (Number.isFinite(height) && Number.isFinite(width)) {\r\n            return new AbsoluteCellRange(topLeftCorner, simpleCellAddress(topLeftCorner.sheet, topLeftCorner.col + width - 1, topLeftCorner.row + height - 1));\r\n        }\r\n        return undefined;\r\n    }\r\n    static fromCoordinates(sheet, x1, y1, x2, y2) {\r\n        return new AbsoluteCellRange(simpleCellAddress(sheet, x1, y1), simpleCellAddress(sheet, x2, y2));\r\n    }\r\n    isFinite() {\r\n        return Number.isFinite(this.size());\r\n    }\r\n    doesOverlap(other) {\r\n        if (this.start.sheet != other.start.sheet) {\r\n            return false;\r\n        }\r\n        if (this.end.row < other.start.row || this.start.row > other.end.row) {\r\n            return false;\r\n        }\r\n        if (this.end.col < other.start.col || this.start.col > other.end.col) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    addressInRange(address) {\r\n        if (this.sheet !== address.sheet) {\r\n            return false;\r\n        }\r\n        return this.start.row <= address.row\r\n            && this.end.row >= address.row\r\n            && this.start.col <= address.col\r\n            && this.end.col >= address.col;\r\n    }\r\n    columnInRange(address) {\r\n        if (this.sheet !== address.sheet) {\r\n            return false;\r\n        }\r\n        return this.start.col <= address.col && this.end.col >= address.col;\r\n    }\r\n    rowInRange(address) {\r\n        if (this.sheet !== address.sheet) {\r\n            return false;\r\n        }\r\n        return this.start.row <= address.row && this.end.row >= address.row;\r\n    }\r\n    containsRange(range) {\r\n        return this.addressInRange(range.start) && this.addressInRange(range.end);\r\n    }\r\n    intersectionWith(other) {\r\n        if (this.sheet !== other.start.sheet) {\r\n            return undefined;\r\n        }\r\n        const startRow = Math.max(this.start.row, other.start.row);\r\n        const endRow = Math.min(this.end.row, other.end.row);\r\n        const startCol = Math.max(this.start.col, other.start.col);\r\n        const endCol = Math.min(this.end.col, other.end.col);\r\n        if (startRow > endRow || startCol > endCol) {\r\n            return undefined;\r\n        }\r\n        return new AbsoluteCellRange(simpleCellAddress(this.sheet, startCol, startRow), simpleCellAddress(this.sheet, endCol, endRow));\r\n    }\r\n    includesRow(row) {\r\n        return this.start.row < row && this.end.row >= row;\r\n    }\r\n    includesColumn(column) {\r\n        return this.start.col < column && this.end.col >= column;\r\n    }\r\n    shiftByRows(numberOfRows) {\r\n        this.start.row += numberOfRows;\r\n        this.end.row += numberOfRows;\r\n    }\r\n    expandByRows(numberOfRows) {\r\n        this.end.row += numberOfRows;\r\n    }\r\n    shiftByColumns(numberOfColumns) {\r\n        this.start.col += numberOfColumns;\r\n        this.end.col += numberOfColumns;\r\n    }\r\n    shifted(byCols, byRows) {\r\n        return AbsoluteCellRange.spanFrom(simpleCellAddress(this.sheet, this.start.col + byCols, this.start.row + byRows), this.width(), this.height());\r\n    }\r\n    expandByColumns(numberOfColumns) {\r\n        this.end.col += numberOfColumns;\r\n    }\r\n    moveToSheet(toSheet) {\r\n        this.start.sheet = toSheet;\r\n        this.end.sheet = toSheet;\r\n    }\r\n    removeSpan(span) {\r\n        if (span instanceof RowsSpan) {\r\n            this.removeRows(span.start, span.end);\r\n        }\r\n        else {\r\n            this.removeColumns(span.start, span.end);\r\n        }\r\n    }\r\n    shouldBeRemoved() {\r\n        return this.width() <= 0 || this.height() <= 0;\r\n    }\r\n    rangeWithSameWidth(startRow, numberOfRows) {\r\n        return AbsoluteCellRange.spanFrom(simpleCellAddress(this.sheet, this.start.col, startRow), this.width(), numberOfRows);\r\n    }\r\n    rangeWithSameHeight(startColumn, numberOfColumns) {\r\n        return AbsoluteCellRange.spanFrom(simpleCellAddress(this.sheet, startColumn, this.start.row), numberOfColumns, this.height());\r\n    }\r\n    toString() {\r\n        return `${this.start.sheet},${this.start.col},${this.start.row},${this.end.col},${this.end.row}`;\r\n    }\r\n    width() {\r\n        return this.end.col - this.start.col + 1;\r\n    }\r\n    height() {\r\n        return this.end.row - this.start.row + 1;\r\n    }\r\n    size() {\r\n        return this.height() * this.width();\r\n    }\r\n    arrayOfAddressesInRange() {\r\n        const result = [];\r\n        for (let y = 0; y < this.height(); ++y) {\r\n            result[y] = [];\r\n            for (let x = 0; x < this.width(); ++x) {\r\n                const value = simpleCellAddress(this.sheet, this.start.col + x, this.start.row + y);\r\n                result[y].push(value);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    withStart(newStart) {\r\n        return new AbsoluteCellRange(newStart, this.end);\r\n    }\r\n    sameDimensionsAs(other) {\r\n        return this.width() === other.width() && this.height() === other.height();\r\n    }\r\n    sameAs(other) {\r\n        return equalSimpleCellAddress(this.start, other.start) && equalSimpleCellAddress(this.end, other.end);\r\n    }\r\n    addressesArrayMap(dependencyGraph, op) {\r\n        const ret = [];\r\n        let currentRow = this.start.row;\r\n        while (currentRow <= this.effectiveEndRow(dependencyGraph)) {\r\n            let currentColumn = this.start.col;\r\n            const tmp = [];\r\n            while (currentColumn <= this.effectiveEndColumn(dependencyGraph)) {\r\n                tmp.push(op(simpleCellAddress(this.start.sheet, currentColumn, currentRow)));\r\n                currentColumn++;\r\n            }\r\n            ret.push(tmp);\r\n            currentRow++;\r\n        }\r\n        return ret;\r\n    }\r\n    addresses(dependencyGraph) {\r\n        const ret = [];\r\n        let currentRow = this.start.row;\r\n        const limitRow = this.effectiveEndRow(dependencyGraph);\r\n        const limitColumn = this.effectiveEndColumn(dependencyGraph);\r\n        while (currentRow <= limitRow) {\r\n            let currentColumn = this.start.col;\r\n            while (currentColumn <= limitColumn) {\r\n                ret.push(simpleCellAddress(this.start.sheet, currentColumn, currentRow));\r\n                currentColumn++;\r\n            }\r\n            currentRow++;\r\n        }\r\n        return ret;\r\n    }\r\n    *addressesWithDirection(right, bottom, dependencyGraph) {\r\n        if (right > 0) {\r\n            if (bottom > 0) {\r\n                let currentRow = this.effectiveEndRow(dependencyGraph);\r\n                while (currentRow >= this.start.row) {\r\n                    let currentColumn = this.effectiveEndColumn(dependencyGraph);\r\n                    while (currentColumn >= this.start.col) {\r\n                        yield simpleCellAddress(this.start.sheet, currentColumn, currentRow);\r\n                        currentColumn -= 1;\r\n                    }\r\n                    currentRow -= 1;\r\n                }\r\n            }\r\n            else {\r\n                let currentRow = this.start.row;\r\n                while (currentRow <= this.effectiveEndRow(dependencyGraph)) {\r\n                    let currentColumn = this.effectiveEndColumn(dependencyGraph);\r\n                    while (currentColumn >= this.start.col) {\r\n                        yield simpleCellAddress(this.start.sheet, currentColumn, currentRow);\r\n                        currentColumn -= 1;\r\n                    }\r\n                    currentRow += 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (bottom > 0) {\r\n                let currentRow = this.effectiveEndRow(dependencyGraph);\r\n                while (currentRow >= this.start.row) {\r\n                    let currentColumn = this.start.col;\r\n                    while (currentColumn <= this.effectiveEndColumn(dependencyGraph)) {\r\n                        yield simpleCellAddress(this.start.sheet, currentColumn, currentRow);\r\n                        currentColumn += 1;\r\n                    }\r\n                    currentRow -= 1;\r\n                }\r\n            }\r\n            else {\r\n                let currentRow = this.start.row;\r\n                while (currentRow <= this.effectiveEndRow(dependencyGraph)) {\r\n                    let currentColumn = this.start.col;\r\n                    while (currentColumn <= this.effectiveEndColumn(dependencyGraph)) {\r\n                        yield simpleCellAddress(this.start.sheet, currentColumn, currentRow);\r\n                        currentColumn += 1;\r\n                    }\r\n                    currentRow += 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getAddress(col, row) {\r\n        if (col < 0 || row < 0 || row > this.height() - 1 || col > this.width() - 1) {\r\n            throw Error('Index out of bound');\r\n        }\r\n        return simpleCellAddress(this.start.sheet, this.start.col + col, this.start.row + row);\r\n    }\r\n    exceedsSheetSizeLimits(maxColumns, maxRows) {\r\n        return this.end.col >= maxColumns || this.end.row >= maxRows;\r\n    }\r\n    effectiveEndColumn(_dependencyGraph) {\r\n        return this.end.col;\r\n    }\r\n    effectiveEndRow(_dependencyGraph) {\r\n        return this.end.row;\r\n    }\r\n    effectiveWidth(_dependencyGraph) {\r\n        return this.width();\r\n    }\r\n    effectiveHeight(_dependencyGraph) {\r\n        return this.height();\r\n    }\r\n    removeRows(rowStart, rowEnd) {\r\n        if (rowStart > this.end.row) {\r\n            return;\r\n        }\r\n        if (rowEnd < this.start.row) {\r\n            const numberOfRows = rowEnd - rowStart + 1;\r\n            return this.shiftByRows(-numberOfRows);\r\n        }\r\n        if (rowStart <= this.start.row) {\r\n            this.start.row = rowStart;\r\n        }\r\n        this.end.row -= Math.min(rowEnd, this.end.row) - rowStart + 1;\r\n    }\r\n    removeColumns(columnStart, columnEnd) {\r\n        if (columnStart > this.end.col) {\r\n            return;\r\n        }\r\n        if (columnEnd < this.start.col) {\r\n            const numberOfColumns = columnEnd - columnStart + 1;\r\n            return this.shiftByColumns(-numberOfColumns);\r\n        }\r\n        if (columnStart <= this.start.col) {\r\n            this.start.col = columnStart;\r\n        }\r\n        this.end.col -= Math.min(columnEnd, this.end.col) - columnStart + 1;\r\n    }\r\n}\r\nexport class AbsoluteColumnRange extends AbsoluteCellRange {\r\n    constructor(sheet, columnStart, columnEnd) {\r\n        super(simpleCellAddress(sheet, columnStart, 0), simpleCellAddress(sheet, columnEnd, Number.POSITIVE_INFINITY));\r\n    }\r\n    static fromColumnRange(x, baseAddress) {\r\n        const start = x.start.toSimpleColumnAddress(baseAddress);\r\n        const end = x.end.toSimpleColumnAddress(baseAddress);\r\n        if (start.sheet !== end.sheet) {\r\n            throw new SheetsNotEqual(start.sheet, end.sheet);\r\n        }\r\n        return new AbsoluteColumnRange(start.sheet, start.col, end.col);\r\n    }\r\n    shouldBeRemoved() {\r\n        return this.width() <= 0;\r\n    }\r\n    shiftByRows(_numberOfRows) {\r\n        return;\r\n    }\r\n    expandByRows(_numberOfRows) {\r\n        return;\r\n    }\r\n    shifted(byCols, _byRows) {\r\n        return new AbsoluteColumnRange(this.sheet, this.start.col + byCols, this.end.col + byCols);\r\n    }\r\n    rangeWithSameHeight(startColumn, numberOfColumns) {\r\n        return new AbsoluteColumnRange(this.sheet, startColumn, startColumn + numberOfColumns - 1);\r\n    }\r\n    exceedsSheetSizeLimits(maxColumns, _maxRows) {\r\n        return this.end.col >= maxColumns;\r\n    }\r\n    effectiveEndRow(dependencyGraph) {\r\n        return this.effectiveHeight(dependencyGraph) - 1;\r\n    }\r\n    effectiveHeight(dependencyGraph) {\r\n        return dependencyGraph.getSheetHeight(this.sheet);\r\n    }\r\n    removeRows(_rowStart, _rowEnd) {\r\n        return;\r\n    }\r\n}\r\nexport class AbsoluteRowRange extends AbsoluteCellRange {\r\n    constructor(sheet, rowStart, rowEnd) {\r\n        super(simpleCellAddress(sheet, 0, rowStart), simpleCellAddress(sheet, Number.POSITIVE_INFINITY, rowEnd));\r\n    }\r\n    static fromRowRangeAst(x, baseAddress) {\r\n        const start = x.start.toSimpleRowAddress(baseAddress);\r\n        const end = x.end.toSimpleRowAddress(baseAddress);\r\n        if (start.sheet !== end.sheet) {\r\n            throw new SheetsNotEqual(start.sheet, end.sheet);\r\n        }\r\n        return new AbsoluteRowRange(start.sheet, start.row, end.row);\r\n    }\r\n    shouldBeRemoved() {\r\n        return this.height() <= 0;\r\n    }\r\n    shiftByColumns(_numberOfColumns) {\r\n        return;\r\n    }\r\n    expandByColumns(_numberOfColumns) {\r\n        return;\r\n    }\r\n    shifted(byCols, byRows) {\r\n        return new AbsoluteRowRange(this.sheet, this.start.row + byRows, this.end.row + byRows);\r\n    }\r\n    rangeWithSameWidth(startRow, numberOfRows) {\r\n        return new AbsoluteRowRange(this.sheet, startRow, startRow + numberOfRows - 1);\r\n    }\r\n    exceedsSheetSizeLimits(_maxColumns, maxRows) {\r\n        return this.end.row >= maxRows;\r\n    }\r\n    effectiveEndColumn(dependencyGraph) {\r\n        return this.effectiveWidth(dependencyGraph) - 1;\r\n    }\r\n    effectiveWidth(dependencyGraph) {\r\n        return dependencyGraph.getSheetWidth(this.sheet);\r\n    }\r\n    removeColumns(_columnStart, _columnEnd) {\r\n        return;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\n/**\r\n * Error thrown when the sheet of a given ID does not exist.\r\n */\r\nexport class NoSheetWithIdError extends Error {\r\n    constructor(sheetId) {\r\n        super(`There's no sheet with id = ${sheetId}`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when the sheet of a given name does not exist.\r\n */\r\nexport class NoSheetWithNameError extends Error {\r\n    constructor(sheetName) {\r\n        super(`There's no sheet with name '${sheetName}'`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when the sheet of a given name already exists.\r\n */\r\nexport class SheetNameAlreadyTakenError extends Error {\r\n    constructor(sheetName) {\r\n        super(`Sheet with name ${sheetName} already exists`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when loaded sheet size exceeds configured limits.\r\n */\r\nexport class SheetSizeLimitExceededError extends Error {\r\n    constructor() {\r\n        super('Sheet size limit exceeded');\r\n    }\r\n}\r\n/**\r\n * Error thrown when the the provided string is not a valid formula, i.e does not start with \"=\"\r\n */\r\nexport class NotAFormulaError extends Error {\r\n    constructor() {\r\n        super('This is not a formula');\r\n    }\r\n}\r\n/**\r\n * Error thrown when the given address is invalid.\r\n */\r\nexport class InvalidAddressError extends Error {\r\n    constructor(address) {\r\n        super(`Address (row = ${address.row}, col = ${address.col}) is invalid`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when the given arguments are invalid\r\n */\r\nexport class InvalidArgumentsError extends Error {\r\n    constructor(expectedArguments) {\r\n        super(`Invalid arguments, expected ${expectedArguments}`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when the given sheets are not equal.\r\n */\r\nexport class SheetsNotEqual extends Error {\r\n    constructor(sheet1, sheet2) {\r\n        super(`Sheets ${sheet1} and ${sheet2} are not equal.`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when the given named expression already exists in the workbook and therefore it cannot be added.\r\n */\r\nexport class NamedExpressionNameIsAlreadyTakenError extends Error {\r\n    constructor(expressionName) {\r\n        super(`Name of Named Expression '${expressionName}' is already present`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when the name given for the named expression is invalid.\r\n */\r\nexport class NamedExpressionNameIsInvalidError extends Error {\r\n    constructor(expressionName) {\r\n        super(`Name of Named Expression '${expressionName}' is invalid`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when the given named expression does not exist.\r\n */\r\nexport class NamedExpressionDoesNotExistError extends Error {\r\n    constructor(expressionName) {\r\n        super(`Named Expression '${expressionName}' does not exist`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when there are no operations to be undone by the [[undo]] method.\r\n */\r\nexport class NoOperationToUndoError extends Error {\r\n    constructor() {\r\n        super('There is no operation to undo');\r\n    }\r\n}\r\n/**\r\n * Error thrown when there are no operations to redo by the [[redo]] method.\r\n */\r\nexport class NoOperationToRedoError extends Error {\r\n    constructor() {\r\n        super('There is no operation to redo');\r\n    }\r\n}\r\n/**\r\n * Error thrown when there is nothing to paste by the [[paste]] method.\r\n */\r\nexport class NothingToPasteError extends Error {\r\n    constructor() {\r\n        super('There is nothing to paste');\r\n    }\r\n}\r\nfunction replacer(key, val) {\r\n    switch (typeof val) {\r\n        case 'function':\r\n        case 'symbol':\r\n            return val.toString();\r\n        case 'bigint':\r\n            return 'BigInt(' + val.toString() + ')';\r\n        default: {\r\n            if (val instanceof RegExp) {\r\n                return 'RegExp(' + val.toString() + ')';\r\n            }\r\n            else {\r\n                return val;\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Error thrown when the given value cannot be parsed.\r\n *\r\n * Checks against the validity in:\r\n *\r\n * @see [[buildFromArray]]\r\n * @see [[buildFromSheets]]\r\n * @see [[setCellsContents]]\r\n */\r\nexport class UnableToParseError extends Error {\r\n    constructor(value) {\r\n        super(`Unable to parse value: ${JSON.stringify(value, replacer, 4)}`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when the expected value type differs from the given value type.\r\n * It also displays the expected type.\r\n * This error might be thrown while setting or updating the [[ConfigParams]].\r\n * The following methods accept [[ConfigParams]] as a parameter:\r\n *\r\n * @see [[buildEmpty]]\r\n * @see [[buildFromArray]]\r\n * @see [[buildFromSheets]]\r\n * @see [[updateConfig]]\r\n */\r\nexport class ExpectedValueOfTypeError extends Error {\r\n    constructor(expectedType, paramName) {\r\n        super(`Expected value of type: ${expectedType} for config parameter: ${paramName}`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when supplied config parameter value is an empty string.\r\n * This error might be thrown while setting or updating the [[ConfigParams]].\r\n * The following methods accept [[ConfigParams]] as a parameter:\r\n *\r\n * @see [[buildEmpty]]\r\n * @see [[buildFromArray]]\r\n * @see [[buildFromSheets]]\r\n * @see [[updateConfig]]\r\n */\r\nexport class ConfigValueEmpty extends Error {\r\n    constructor(paramName) {\r\n        super(`Config parameter ${paramName} cannot be empty.`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when supplied config parameter value is too small.\r\n * This error might be thrown while setting or updating the [[ConfigParams]].\r\n * The following methods accept [[ConfigParams]] as a parameter:\r\n *\r\n * @see [[buildEmpty]]\r\n * @see [[buildFromArray]]\r\n * @see [[buildFromSheets]]\r\n * @see [[updateConfig]]\r\n */\r\nexport class ConfigValueTooSmallError extends Error {\r\n    constructor(paramName, minimum) {\r\n        super(`Config parameter ${paramName} should be at least ${minimum}`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when supplied config parameter value is too big.\r\n * This error might be thrown while setting or updating the [[ConfigParams]].\r\n * The following methods accept [[ConfigParams]] as a parameter:\r\n *\r\n * @see [[buildEmpty]]\r\n * @see [[buildFromArray]]\r\n * @see [[buildFromSheets]]\r\n * @see [[updateConfig]]\r\n */\r\nexport class ConfigValueTooBigError extends Error {\r\n    constructor(paramName, maximum) {\r\n        super(`Config parameter ${paramName} should be at most ${maximum}`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when the value was expected to be set for a config parameter.\r\n * It also displays the expected value.\r\n * This error might be thrown while setting or updating the [[ConfigParams]].\r\n * The following methods accept [[ConfigParams]] as a parameter:\r\n *\r\n * @see [[buildEmpty]]\r\n * @see [[buildFromArray]]\r\n * @see [[buildFromSheets]]\r\n * @see [[updateConfig]]\r\n */\r\nexport class ExpectedOneOfValuesError extends Error {\r\n    constructor(values, paramName) {\r\n        super(`Expected one of ${values} for config parameter: ${paramName}`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when computations become suspended.\r\n * To perform any other action wait for the batch to complete or resume the evaluation.\r\n * Relates to:\r\n *\r\n * @see [[batch]]\r\n * @see [[suspendEvaluation]]\r\n * @see [[resumeEvaluation]]\r\n */\r\nexport class EvaluationSuspendedError extends Error {\r\n    constructor() {\r\n        super('Computations are suspended');\r\n    }\r\n}\r\n/**\r\n * Error thrown when translation is missing in translation package.\r\n *\r\n * TODO\r\n */\r\nexport class MissingTranslationError extends Error {\r\n    constructor(key) {\r\n        super(`Translation for ${key} is missing in the translation package you're using.`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when trying to override protected translation.\r\n *\r\n * @see [[registerLanguage]]\r\n * @see [[registerFunction]]\r\n * @see [[registerFunctionPlugin]]\r\n */\r\nexport class ProtectedFunctionTranslationError extends Error {\r\n    constructor(key) {\r\n        super(`Cannot register translation for function with id: ${key}`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when trying to retrieve not registered language\r\n *\r\n * @see [[getLanguage]]\r\n * @see [[unregisterLanguage]]\r\n */\r\nexport class LanguageNotRegisteredError extends Error {\r\n    constructor() {\r\n        super('Language not registered.');\r\n    }\r\n}\r\n/**\r\n * Error thrown when trying to register already registered language\r\n *\r\n * @see [[registerLanguage]]\r\n */\r\nexport class LanguageAlreadyRegisteredError extends Error {\r\n    constructor() {\r\n        super('Language already registered.');\r\n    }\r\n}\r\n/**\r\n * Error thrown when function plugin is invalid.\r\n *\r\n * @see [[registerFunction]]\r\n * @see [[registerFunctionPlugin]]\r\n * @see [[buildFromArray]]\r\n * @see [[buildFromSheets]]\r\n * */\r\nexport class FunctionPluginValidationError extends Error {\r\n    static functionNotDeclaredInPlugin(functionId, pluginName) {\r\n        return new FunctionPluginValidationError(`Function with id ${functionId} not declared in plugin ${pluginName}`);\r\n    }\r\n    static functionMethodNotFound(functionName, pluginName) {\r\n        return new FunctionPluginValidationError(`Function method ${functionName} not found in plugin ${pluginName}`);\r\n    }\r\n}\r\n/**\r\n * Error thrown when trying to register, override or remove function with reserved id.\r\n *\r\n * @see [[registerFunctionPlugin]]\r\n * @see [[registerFunction]]\r\n * @see [[unregisterFunction]]\r\n * */\r\nexport class ProtectedFunctionError extends Error {\r\n    static cannotRegisterFunctionWithId(functionId) {\r\n        return new ProtectedFunctionError(`Cannot register function with id ${functionId}`);\r\n    }\r\n    static cannotUnregisterFunctionWithId(functionId) {\r\n        return new ProtectedFunctionError(`Cannot unregister function with id ${functionId}`);\r\n    }\r\n    static cannotUnregisterProtectedPlugin() {\r\n        return new ProtectedFunctionError('Cannot unregister protected plugin');\r\n    }\r\n}\r\n/**\r\n * Error thrown when selected source location has an array.\r\n */\r\nexport class SourceLocationHasArrayError extends Error {\r\n    constructor() {\r\n        super('Cannot perform this operation, source location has an array inside.');\r\n    }\r\n}\r\n/**\r\n * Error thrown when selected target location has an array.\r\n *\r\n * @see [[addRows]]\r\n * @see [[addColumns]]\r\n * @see [[moveCells]]\r\n * @see [[moveRows]]\r\n * @see [[moveColumns]]\r\n * @see [[paste]]\r\n */\r\nexport class TargetLocationHasArrayError extends Error {\r\n    constructor() {\r\n        super('Cannot perform this operation, target location has an array inside.');\r\n    }\r\n}\r\n/**\r\n * Error thrown when named expression contains relative addresses.\r\n *\r\n * @see [[addNamedExpression]]\r\n * @see [[changeNamedExpression]]\r\n * */\r\nexport class NoRelativeAddressesAllowedError extends Error {\r\n    constructor() {\r\n        super('Relative addresses not allowed in named expressions.');\r\n    }\r\n}\r\n/**\r\n * Error thrown when alias to a function is already defined.\r\n *\r\n * @see [[registerFunctionPlugin]]\r\n * @see [[registerFunction]]\r\n */\r\nexport class AliasAlreadyExisting extends Error {\r\n    constructor(name, pluginName) {\r\n        super(`Alias id ${name} in plugin ${pluginName} already defined as a function or alias.`);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport { cellAddressFromString, simpleCellAddressFromString, simpleCellAddressToString, simpleCellRangeFromString, simpleCellRangeToString, } from './addressRepresentationConverters';\r\nexport { CellAddress } from './CellAddress';\r\nexport { ParserWithCaching, } from './ParserWithCaching';\r\nexport { collectDependencies, } from './collectDependencies';\r\nexport { buildLexerConfig, } from './LexerConfig';\r\nexport { FormulaLexer, } from './FormulaParser';\r\nexport { AstNodeType, ParsingErrorType, buildProcedureAst, buildCellRangeAst, buildParsingErrorAst, buildCellErrorAst, } from './Ast';\r\nexport { Unparser } from './Unparser';\r\nexport { AddressDependency, CellRangeDependency, ColumnRangeDependency, RowRangeDependency, NamedExpressionDependency, } from './RelativeDependency';\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { simpleCellRange } from '../AbsoluteCellRange';\r\nimport { simpleCellAddress } from '../Cell';\r\nimport { CellAddress } from './CellAddress';\r\nimport { ColumnAddress } from './ColumnAddress';\r\nimport { ABSOLUTE_OPERATOR, RANGE_OPERATOR, sheetNameRegexp, simpleSheetName } from './LexerConfig';\r\nimport { RowAddress } from './RowAddress';\r\nconst addressRegex = new RegExp(`^(${sheetNameRegexp})?(\\\\${ABSOLUTE_OPERATOR}?)([A-Za-z]+)(\\\\${ABSOLUTE_OPERATOR}?)([0-9]+)$`);\r\nconst columnRegex = new RegExp(`^(${sheetNameRegexp})?(\\\\${ABSOLUTE_OPERATOR}?)([A-Za-z]+)$`);\r\nconst rowRegex = new RegExp(`^(${sheetNameRegexp})?(\\\\${ABSOLUTE_OPERATOR}?)([0-9]+)$`);\r\nconst simpleSheetNameRegex = new RegExp(`^${simpleSheetName}$`);\r\n/**\r\n * Computes R0C0 representation of cell address based on it's string representation and base address.\r\n *\r\n * @param sheetMapping - mapping function needed to change name of a sheet to index\r\n * @param stringAddress - string representation of cell address, e.g. 'C64'\r\n * @param baseAddress - base address for R0C0 conversion\r\n * @returns object representation of address\r\n */\r\nexport const cellAddressFromString = (sheetMapping, stringAddress, baseAddress) => {\r\n    const result = addressRegex.exec(stringAddress);\r\n    const col = columnLabelToIndex(result[6]);\r\n    let sheet = extractSheetNumber(result, sheetMapping);\r\n    if (sheet === undefined) {\r\n        return undefined;\r\n    }\r\n    if (sheet === null) {\r\n        sheet = undefined;\r\n    }\r\n    const row = Number(result[8]) - 1;\r\n    if (result[5] === ABSOLUTE_OPERATOR && result[7] === ABSOLUTE_OPERATOR) {\r\n        return CellAddress.absolute(col, row, sheet);\r\n    }\r\n    else if (result[5] === ABSOLUTE_OPERATOR) {\r\n        return CellAddress.absoluteCol(col, row - baseAddress.row, sheet);\r\n    }\r\n    else if (result[7] === ABSOLUTE_OPERATOR) {\r\n        return CellAddress.absoluteRow(col - baseAddress.col, row, sheet);\r\n    }\r\n    else {\r\n        return CellAddress.relative(col - baseAddress.col, row - baseAddress.row, sheet);\r\n    }\r\n};\r\nexport const columnAddressFromString = (sheetMapping, stringAddress, baseAddress) => {\r\n    const result = columnRegex.exec(stringAddress);\r\n    let sheet = extractSheetNumber(result, sheetMapping);\r\n    if (sheet === undefined) {\r\n        return undefined;\r\n    }\r\n    if (sheet === null) {\r\n        sheet = undefined;\r\n    }\r\n    const col = columnLabelToIndex(result[6]);\r\n    if (result[5] === ABSOLUTE_OPERATOR) {\r\n        return ColumnAddress.absolute(col, sheet);\r\n    }\r\n    else {\r\n        return ColumnAddress.relative(col - baseAddress.col, sheet);\r\n    }\r\n};\r\nexport const rowAddressFromString = (sheetMapping, stringAddress, baseAddress) => {\r\n    const result = rowRegex.exec(stringAddress);\r\n    let sheet = extractSheetNumber(result, sheetMapping);\r\n    if (sheet === undefined) {\r\n        return undefined;\r\n    }\r\n    if (sheet === null) {\r\n        sheet = undefined;\r\n    }\r\n    const row = Number(result[6]) - 1;\r\n    if (result[5] === ABSOLUTE_OPERATOR) {\r\n        return RowAddress.absolute(row, sheet);\r\n    }\r\n    else {\r\n        return RowAddress.relative(row - baseAddress.row, sheet);\r\n    }\r\n};\r\n/**\r\n * Computes simple (absolute) address of a cell address based on its string representation.\r\n * If sheet name present in string representation but is not present in sheet mapping, returns undefined.\r\n * If sheet name is not present in string representation, returns {@param sheetContext} as sheet number\r\n *\r\n * @param sheetMapping - mapping function needed to change name of a sheet to index\r\n * @param stringAddress - string representation of cell address, e.g. 'C64'\r\n * @param sheetContext - sheet in context of which we should parse the address\r\n * @returns absolute representation of address, e.g. { sheet: 0, col: 1, row: 1 }\r\n */\r\nexport const simpleCellAddressFromString = (sheetMapping, stringAddress, sheetContext) => {\r\n    const result = addressRegex.exec(stringAddress);\r\n    const col = columnLabelToIndex(result[6]);\r\n    let sheet = extractSheetNumber(result, sheetMapping);\r\n    if (sheet === undefined) {\r\n        return undefined;\r\n    }\r\n    if (sheet === null) {\r\n        sheet = sheetContext;\r\n    }\r\n    const row = Number(result[8]) - 1;\r\n    return simpleCellAddress(sheet, col, row);\r\n};\r\nexport const simpleCellRangeFromString = (sheetMapping, stringAddress, sheetContext) => {\r\n    const split = stringAddress.split(RANGE_OPERATOR);\r\n    if (split.length !== 2) {\r\n        return undefined;\r\n    }\r\n    const [startString, endString] = split;\r\n    const start = simpleCellAddressFromString(sheetMapping, startString, sheetContext);\r\n    if (start === undefined) {\r\n        return undefined;\r\n    }\r\n    const end = simpleCellAddressFromString(sheetMapping, endString, start.sheet);\r\n    if (end === undefined) {\r\n        return undefined;\r\n    }\r\n    if (start.sheet !== end.sheet) {\r\n        return undefined;\r\n    }\r\n    return simpleCellRange(start, end);\r\n};\r\n/**\r\n * Returns string representation of absolute address\r\n * If sheet index is not present in sheet mapping, returns undefined\r\n *\r\n * @param sheetIndexMapping - mapping function needed to change sheet index to sheet name\r\n * @param address - object representation of absolute address\r\n * @param sheetIndex - if is not equal with address sheet index, string representation will contain sheet name\r\n * */\r\nexport const simpleCellAddressToString = (sheetIndexMapping, address, sheetIndex) => {\r\n    const column = columnIndexToLabel(address.col);\r\n    const sheetName = sheetIndexToString(address.sheet, sheetIndexMapping);\r\n    if (sheetName === undefined) {\r\n        return undefined;\r\n    }\r\n    if (sheetIndex !== address.sheet) {\r\n        return `${sheetName}!${column}${address.row + 1}`;\r\n    }\r\n    else {\r\n        return `${column}${address.row + 1}`;\r\n    }\r\n};\r\nexport const simpleCellRangeToString = (sheetIndexMapping, address, sheetIndex) => {\r\n    const startString = simpleCellAddressToString(sheetIndexMapping, address.start, sheetIndex);\r\n    const endString = simpleCellAddressToString(sheetIndexMapping, address.end, address.start.sheet);\r\n    if (startString === undefined || endString === undefined) {\r\n        return undefined;\r\n    }\r\n    else {\r\n        return `${startString}${RANGE_OPERATOR}${endString}`;\r\n    }\r\n};\r\n/**\r\n * Convert column label to index\r\n *\r\n * @param columnStringRepresentation - column label (e.g. 'AAB')\r\n * @returns column index\r\n * */\r\nfunction columnLabelToIndex(columnStringRepresentation) {\r\n    if (columnStringRepresentation.length === 1) {\r\n        return columnStringRepresentation.toUpperCase().charCodeAt(0) - 65;\r\n    }\r\n    else {\r\n        return columnStringRepresentation.split('').reduce((currentColumn, nextLetter) => {\r\n            return currentColumn * 26 + (nextLetter.toUpperCase().charCodeAt(0) - 64);\r\n        }, 0) - 1;\r\n    }\r\n}\r\n/**\r\n * Converts column index to label\r\n *\r\n * @param column - address to convert\r\n * @returns string representation, e.g. 'AAB'\r\n */\r\nexport function columnIndexToLabel(column) {\r\n    let result = '';\r\n    while (column >= 0) {\r\n        result = String.fromCharCode((column % 26) + 97) + result;\r\n        column = Math.floor(column / 26) - 1;\r\n    }\r\n    return result.toUpperCase();\r\n}\r\nexport function sheetIndexToString(sheetId, sheetMappingFn) {\r\n    let sheetName = sheetMappingFn(sheetId);\r\n    if (sheetName === undefined) {\r\n        return undefined;\r\n    }\r\n    if (simpleSheetNameRegex.test(sheetName)) {\r\n        return sheetName;\r\n    }\r\n    else {\r\n        sheetName = sheetName.replace(/'/g, \"''\");\r\n        return `'${sheetName}'`;\r\n    }\r\n}\r\nfunction extractSheetNumber(regexResult, sheetMapping) {\r\n    var _a;\r\n    let maybeSheetName = (_a = regexResult[3]) !== null && _a !== void 0 ? _a : regexResult[2];\r\n    if (maybeSheetName) {\r\n        maybeSheetName = maybeSheetName.replace(/''/g, \"'\");\r\n        return sheetMapping(maybeSheetName);\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { absoluteSheetReference, invalidSimpleCellAddress, simpleCellAddress, simpleColumnAddress, simpleRowAddress, } from '../Cell';\r\nimport { columnIndexToLabel } from './addressRepresentationConverters';\r\nimport { ColumnAddress, ReferenceType } from './ColumnAddress';\r\nimport { RowAddress } from './RowAddress';\r\n/** Possible kinds of cell references */\r\nexport var CellReferenceType;\r\n(function (CellReferenceType) {\r\n    /** Cell reference with both row and column relative. */\r\n    CellReferenceType[\"CELL_REFERENCE_RELATIVE\"] = \"CELL_REFERENCE\";\r\n    /** Cell reference with both row and column absolute. */\r\n    CellReferenceType[\"CELL_REFERENCE_ABSOLUTE\"] = \"CELL_REFERENCE_ABSOLUTE\";\r\n    /** Cell reference with absolute column and relative row. */\r\n    CellReferenceType[\"CELL_REFERENCE_ABSOLUTE_COL\"] = \"CELL_REFERENCE_ABSOLUTE_COL\";\r\n    /** Cell reference with relative column and absolute row. */\r\n    CellReferenceType[\"CELL_REFERENCE_ABSOLUTE_ROW\"] = \"CELL_REFERENCE_ABSOLUTE_ROW\";\r\n})(CellReferenceType || (CellReferenceType = {}));\r\nexport class CellAddress {\r\n    constructor(col, row, type, sheet) {\r\n        this.col = col;\r\n        this.row = row;\r\n        this.type = type;\r\n        this.sheet = sheet;\r\n    }\r\n    static fromColAndRow(col, row, sheet) {\r\n        const factoryMethod = col.isColumnAbsolute() && row.isRowAbsolute()\r\n            ? CellAddress.absolute.bind(this)\r\n            : col.isColumnAbsolute()\r\n                ? CellAddress.absoluteCol.bind(this)\r\n                : row.isRowAbsolute()\r\n                    ? CellAddress.absoluteRow.bind(this)\r\n                    : CellAddress.relative.bind(this);\r\n        return factoryMethod(col.col, row.row, sheet);\r\n    }\r\n    static relative(col, row, sheet) {\r\n        return new CellAddress(col, row, CellReferenceType.CELL_REFERENCE_RELATIVE, sheet);\r\n    }\r\n    static absolute(col, row, sheet) {\r\n        return new CellAddress(col, row, CellReferenceType.CELL_REFERENCE_ABSOLUTE, sheet);\r\n    }\r\n    static absoluteCol(col, row, sheet) {\r\n        return new CellAddress(col, row, CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL, sheet);\r\n    }\r\n    static absoluteRow(col, row, sheet) {\r\n        return new CellAddress(col, row, CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW, sheet);\r\n    }\r\n    /**\r\n     * Converts R0C0 representation of cell address to simple object representation.\r\n     *\r\n     * @param baseAddress - base address for R0C0 shifts\r\n     */\r\n    toSimpleCellAddress(baseAddress) {\r\n        const sheet = absoluteSheetReference(this, baseAddress);\r\n        if (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE) {\r\n            return simpleCellAddress(sheet, this.col, this.row);\r\n        }\r\n        else if (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW) {\r\n            return simpleCellAddress(sheet, baseAddress.col + this.col, this.row);\r\n        }\r\n        else if (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL) {\r\n            return simpleCellAddress(sheet, this.col, baseAddress.row + this.row);\r\n        }\r\n        else {\r\n            return simpleCellAddress(sheet, baseAddress.col + this.col, baseAddress.row + this.row);\r\n        }\r\n    }\r\n    toColumnAddress() {\r\n        const refType = this.isColumnRelative() ? ReferenceType.RELATIVE : ReferenceType.ABSOLUTE;\r\n        return new ColumnAddress(refType, this.col, this.sheet);\r\n    }\r\n    toRowAddress() {\r\n        const refType = this.isRowRelative() ? ReferenceType.RELATIVE : ReferenceType.ABSOLUTE;\r\n        return new RowAddress(refType, this.row, this.sheet);\r\n    }\r\n    toSimpleColumnAddress(baseAddress) {\r\n        const sheet = absoluteSheetReference(this, baseAddress);\r\n        let column = this.col;\r\n        if (this.isColumnRelative()) {\r\n            column += baseAddress.col;\r\n        }\r\n        return simpleColumnAddress(sheet, column);\r\n    }\r\n    toSimpleRowAddress(baseAddress) {\r\n        const sheet = absoluteSheetReference(this, baseAddress);\r\n        let row = this.row;\r\n        if (this.isRowRelative()) {\r\n            row += baseAddress.row;\r\n        }\r\n        return simpleRowAddress(sheet, row);\r\n    }\r\n    isRowAbsolute() {\r\n        return (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW);\r\n    }\r\n    isColumnAbsolute() {\r\n        return (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL);\r\n    }\r\n    isColumnRelative() {\r\n        return (this.type === CellReferenceType.CELL_REFERENCE_RELATIVE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW);\r\n    }\r\n    isRowRelative() {\r\n        return (this.type === CellReferenceType.CELL_REFERENCE_RELATIVE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL);\r\n    }\r\n    isAbsolute() {\r\n        return (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE && this.sheet !== undefined);\r\n    }\r\n    shiftedByRows(numberOfRows) {\r\n        return new CellAddress(this.col, this.row + numberOfRows, this.type, this.sheet);\r\n    }\r\n    shiftedByColumns(numberOfColumns) {\r\n        return new CellAddress(this.col + numberOfColumns, this.row, this.type, this.sheet);\r\n    }\r\n    moved(toSheet, toRight, toBottom) {\r\n        const newSheet = this.sheet === undefined ? undefined : toSheet;\r\n        return new CellAddress(this.col + toRight, this.row + toBottom, this.type, newSheet);\r\n    }\r\n    withSheet(sheet) {\r\n        return new CellAddress(this.col, this.row, this.type, sheet);\r\n    }\r\n    isInvalid(baseAddress) {\r\n        return invalidSimpleCellAddress(this.toSimpleCellAddress(baseAddress));\r\n    }\r\n    shiftRelativeDimensions(toRight, toBottom) {\r\n        const col = this.isColumnAbsolute() ? this.col : this.col + toRight;\r\n        const row = this.isRowAbsolute() ? this.row : this.row + toBottom;\r\n        return new CellAddress(col, row, this.type, this.sheet);\r\n    }\r\n    shiftAbsoluteDimensions(toRight, toBottom) {\r\n        const col = this.isColumnRelative() ? this.col : this.col + toRight;\r\n        const row = this.isRowRelative() ? this.row : this.row + toBottom;\r\n        return new CellAddress(col, row, this.type, this.sheet);\r\n    }\r\n    hash(withSheet) {\r\n        const sheetPart = withSheet && this.sheet !== undefined ? `#${this.sheet}` : '';\r\n        switch (this.type) {\r\n            case CellReferenceType.CELL_REFERENCE_RELATIVE: {\r\n                return `${sheetPart}#${this.row}R${this.col}`;\r\n            }\r\n            case CellReferenceType.CELL_REFERENCE_ABSOLUTE: {\r\n                return `${sheetPart}#${this.row}A${this.col}`;\r\n            }\r\n            case CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL: {\r\n                return `${sheetPart}#${this.row}AC${this.col}`;\r\n            }\r\n            case CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW: {\r\n                return `${sheetPart}#${this.row}AR${this.col}`;\r\n            }\r\n        }\r\n    }\r\n    unparse(baseAddress) {\r\n        const simpleAddress = this.toSimpleCellAddress(baseAddress);\r\n        if (invalidSimpleCellAddress(simpleAddress)) {\r\n            return undefined;\r\n        }\r\n        const column = columnIndexToLabel(simpleAddress.col);\r\n        const rowDollar = this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW ? '$' : '';\r\n        const colDollar = this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL ? '$' : '';\r\n        return `${colDollar}${column}${rowDollar}${simpleAddress.row + 1}`;\r\n    }\r\n    exceedsSheetSizeLimits(maxColumns, maxRows) {\r\n        return this.row >= maxRows || this.col >= maxColumns;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { absoluteSheetReference, invalidSimpleColumnAddress, simpleColumnAddress } from '../Cell';\r\nimport { columnIndexToLabel } from './addressRepresentationConverters';\r\nexport var ReferenceType;\r\n(function (ReferenceType) {\r\n    ReferenceType[\"RELATIVE\"] = \"RELATIVE\";\r\n    ReferenceType[\"ABSOLUTE\"] = \"ABSOLUTE\";\r\n})(ReferenceType || (ReferenceType = {}));\r\nexport class ColumnAddress {\r\n    constructor(type, col, sheet) {\r\n        this.type = type;\r\n        this.col = col;\r\n        this.sheet = sheet;\r\n    }\r\n    static absolute(column, sheet) {\r\n        return new ColumnAddress(ReferenceType.ABSOLUTE, column, sheet);\r\n    }\r\n    static relative(column, sheet) {\r\n        return new ColumnAddress(ReferenceType.RELATIVE, column, sheet);\r\n    }\r\n    static compareByAbsoluteAddress(baseAddress) {\r\n        return (colA, colB) => colA.toSimpleColumnAddress(baseAddress).col - colB.toSimpleColumnAddress(baseAddress).col;\r\n    }\r\n    isColumnAbsolute() {\r\n        return (this.type === ReferenceType.ABSOLUTE);\r\n    }\r\n    isColumnRelative() {\r\n        return (this.type === ReferenceType.RELATIVE);\r\n    }\r\n    isAbsolute() {\r\n        return (this.type === ReferenceType.ABSOLUTE && this.sheet !== undefined);\r\n    }\r\n    moved(toSheet, toRight, _toBottom) {\r\n        const newSheet = this.sheet === undefined ? undefined : toSheet;\r\n        return new ColumnAddress(this.type, this.col + toRight, newSheet);\r\n    }\r\n    shiftedByColumns(numberOfColumns) {\r\n        return new ColumnAddress(this.type, this.col + numberOfColumns, this.sheet);\r\n    }\r\n    toSimpleColumnAddress(baseAddress) {\r\n        const sheet = absoluteSheetReference(this, baseAddress);\r\n        let column = this.col;\r\n        if (this.isColumnRelative()) {\r\n            column = baseAddress.col + this.col;\r\n        }\r\n        return simpleColumnAddress(sheet, column);\r\n    }\r\n    shiftRelativeDimensions(toRight, _toBottom) {\r\n        const col = this.isColumnRelative() ? this.col + toRight : this.col;\r\n        return new ColumnAddress(this.type, col, this.sheet);\r\n    }\r\n    shiftAbsoluteDimensions(toRight, _toBottom) {\r\n        const col = this.isColumnAbsolute() ? this.col + toRight : this.col;\r\n        return new ColumnAddress(this.type, col, this.sheet);\r\n    }\r\n    withSheet(sheet) {\r\n        return new ColumnAddress(this.type, this.col, sheet);\r\n    }\r\n    isInvalid(baseAddress) {\r\n        return this.toSimpleColumnAddress(baseAddress).col < 0;\r\n    }\r\n    hash(withSheet) {\r\n        const sheetPart = withSheet && this.sheet !== undefined ? `#${this.sheet}` : '';\r\n        switch (this.type) {\r\n            case ReferenceType.RELATIVE: {\r\n                return `${sheetPart}#COLR${this.col}`;\r\n            }\r\n            case ReferenceType.ABSOLUTE: {\r\n                return `${sheetPart}#COLA${this.col}`;\r\n            }\r\n        }\r\n    }\r\n    unparse(baseAddress) {\r\n        const simpleAddress = this.toSimpleColumnAddress(baseAddress);\r\n        if (invalidSimpleColumnAddress(simpleAddress)) {\r\n            return undefined;\r\n        }\r\n        const column = columnIndexToLabel(simpleAddress.col);\r\n        const dollar = this.type === ReferenceType.ABSOLUTE ? '$' : '';\r\n        return `${dollar}${column}`;\r\n    }\r\n    exceedsSheetSizeLimits(maxColumns) {\r\n        return this.col >= maxColumns;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { absoluteSheetReference, invalidSimpleRowAddress, simpleRowAddress } from '../Cell';\r\nimport { ReferenceType } from './ColumnAddress';\r\nexport class RowAddress {\r\n    constructor(type, row, sheet) {\r\n        this.type = type;\r\n        this.row = row;\r\n        this.sheet = sheet;\r\n    }\r\n    static absolute(row, sheet) {\r\n        return new RowAddress(ReferenceType.ABSOLUTE, row, sheet);\r\n    }\r\n    static relative(row, sheet) {\r\n        return new RowAddress(ReferenceType.RELATIVE, row, sheet);\r\n    }\r\n    static compareByAbsoluteAddress(baseAddress) {\r\n        return (rowA, rowB) => rowA.toSimpleRowAddress(baseAddress).row - rowB.toSimpleRowAddress(baseAddress).row;\r\n    }\r\n    isRowAbsolute() {\r\n        return (this.type === ReferenceType.ABSOLUTE);\r\n    }\r\n    isRowRelative() {\r\n        return (this.type === ReferenceType.RELATIVE);\r\n    }\r\n    isAbsolute() {\r\n        return (this.type === ReferenceType.ABSOLUTE && this.sheet !== undefined);\r\n    }\r\n    moved(toSheet, toRight, toBottom) {\r\n        const newSheet = this.sheet === undefined ? undefined : toSheet;\r\n        return new RowAddress(this.type, this.row + toBottom, newSheet);\r\n    }\r\n    shiftedByRows(numberOfColumns) {\r\n        return new RowAddress(this.type, this.row + numberOfColumns, this.sheet);\r\n    }\r\n    toSimpleRowAddress(baseAddress) {\r\n        const sheet = absoluteSheetReference(this, baseAddress);\r\n        let row = this.row;\r\n        if (this.isRowRelative()) {\r\n            row = baseAddress.row + this.row;\r\n        }\r\n        return simpleRowAddress(sheet, row);\r\n    }\r\n    shiftRelativeDimensions(toRight, toBottom) {\r\n        const row = this.isRowRelative() ? this.row + toBottom : this.row;\r\n        return new RowAddress(this.type, row, this.sheet);\r\n    }\r\n    shiftAbsoluteDimensions(toRight, toBottom) {\r\n        const row = this.isRowAbsolute() ? this.row + toBottom : this.row;\r\n        return new RowAddress(this.type, row, this.sheet);\r\n    }\r\n    withSheet(sheet) {\r\n        return new RowAddress(this.type, this.row, sheet);\r\n    }\r\n    isInvalid(baseAddress) {\r\n        return this.toSimpleRowAddress(baseAddress).row < 0;\r\n    }\r\n    hash(withSheet) {\r\n        const sheetPart = withSheet && this.sheet !== undefined ? `#${this.sheet}` : '';\r\n        switch (this.type) {\r\n            case ReferenceType.RELATIVE: {\r\n                return `${sheetPart}#ROWR${this.row}`;\r\n            }\r\n            case ReferenceType.ABSOLUTE: {\r\n                return `${sheetPart}#ROWA${this.row}`;\r\n            }\r\n        }\r\n    }\r\n    unparse(baseAddress) {\r\n        const simpleAddress = this.toSimpleRowAddress(baseAddress);\r\n        if (invalidSimpleRowAddress(simpleAddress)) {\r\n            return undefined;\r\n        }\r\n        const dollar = this.type === ReferenceType.ABSOLUTE ? '$' : '';\r\n        return `${dollar}${simpleAddress.row + 1}`;\r\n    }\r\n    exceedsSheetSizeLimits(maxRows) {\r\n        return this.row >= maxRows;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { createToken, Lexer } from 'chevrotain';\r\nexport const RANGE_OPERATOR = ':';\r\nexport const ABSOLUTE_OPERATOR = '$';\r\nexport const ALL_WHITESPACE_REGEXP = /\\s+/;\r\nexport const ODFF_WHITESPACE_REGEXP = /[ \\t\\n\\r]+/;\r\n/* arithmetic */\r\n// abstract for + -\r\nexport const AdditionOp = createToken({\r\n    name: 'AdditionOp',\r\n    pattern: Lexer.NA,\r\n});\r\nexport const PlusOp = createToken({ name: 'PlusOp', pattern: /\\+/, categories: AdditionOp });\r\nexport const MinusOp = createToken({ name: 'MinusOp', pattern: /-/, categories: AdditionOp });\r\n// abstract for * /\r\nexport const MultiplicationOp = createToken({\r\n    name: 'MultiplicationOp',\r\n    pattern: Lexer.NA,\r\n});\r\nexport const TimesOp = createToken({ name: 'TimesOp', pattern: /\\*/, categories: MultiplicationOp });\r\nexport const DivOp = createToken({ name: 'DivOp', pattern: /\\//, categories: MultiplicationOp });\r\nexport const PowerOp = createToken({ name: 'PowerOp', pattern: /\\^/ });\r\nexport const PercentOp = createToken({ name: 'PercentOp', pattern: /%/ });\r\nexport const BooleanOp = createToken({\r\n    name: 'BooleanOp',\r\n    pattern: Lexer.NA,\r\n});\r\nexport const EqualsOp = createToken({ name: 'EqualsOp', pattern: /=/, categories: BooleanOp });\r\nexport const NotEqualOp = createToken({ name: 'NotEqualOp', pattern: /<>/, categories: BooleanOp });\r\nexport const GreaterThanOp = createToken({ name: 'GreaterThanOp', pattern: />/, categories: BooleanOp });\r\nexport const LessThanOp = createToken({ name: 'LessThanOp', pattern: /</, categories: BooleanOp });\r\nexport const GreaterThanOrEqualOp = createToken({ name: 'GreaterThanOrEqualOp', pattern: />=/, categories: BooleanOp });\r\nexport const LessThanOrEqualOp = createToken({ name: 'LessThanOrEqualOp', pattern: /<=/, categories: BooleanOp });\r\nexport const ConcatenateOp = createToken({ name: 'ConcatenateOp', pattern: /&/ });\r\n/* addresses */\r\nexport const simpleSheetName = '[A-Za-z0-9_\\u00C0-\\u02AF]+';\r\nexport const quotedSheetName = \"'(((?!').|'')*)'\";\r\nexport const sheetNameRegexp = `(${simpleSheetName}|${quotedSheetName})!`;\r\nexport const CellReference = createToken({\r\n    name: 'CellReference',\r\n    pattern: new RegExp(`(${sheetNameRegexp})?\\\\${ABSOLUTE_OPERATOR}?[A-Za-z]+\\\\${ABSOLUTE_OPERATOR}?[0-9]+`),\r\n});\r\nexport const ColumnRange = createToken({\r\n    name: 'ColumnRange',\r\n    pattern: new RegExp(`(${sheetNameRegexp})?\\\\${ABSOLUTE_OPERATOR}?[A-Za-z]+${RANGE_OPERATOR}(${sheetNameRegexp})?\\\\${ABSOLUTE_OPERATOR}?[A-Za-z]+`),\r\n});\r\nexport const RowRange = createToken({\r\n    name: 'RowRange',\r\n    pattern: new RegExp(`(${sheetNameRegexp})?\\\\${ABSOLUTE_OPERATOR}?[0-9]+${RANGE_OPERATOR}(${sheetNameRegexp})?\\\\${ABSOLUTE_OPERATOR}?[0-9]+`),\r\n});\r\nexport const RangeSeparator = createToken({ name: 'RangeSeparator', pattern: `${RANGE_OPERATOR}` });\r\n/* parenthesis */\r\nexport const LParen = createToken({ name: 'LParen', pattern: /\\(/ });\r\nexport const RParen = createToken({ name: 'RParen', pattern: /\\)/ });\r\n/* array parenthesis */\r\nexport const ArrayLParen = createToken({ name: 'ArrayLParen', pattern: /{/ });\r\nexport const ArrayRParen = createToken({ name: 'ArrayRParen', pattern: /}/ });\r\n/* procedures */\r\nexport const ProcedureName = createToken({\r\n    name: 'ProcedureName',\r\n    pattern: /([A-Za-z\\u00C0-\\u02AF][A-Za-z0-9\\u00C0-\\u02AF._]*)\\(/\r\n});\r\n/* named expressions */\r\nexport const NamedExpression = createToken({\r\n    name: 'NamedExpression',\r\n    pattern: /[A-Za-z\\u00C0-\\u02AF_][A-Za-z0-9\\u00C0-\\u02AF._]*/\r\n});\r\n/* string literal */\r\nexport const StringLiteral = createToken({ name: 'StringLiteral', pattern: /\"([^\"\\\\]*(\\\\.[^\"\\\\]*)*)\"/ });\r\n/* error literal */\r\nexport const ErrorLiteral = createToken({ name: 'ErrorLiteral', pattern: /#[A-Za-z0-9\\/]+[?!]?/ });\r\nexport const buildLexerConfig = (config) => {\r\n    const offsetProcedureNameLiteral = config.translationPackage.getFunctionTranslation('OFFSET');\r\n    const errorMapping = config.errorMapping;\r\n    const functionMapping = config.translationPackage.buildFunctionMapping();\r\n    const whitespaceTokenRegexp = config.ignoreWhiteSpace === 'standard' ? ODFF_WHITESPACE_REGEXP : ALL_WHITESPACE_REGEXP;\r\n    const WhiteSpace = createToken({ name: 'WhiteSpace', pattern: whitespaceTokenRegexp });\r\n    const ArrayRowSeparator = createToken({ name: 'ArrayRowSep', pattern: config.arrayRowSeparator });\r\n    const ArrayColSeparator = createToken({ name: 'ArrayColSep', pattern: config.arrayColumnSeparator });\r\n    /* configurable tokens */\r\n    let ArgSeparator, inject;\r\n    if (config.functionArgSeparator === config.arrayColumnSeparator) {\r\n        ArgSeparator = ArrayColSeparator;\r\n        inject = [];\r\n    }\r\n    else if (config.functionArgSeparator === config.arrayRowSeparator) {\r\n        ArgSeparator = ArrayRowSeparator;\r\n        inject = [];\r\n    }\r\n    else {\r\n        ArgSeparator = createToken({ name: 'ArgSeparator', pattern: config.functionArgSeparator });\r\n        inject = [ArgSeparator];\r\n    }\r\n    const NumberLiteral = createToken({\r\n        name: 'NumberLiteral',\r\n        pattern: new RegExp(`(([${config.decimalSeparator}]\\\\d+)|(\\\\d+([${config.decimalSeparator}]\\\\d*)?))(e[+-]?\\\\d+)?`)\r\n    });\r\n    const OffsetProcedureName = createToken({\r\n        name: 'OffsetProcedureName',\r\n        pattern: new RegExp(offsetProcedureNameLiteral, 'i')\r\n    });\r\n    /* order is important, first pattern is used */\r\n    const allTokens = [\r\n        WhiteSpace,\r\n        PlusOp,\r\n        MinusOp,\r\n        TimesOp,\r\n        DivOp,\r\n        PowerOp,\r\n        EqualsOp,\r\n        NotEqualOp,\r\n        PercentOp,\r\n        GreaterThanOrEqualOp,\r\n        LessThanOrEqualOp,\r\n        GreaterThanOp,\r\n        LessThanOp,\r\n        LParen,\r\n        RParen,\r\n        ArrayLParen,\r\n        ArrayRParen,\r\n        OffsetProcedureName,\r\n        ProcedureName,\r\n        RangeSeparator,\r\n        ...inject,\r\n        ColumnRange,\r\n        RowRange,\r\n        NumberLiteral,\r\n        StringLiteral,\r\n        ErrorLiteral,\r\n        ConcatenateOp,\r\n        BooleanOp,\r\n        AdditionOp,\r\n        MultiplicationOp,\r\n        CellReference,\r\n        NamedExpression,\r\n        ArrayRowSeparator,\r\n        ArrayColSeparator,\r\n    ];\r\n    return {\r\n        ArgSeparator,\r\n        NumberLiteral,\r\n        OffsetProcedureName,\r\n        ArrayRowSeparator,\r\n        ArrayColSeparator,\r\n        WhiteSpace,\r\n        allTokens,\r\n        errorMapping,\r\n        functionMapping,\r\n        decimalSeparator: config.decimalSeparator,\r\n        maxColumns: config.maxColumns,\r\n        maxRows: config.maxRows\r\n    };\r\n};\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__83__;","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { tokenMatcher } from 'chevrotain';\r\nimport { ErrorType } from '../Cell';\r\nimport { AstNodeType, buildParsingErrorAst } from './';\r\nimport { cellAddressFromString, columnAddressFromString, rowAddressFromString, } from './addressRepresentationConverters';\r\nimport { imageWithWhitespace, ParsingErrorType, RangeSheetReferenceType } from './Ast';\r\nimport { binaryOpTokenMap } from './binaryOpTokenMap';\r\nimport { Cache } from './Cache';\r\nimport { FormulaLexer, FormulaParser } from './FormulaParser';\r\nimport { buildLexerConfig, CellReference, ColumnRange, ProcedureName, RowRange, } from './LexerConfig';\r\nimport { formatNumber } from './Unparser';\r\n/**\r\n * Parses formula using caching if feasible.\r\n */\r\nexport class ParserWithCaching {\r\n    constructor(config, functionRegistry, sheetMapping) {\r\n        this.config = config;\r\n        this.functionRegistry = functionRegistry;\r\n        this.sheetMapping = sheetMapping;\r\n        this.statsCacheUsed = 0;\r\n        this.lexerConfig = buildLexerConfig(config);\r\n        this.lexer = new FormulaLexer(this.lexerConfig);\r\n        this.formulaParser = new FormulaParser(this.lexerConfig, this.sheetMapping);\r\n        this.cache = new Cache(this.functionRegistry);\r\n    }\r\n    /**\r\n     * Parses a formula.\r\n     *\r\n     * @param text - formula to parse\r\n     * @param formulaAddress - address with regard to which formula should be parsed. Impacts computed addresses in R0C0 format.\r\n     */\r\n    parse(text, formulaAddress) {\r\n        const lexerResult = this.tokenizeFormula(text);\r\n        if (lexerResult.errors.length > 0) {\r\n            const errors = lexerResult.errors.map((e) => ({\r\n                type: ParsingErrorType.LexingError,\r\n                message: e.message,\r\n            }));\r\n            return {\r\n                ast: buildParsingErrorAst(),\r\n                errors,\r\n                hasVolatileFunction: false,\r\n                hasStructuralChangeFunction: false,\r\n                dependencies: []\r\n            };\r\n        }\r\n        const hash = this.computeHashFromTokens(lexerResult.tokens, formulaAddress);\r\n        let cacheResult = this.cache.get(hash);\r\n        if (cacheResult !== undefined) {\r\n            ++this.statsCacheUsed;\r\n        }\r\n        else {\r\n            const processedTokens = this.bindWhitespacesToTokens(lexerResult.tokens);\r\n            const parsingResult = this.formulaParser.parseFromTokens(processedTokens, formulaAddress);\r\n            if (parsingResult.errors.length > 0) {\r\n                return Object.assign(Object.assign({}, parsingResult), { hasVolatileFunction: false, hasStructuralChangeFunction: false, dependencies: [] });\r\n            }\r\n            else {\r\n                cacheResult = this.cache.set(hash, parsingResult.ast);\r\n            }\r\n        }\r\n        const { ast, hasVolatileFunction, hasStructuralChangeFunction, relativeDependencies } = cacheResult;\r\n        return { ast, errors: [], hasVolatileFunction, hasStructuralChangeFunction, dependencies: relativeDependencies };\r\n    }\r\n    fetchCachedResultForAst(ast) {\r\n        const hash = this.computeHashFromAst(ast);\r\n        return this.fetchCachedResult(hash);\r\n    }\r\n    fetchCachedResult(hash) {\r\n        const cacheResult = this.cache.get(hash);\r\n        if (cacheResult === undefined) {\r\n            throw new Error('There is no AST with such key in the cache');\r\n        }\r\n        else {\r\n            const { ast, hasVolatileFunction, hasStructuralChangeFunction, relativeDependencies } = cacheResult;\r\n            return { ast, errors: [], hasVolatileFunction, hasStructuralChangeFunction, dependencies: relativeDependencies };\r\n        }\r\n    }\r\n    computeHashFromTokens(tokens, baseAddress) {\r\n        var _a;\r\n        let hash = '';\r\n        let idx = 0;\r\n        while (idx < tokens.length) {\r\n            const token = tokens[idx];\r\n            if (tokenMatcher(token, CellReference)) {\r\n                const cellAddress = cellAddressFromString(this.sheetMapping, token.image, baseAddress);\r\n                if (cellAddress === undefined) {\r\n                    hash = hash.concat(token.image);\r\n                }\r\n                else {\r\n                    hash = hash.concat(cellAddress.hash(true));\r\n                }\r\n            }\r\n            else if (tokenMatcher(token, ProcedureName)) {\r\n                const procedureName = token.image.toUpperCase().slice(0, -1);\r\n                const canonicalProcedureName = (_a = this.lexerConfig.functionMapping[procedureName]) !== null && _a !== void 0 ? _a : procedureName;\r\n                hash = hash.concat(canonicalProcedureName, '(');\r\n            }\r\n            else if (tokenMatcher(token, ColumnRange)) {\r\n                const [start, end] = token.image.split(':');\r\n                const startAddress = columnAddressFromString(this.sheetMapping, start, baseAddress);\r\n                const endAddress = columnAddressFromString(this.sheetMapping, end, baseAddress);\r\n                if (startAddress === undefined || endAddress === undefined) {\r\n                    hash = hash.concat('!REF');\r\n                }\r\n                else {\r\n                    hash = hash.concat(startAddress.hash(true), ':', endAddress.hash(true));\r\n                }\r\n            }\r\n            else if (tokenMatcher(token, RowRange)) {\r\n                const [start, end] = token.image.split(':');\r\n                const startAddress = rowAddressFromString(this.sheetMapping, start, baseAddress);\r\n                const endAddress = rowAddressFromString(this.sheetMapping, end, baseAddress);\r\n                if (startAddress === undefined || endAddress === undefined) {\r\n                    hash = hash.concat('!REF');\r\n                }\r\n                else {\r\n                    hash = hash.concat(startAddress.hash(true), ':', endAddress.hash(true));\r\n                }\r\n            }\r\n            else {\r\n                hash = hash.concat(token.image);\r\n            }\r\n            idx++;\r\n        }\r\n        return hash;\r\n    }\r\n    rememberNewAst(ast) {\r\n        const hash = this.computeHashFromAst(ast);\r\n        return this.cache.maybeSetAndThenGet(hash, ast);\r\n    }\r\n    computeHashFromAst(ast) {\r\n        return '=' + this.computeHashOfAstNode(ast);\r\n    }\r\n    computeHashOfAstNode(ast) {\r\n        switch (ast.type) {\r\n            case AstNodeType.EMPTY: {\r\n                return ast.leadingWhitespace || '';\r\n            }\r\n            case AstNodeType.NUMBER: {\r\n                return imageWithWhitespace(formatNumber(ast.value, this.config.decimalSeparator), ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.STRING: {\r\n                return imageWithWhitespace('\"' + ast.value + '\"', ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.NAMED_EXPRESSION: {\r\n                return imageWithWhitespace(ast.expressionName, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.FUNCTION_CALL: {\r\n                const args = ast.args.map((arg) => this.computeHashOfAstNode(arg)).join(this.config.functionArgSeparator);\r\n                const rightPart = ast.procedureName + '(' + args + imageWithWhitespace(')', ast.internalWhitespace);\r\n                return imageWithWhitespace(rightPart, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.CELL_REFERENCE: {\r\n                return imageWithWhitespace(ast.reference.hash(true), ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.COLUMN_RANGE:\r\n            case AstNodeType.ROW_RANGE:\r\n            case AstNodeType.CELL_RANGE: {\r\n                const start = ast.start.hash(ast.sheetReferenceType !== RangeSheetReferenceType.RELATIVE);\r\n                const end = ast.end.hash(ast.sheetReferenceType === RangeSheetReferenceType.BOTH_ABSOLUTE);\r\n                return imageWithWhitespace(start + ':' + end, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.MINUS_UNARY_OP: {\r\n                return imageWithWhitespace('-' + this.computeHashOfAstNode(ast.value), ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.PLUS_UNARY_OP: {\r\n                return imageWithWhitespace('+' + this.computeHashOfAstNode(ast.value), ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.PERCENT_OP: {\r\n                return this.computeHashOfAstNode(ast.value) + imageWithWhitespace('%', ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.ERROR: {\r\n                const image = this.config.translationPackage.getErrorTranslation(ast.error ? ast.error.type : ErrorType.ERROR);\r\n                return imageWithWhitespace(image, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.ERROR_WITH_RAW_INPUT: {\r\n                return imageWithWhitespace(ast.rawInput, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.ARRAY: {\r\n                const args = ast.args.map(row => row.map(val => this.computeHashOfAstNode(val)).join(',')).join(';');\r\n                return imageWithWhitespace('{' + args + imageWithWhitespace('}', ast.internalWhitespace), ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.PARENTHESIS: {\r\n                const expression = this.computeHashOfAstNode(ast.expression);\r\n                const rightPart = '(' + expression + imageWithWhitespace(')', ast.internalWhitespace);\r\n                return imageWithWhitespace(rightPart, ast.leadingWhitespace);\r\n            }\r\n            default: {\r\n                return this.computeHashOfAstNode(ast.left) + imageWithWhitespace(binaryOpTokenMap[ast.type], ast.leadingWhitespace) + this.computeHashOfAstNode(ast.right);\r\n            }\r\n        }\r\n    }\r\n    bindWhitespacesToTokens(tokens) {\r\n        const processedTokens = [];\r\n        const first = tokens[0];\r\n        if (!tokenMatcher(first, this.lexerConfig.WhiteSpace)) {\r\n            processedTokens.push(first);\r\n        }\r\n        for (let i = 1; i < tokens.length; ++i) {\r\n            const current = tokens[i];\r\n            if (tokenMatcher(current, this.lexerConfig.WhiteSpace)) {\r\n                continue;\r\n            }\r\n            const previous = tokens[i - 1];\r\n            if (tokenMatcher(previous, this.lexerConfig.WhiteSpace)) {\r\n                current.leadingWhitespace = previous;\r\n            }\r\n            processedTokens.push(current);\r\n        }\r\n        return processedTokens;\r\n    }\r\n    tokenizeFormula(text) {\r\n        return this.lexer.tokenizeFormula(text);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError } from '../Cell';\r\nexport const parsingError = (type, message) => ({\r\n    type, message\r\n});\r\nexport var ParsingErrorType;\r\n(function (ParsingErrorType) {\r\n    ParsingErrorType[\"LexingError\"] = \"LexingError\";\r\n    ParsingErrorType[\"ParserError\"] = \"ParsingError\";\r\n    ParsingErrorType[\"StaticOffsetError\"] = \"StaticOffsetError\";\r\n    ParsingErrorType[\"StaticOffsetOutOfRangeError\"] = \"StaticOffsetOutOfRangeError\";\r\n    ParsingErrorType[\"RangeOffsetNotAllowed\"] = \"RangeOffsetNotAllowed\";\r\n})(ParsingErrorType || (ParsingErrorType = {}));\r\nexport var AstNodeType;\r\n(function (AstNodeType) {\r\n    AstNodeType[\"EMPTY\"] = \"EMPTY\";\r\n    AstNodeType[\"NUMBER\"] = \"NUMBER\";\r\n    AstNodeType[\"STRING\"] = \"STRING\";\r\n    AstNodeType[\"MINUS_UNARY_OP\"] = \"MINUS_UNARY_OP\";\r\n    AstNodeType[\"PLUS_UNARY_OP\"] = \"PLUS_UNARY_OP\";\r\n    AstNodeType[\"PERCENT_OP\"] = \"PERCENT_OP\";\r\n    AstNodeType[\"CONCATENATE_OP\"] = \"CONCATENATE_OP\";\r\n    AstNodeType[\"EQUALS_OP\"] = \"EQUALS_OP\";\r\n    AstNodeType[\"NOT_EQUAL_OP\"] = \"NOT_EQUAL_OP\";\r\n    AstNodeType[\"GREATER_THAN_OP\"] = \"GREATER_THAN_OP\";\r\n    AstNodeType[\"LESS_THAN_OP\"] = \"LESS_THAN_OP\";\r\n    AstNodeType[\"GREATER_THAN_OR_EQUAL_OP\"] = \"GREATER_THAN_OR_EQUAL_OP\";\r\n    AstNodeType[\"LESS_THAN_OR_EQUAL_OP\"] = \"LESS_THAN_OR_EQUAL_OP\";\r\n    AstNodeType[\"PLUS_OP\"] = \"PLUS_OP\";\r\n    AstNodeType[\"MINUS_OP\"] = \"MINUS_OP\";\r\n    AstNodeType[\"TIMES_OP\"] = \"TIMES_OP\";\r\n    AstNodeType[\"DIV_OP\"] = \"DIV_OP\";\r\n    AstNodeType[\"POWER_OP\"] = \"POWER_OP\";\r\n    AstNodeType[\"FUNCTION_CALL\"] = \"FUNCTION_CALL\";\r\n    AstNodeType[\"NAMED_EXPRESSION\"] = \"NAMED_EXPRESSION\";\r\n    AstNodeType[\"PARENTHESIS\"] = \"PARENTHESES\";\r\n    AstNodeType[\"CELL_REFERENCE\"] = \"CELL_REFERENCE\";\r\n    AstNodeType[\"CELL_RANGE\"] = \"CELL_RANGE\";\r\n    AstNodeType[\"COLUMN_RANGE\"] = \"COLUMN_RANGE\";\r\n    AstNodeType[\"ROW_RANGE\"] = \"ROW_RANGE\";\r\n    AstNodeType[\"ERROR\"] = \"ERROR\";\r\n    AstNodeType[\"ERROR_WITH_RAW_INPUT\"] = \"ERROR_WITH_RAW_INPUT\";\r\n    AstNodeType[\"ARRAY\"] = \"ARRAY\";\r\n})(AstNodeType || (AstNodeType = {}));\r\nexport var RangeSheetReferenceType;\r\n(function (RangeSheetReferenceType) {\r\n    RangeSheetReferenceType[RangeSheetReferenceType[\"RELATIVE\"] = 0] = \"RELATIVE\";\r\n    RangeSheetReferenceType[RangeSheetReferenceType[\"START_ABSOLUTE\"] = 1] = \"START_ABSOLUTE\";\r\n    RangeSheetReferenceType[RangeSheetReferenceType[\"BOTH_ABSOLUTE\"] = 2] = \"BOTH_ABSOLUTE\";\r\n})(RangeSheetReferenceType || (RangeSheetReferenceType = {}));\r\nexport const buildEmptyArgAst = (leadingWhitespace) => ({\r\n    type: AstNodeType.EMPTY,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildNumberAst = (value, leadingWhitespace) => ({\r\n    type: AstNodeType.NUMBER,\r\n    value: value,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildStringAst = (token) => {\r\n    var _a;\r\n    return ({\r\n        type: AstNodeType.STRING,\r\n        value: token.image.slice(1, -1),\r\n        leadingWhitespace: (_a = token.leadingWhitespace) === null || _a === void 0 ? void 0 : _a.image,\r\n    });\r\n};\r\nexport const buildCellReferenceAst = (reference, leadingWhitespace) => ({\r\n    type: AstNodeType.CELL_REFERENCE,\r\n    reference,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildCellRangeAst = (start, end, sheetReferenceType, leadingWhitespace) => {\r\n    assertRangeConsistency(start, end, sheetReferenceType);\r\n    return {\r\n        type: AstNodeType.CELL_RANGE,\r\n        start,\r\n        end,\r\n        sheetReferenceType,\r\n        leadingWhitespace\r\n    };\r\n};\r\nexport const buildColumnRangeAst = (start, end, sheetReferenceType, leadingWhitespace) => {\r\n    assertRangeConsistency(start, end, sheetReferenceType);\r\n    return {\r\n        type: AstNodeType.COLUMN_RANGE,\r\n        start,\r\n        end,\r\n        sheetReferenceType,\r\n        leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n    };\r\n};\r\nexport const buildRowRangeAst = (start, end, sheetReferenceType, leadingWhitespace) => {\r\n    assertRangeConsistency(start, end, sheetReferenceType);\r\n    return {\r\n        type: AstNodeType.ROW_RANGE,\r\n        start,\r\n        end,\r\n        sheetReferenceType,\r\n        leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n    };\r\n};\r\nexport const buildConcatenateOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.CONCATENATE_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildEqualsOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.EQUALS_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildNotEqualOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.NOT_EQUAL_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildGreaterThanOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.GREATER_THAN_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildLessThanOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.LESS_THAN_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildGreaterThanOrEqualOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.GREATER_THAN_OR_EQUAL_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildLessThanOrEqualOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.LESS_THAN_OR_EQUAL_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildPlusOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.PLUS_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildMinusOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.MINUS_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildTimesOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.TIMES_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildDivOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.DIV_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildPowerOpAst = (left, right, leadingWhitespace) => ({\r\n    type: AstNodeType.POWER_OP,\r\n    left,\r\n    right,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildMinusUnaryOpAst = (value, leadingWhitespace) => ({\r\n    type: AstNodeType.MINUS_UNARY_OP,\r\n    value,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildPlusUnaryOpAst = (value, leadingWhitespace) => ({\r\n    type: AstNodeType.PLUS_UNARY_OP,\r\n    value,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildPercentOpAst = (value, leadingWhitespace) => ({\r\n    type: AstNodeType.PERCENT_OP,\r\n    value,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildProcedureAst = (procedureName, args, leadingWhitespace, internalWhitespace) => ({\r\n    type: AstNodeType.FUNCTION_CALL,\r\n    procedureName,\r\n    args,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n    internalWhitespace: internalWhitespace === null || internalWhitespace === void 0 ? void 0 : internalWhitespace.image,\r\n});\r\nexport const buildArrayAst = (args, leadingWhitespace, internalWhitespace) => ({\r\n    type: AstNodeType.ARRAY,\r\n    args,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n    internalWhitespace: internalWhitespace === null || internalWhitespace === void 0 ? void 0 : internalWhitespace.image,\r\n});\r\nexport const buildNamedExpressionAst = (expressionName, leadingWhitespace) => ({\r\n    type: AstNodeType.NAMED_EXPRESSION,\r\n    expressionName,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildParenthesisAst = (expression, leadingWhitespace, internalWhitespace) => ({\r\n    type: AstNodeType.PARENTHESIS,\r\n    expression,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n    internalWhitespace: internalWhitespace === null || internalWhitespace === void 0 ? void 0 : internalWhitespace.image,\r\n});\r\nexport const buildCellErrorAst = (error, leadingWhitespace) => ({\r\n    type: AstNodeType.ERROR,\r\n    error,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildErrorWithRawInputAst = (rawInput, error, leadingWhitespace) => ({\r\n    type: AstNodeType.ERROR_WITH_RAW_INPUT,\r\n    error,\r\n    rawInput,\r\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\r\n});\r\nexport const buildParsingErrorAst = () => ({\r\n    type: AstNodeType.ERROR,\r\n    error: CellError.parsingError()\r\n});\r\nfunction assertRangeConsistency(start, end, sheetReferenceType) {\r\n    if ((start.sheet !== undefined && end.sheet === undefined) || (start.sheet === undefined && end.sheet !== undefined)) {\r\n        throw new Error('Start address inconsistent with end address');\r\n    }\r\n    if ((start.sheet === undefined && sheetReferenceType !== RangeSheetReferenceType.RELATIVE)\r\n        || (start.sheet !== undefined && sheetReferenceType === RangeSheetReferenceType.RELATIVE)) {\r\n        throw new Error('Sheet address inconsistent with sheet reference type');\r\n    }\r\n}\r\nexport function imageWithWhitespace(image, leadingWhitespace) {\r\n    return (leadingWhitespace !== null && leadingWhitespace !== void 0 ? leadingWhitespace : '') + image;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AstNodeType } from './Ast';\r\nexport const binaryOpTokenMap = {\r\n    [AstNodeType.PLUS_OP]: '+',\r\n    [AstNodeType.MINUS_OP]: '-',\r\n    [AstNodeType.TIMES_OP]: '*',\r\n    [AstNodeType.DIV_OP]: '/',\r\n    [AstNodeType.CONCATENATE_OP]: '&',\r\n    [AstNodeType.POWER_OP]: '^',\r\n    [AstNodeType.EQUALS_OP]: '=',\r\n    [AstNodeType.NOT_EQUAL_OP]: '<>',\r\n    [AstNodeType.GREATER_THAN_OP]: '>',\r\n    [AstNodeType.GREATER_THAN_OR_EQUAL_OP]: '>=',\r\n    [AstNodeType.LESS_THAN_OP]: '<',\r\n    [AstNodeType.LESS_THAN_OR_EQUAL_OP]: '<=',\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AstNodeType, collectDependencies } from './';\r\nconst buildCacheEntry = (ast, relativeDependencies, hasVolatileFunction, hasStructuralChangeFunction) => ({\r\n    ast,\r\n    relativeDependencies,\r\n    hasVolatileFunction,\r\n    hasStructuralChangeFunction\r\n});\r\nexport class Cache {\r\n    constructor(functionRegistry) {\r\n        this.functionRegistry = functionRegistry;\r\n        this.cache = new Map();\r\n    }\r\n    set(hash, ast) {\r\n        const astRelativeDependencies = collectDependencies(ast, this.functionRegistry);\r\n        const cacheEntry = buildCacheEntry(ast, astRelativeDependencies, doesContainFunctions(ast, this.functionRegistry.isFunctionVolatile), doesContainFunctions(ast, this.functionRegistry.isFunctionDependentOnSheetStructureChange));\r\n        this.cache.set(hash, cacheEntry);\r\n        return cacheEntry;\r\n    }\r\n    get(hash) {\r\n        return this.cache.get(hash);\r\n    }\r\n    maybeSetAndThenGet(hash, ast) {\r\n        const entryFromCache = this.cache.get(hash);\r\n        if (entryFromCache !== undefined) {\r\n            return entryFromCache.ast;\r\n        }\r\n        else {\r\n            this.set(hash, ast);\r\n            return ast;\r\n        }\r\n    }\r\n}\r\nexport const doesContainFunctions = (ast, functionCriterion) => {\r\n    switch (ast.type) {\r\n        case AstNodeType.EMPTY:\r\n        case AstNodeType.NUMBER:\r\n        case AstNodeType.STRING:\r\n        case AstNodeType.ERROR:\r\n        case AstNodeType.ERROR_WITH_RAW_INPUT:\r\n        case AstNodeType.CELL_REFERENCE:\r\n        case AstNodeType.CELL_RANGE:\r\n        case AstNodeType.COLUMN_RANGE:\r\n        case AstNodeType.ROW_RANGE:\r\n        case AstNodeType.NAMED_EXPRESSION:\r\n            return false;\r\n        case AstNodeType.PERCENT_OP:\r\n        case AstNodeType.PLUS_UNARY_OP:\r\n        case AstNodeType.MINUS_UNARY_OP: {\r\n            return doesContainFunctions(ast.value, functionCriterion);\r\n        }\r\n        case AstNodeType.CONCATENATE_OP:\r\n        case AstNodeType.EQUALS_OP:\r\n        case AstNodeType.NOT_EQUAL_OP:\r\n        case AstNodeType.LESS_THAN_OP:\r\n        case AstNodeType.GREATER_THAN_OP:\r\n        case AstNodeType.LESS_THAN_OR_EQUAL_OP:\r\n        case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\r\n        case AstNodeType.MINUS_OP:\r\n        case AstNodeType.PLUS_OP:\r\n        case AstNodeType.TIMES_OP:\r\n        case AstNodeType.DIV_OP:\r\n        case AstNodeType.POWER_OP:\r\n            return doesContainFunctions(ast.left, functionCriterion) || doesContainFunctions(ast.right, functionCriterion);\r\n        case AstNodeType.PARENTHESIS:\r\n            return doesContainFunctions(ast.expression, functionCriterion);\r\n        case AstNodeType.FUNCTION_CALL: {\r\n            if (functionCriterion(ast.procedureName)) {\r\n                return true;\r\n            }\r\n            return ast.args.some((arg) => doesContainFunctions(arg, functionCriterion));\r\n        }\r\n        case AstNodeType.ARRAY: {\r\n            return ast.args.some(row => row.some(arg => doesContainFunctions(arg, functionCriterion)));\r\n        }\r\n    }\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { EmbeddedActionsParser, EMPTY_ALT, Lexer, tokenMatcher } from 'chevrotain';\r\nimport { CellError, ErrorType, simpleCellAddress } from '../Cell';\r\nimport { ErrorMessage } from '../error-message';\r\nimport { cellAddressFromString, columnAddressFromString, rowAddressFromString, } from './addressRepresentationConverters';\r\nimport { AstNodeType, buildArrayAst, buildCellErrorAst, buildCellRangeAst, buildCellReferenceAst, buildColumnRangeAst, buildConcatenateOpAst, buildDivOpAst, buildEmptyArgAst, buildEqualsOpAst, buildErrorWithRawInputAst, buildGreaterThanOpAst, buildGreaterThanOrEqualOpAst, buildLessThanOpAst, buildLessThanOrEqualOpAst, buildMinusOpAst, buildMinusUnaryOpAst, buildNamedExpressionAst, buildNotEqualOpAst, buildNumberAst, buildParenthesisAst, buildParsingErrorAst, buildPercentOpAst, buildPlusOpAst, buildPlusUnaryOpAst, buildPowerOpAst, buildProcedureAst, buildRowRangeAst, buildStringAst, buildTimesOpAst, parsingError, ParsingErrorType, RangeSheetReferenceType, } from './Ast';\r\nimport { CellAddress, CellReferenceType } from './CellAddress';\r\nimport { AdditionOp, ArrayLParen, ArrayRParen, BooleanOp, CellReference, ColumnRange, ConcatenateOp, DivOp, EqualsOp, ErrorLiteral, GreaterThanOp, GreaterThanOrEqualOp, LessThanOp, LessThanOrEqualOp, LParen, MinusOp, MultiplicationOp, NamedExpression, NotEqualOp, PercentOp, PlusOp, PowerOp, ProcedureName, RangeSeparator, RowRange, RParen, StringLiteral, TimesOp, } from './LexerConfig';\r\nimport { RowAddress } from './RowAddress';\r\nimport { ColumnAddress } from './ColumnAddress';\r\n/**\r\n * LL(k) formula parser described using Chevrotain DSL\r\n *\r\n * It is equivalent to the grammar below:\r\n *\r\n * F -> '=' E <br/>\r\n * B -> K < B | K >= B ... | K <br/>\r\n * K -> E & K | E <br/>\r\n * E -> M + E | M - E | M <br/>\r\n * M -> W * M | W / M | W <br/>\r\n * W -> C * W | C <br/>\r\n * C -> N | R | O | A | P | num <br/>\r\n * N -> '(' E ')' <br/>\r\n * R -> A:OFFSET(..) | A:A <br/>\r\n * O -> OFFSET(..) | OFFSET(..):A | OFFSET(..):OFFSET(..) <br/>\r\n * A -> A1 | $A1 | A$1 | $A$1 <br/>\r\n * P -> SUM(..) <br/>\r\n */\r\nexport class FormulaParser extends EmbeddedActionsParser {\r\n    constructor(lexerConfig, sheetMapping) {\r\n        super(lexerConfig.allTokens, { outputCst: false, maxLookahead: 7 });\r\n        this.booleanExpressionOrEmpty = this.RULE('booleanExpressionOrEmpty', () => {\r\n            return this.OR([\r\n                { ALT: () => this.SUBRULE(this.booleanExpression) },\r\n                { ALT: EMPTY_ALT(buildEmptyArgAst()) }\r\n            ]);\r\n        });\r\n        /**\r\n         * Rule for procedure expressions: SUM(1,A1)\r\n         */\r\n        this.procedureExpression = this.RULE('procedureExpression', () => {\r\n            var _a;\r\n            const procedureNameToken = this.CONSUME(ProcedureName);\r\n            const procedureName = procedureNameToken.image.toUpperCase().slice(0, -1);\r\n            const canonicalProcedureName = (_a = this.lexerConfig.functionMapping[procedureName]) !== null && _a !== void 0 ? _a : procedureName;\r\n            const args = [];\r\n            let argument = this.SUBRULE(this.booleanExpressionOrEmpty);\r\n            this.MANY(() => {\r\n                var _a;\r\n                const separator = this.CONSUME(this.lexerConfig.ArgSeparator);\r\n                if (argument.type === AstNodeType.EMPTY) {\r\n                    argument.leadingWhitespace = (_a = separator.leadingWhitespace) === null || _a === void 0 ? void 0 : _a.image;\r\n                }\r\n                args.push(argument);\r\n                argument = this.SUBRULE2(this.booleanExpressionOrEmpty);\r\n            });\r\n            args.push(argument);\r\n            if (args.length === 1 && args[0].type === AstNodeType.EMPTY) {\r\n                args.length = 0;\r\n            }\r\n            const rParenToken = this.CONSUME(RParen);\r\n            return buildProcedureAst(canonicalProcedureName, args, procedureNameToken.leadingWhitespace, rParenToken.leadingWhitespace);\r\n        });\r\n        this.namedExpressionExpression = this.RULE('namedExpressionExpression', () => {\r\n            const name = this.CONSUME(NamedExpression);\r\n            return buildNamedExpressionAst(name.image, name.leadingWhitespace);\r\n        });\r\n        /**\r\n         * Rule for OFFSET() function expression\r\n         */\r\n        this.offsetProcedureExpression = this.RULE('offsetProcedureExpression', () => {\r\n            const args = [];\r\n            this.CONSUME(this.lexerConfig.OffsetProcedureName);\r\n            this.CONSUME(LParen);\r\n            this.MANY_SEP({\r\n                SEP: this.lexerConfig.ArgSeparator,\r\n                DEF: () => {\r\n                    args.push(this.SUBRULE(this.booleanExpression));\r\n                },\r\n            });\r\n            this.CONSUME(RParen);\r\n            return this.handleOffsetHeuristic(args);\r\n        });\r\n        /**\r\n         * Rule for column range, e.g. A:B, Sheet1!A:B, Sheet1!A:Sheet1!B\r\n         */\r\n        this.columnRangeExpression = this.RULE('columnRangeExpression', () => {\r\n            const range = this.CONSUME(ColumnRange);\r\n            const [startImage, endImage] = range.image.split(':');\r\n            const firstAddress = this.ACTION(() => columnAddressFromString(this.sheetMapping, startImage, this.formulaAddress));\r\n            const secondAddress = this.ACTION(() => columnAddressFromString(this.sheetMapping, endImage, this.formulaAddress));\r\n            if (firstAddress === undefined || secondAddress === undefined) {\r\n                return buildCellErrorAst(new CellError(ErrorType.REF));\r\n            }\r\n            if (firstAddress.exceedsSheetSizeLimits(this.lexerConfig.maxColumns) || secondAddress.exceedsSheetSizeLimits(this.lexerConfig.maxColumns)) {\r\n                return buildErrorWithRawInputAst(range.image, new CellError(ErrorType.NAME), range.leadingWhitespace);\r\n            }\r\n            if (firstAddress.sheet === undefined && secondAddress.sheet !== undefined) {\r\n                return this.parsingError(ParsingErrorType.ParserError, 'Malformed range expression');\r\n            }\r\n            const { firstEnd, secondEnd, sheetRefType } = FormulaParser.fixSheetIdsForRangeEnds(firstAddress, secondAddress);\r\n            const { start, end } = this.orderColumnRangeEnds(firstEnd, secondEnd);\r\n            return buildColumnRangeAst(start, end, sheetRefType, range.leadingWhitespace);\r\n        });\r\n        /**\r\n         * Rule for row range, e.g. 1:2, Sheet1!1:2, Sheet1!1:Sheet1!2\r\n         */\r\n        this.rowRangeExpression = this.RULE('rowRangeExpression', () => {\r\n            const range = this.CONSUME(RowRange);\r\n            const [startImage, endImage] = range.image.split(':');\r\n            const firstAddress = this.ACTION(() => rowAddressFromString(this.sheetMapping, startImage, this.formulaAddress));\r\n            const secondAddress = this.ACTION(() => rowAddressFromString(this.sheetMapping, endImage, this.formulaAddress));\r\n            if (firstAddress === undefined || secondAddress === undefined) {\r\n                return buildCellErrorAst(new CellError(ErrorType.REF));\r\n            }\r\n            if (firstAddress.exceedsSheetSizeLimits(this.lexerConfig.maxRows) || secondAddress.exceedsSheetSizeLimits(this.lexerConfig.maxRows)) {\r\n                return buildErrorWithRawInputAst(range.image, new CellError(ErrorType.NAME), range.leadingWhitespace);\r\n            }\r\n            if (firstAddress.sheet === undefined && secondAddress.sheet !== undefined) {\r\n                return this.parsingError(ParsingErrorType.ParserError, 'Malformed range expression');\r\n            }\r\n            const { firstEnd, secondEnd, sheetRefType } = FormulaParser.fixSheetIdsForRangeEnds(firstAddress, secondAddress);\r\n            const { start, end } = this.orderRowRangeEnds(firstEnd, secondEnd);\r\n            return buildRowRangeAst(start, end, sheetRefType, range.leadingWhitespace);\r\n        });\r\n        /**\r\n         * Rule for cell reference expression (e.g. A1, $A1, A$1, $A$1, $Sheet42!A$17)\r\n         */\r\n        this.cellReference = this.RULE('cellReference', () => {\r\n            const cell = this.CONSUME(CellReference);\r\n            const address = this.ACTION(() => {\r\n                return cellAddressFromString(this.sheetMapping, cell.image, this.formulaAddress);\r\n            });\r\n            if (address === undefined) {\r\n                return buildErrorWithRawInputAst(cell.image, new CellError(ErrorType.REF), cell.leadingWhitespace);\r\n            }\r\n            else if (address.exceedsSheetSizeLimits(this.lexerConfig.maxColumns, this.lexerConfig.maxRows)) {\r\n                return buildErrorWithRawInputAst(cell.image, new CellError(ErrorType.NAME), cell.leadingWhitespace);\r\n            }\r\n            else {\r\n                return buildCellReferenceAst(address, cell.leadingWhitespace);\r\n            }\r\n        });\r\n        /**\r\n         * Rule for end range reference expression with additional checks considering range start\r\n         */\r\n        this.endRangeReference = this.RULE('endRangeReference', (start) => {\r\n            var _a;\r\n            const end = this.CONSUME(CellReference);\r\n            const startAddress = this.ACTION(() => {\r\n                return cellAddressFromString(this.sheetMapping, start.image, this.formulaAddress);\r\n            });\r\n            const endAddress = this.ACTION(() => {\r\n                return cellAddressFromString(this.sheetMapping, end.image, this.formulaAddress);\r\n            });\r\n            if (startAddress === undefined || endAddress === undefined) {\r\n                return this.ACTION(() => {\r\n                    return buildErrorWithRawInputAst(`${start.image}:${end.image}`, new CellError(ErrorType.REF), start.leadingWhitespace);\r\n                });\r\n            }\r\n            else if (startAddress.exceedsSheetSizeLimits(this.lexerConfig.maxColumns, this.lexerConfig.maxRows)\r\n                || endAddress.exceedsSheetSizeLimits(this.lexerConfig.maxColumns, this.lexerConfig.maxRows)) {\r\n                return this.ACTION(() => {\r\n                    return buildErrorWithRawInputAst(`${start.image}:${end.image}`, new CellError(ErrorType.NAME), start.leadingWhitespace);\r\n                });\r\n            }\r\n            return this.buildCellRange(startAddress, endAddress, (_a = start.leadingWhitespace) === null || _a === void 0 ? void 0 : _a.image);\r\n        });\r\n        /**\r\n         * Rule for end of range expression\r\n         *\r\n         * End of range may be a cell reference or OFFSET() function call\r\n         */\r\n        this.endOfRangeExpression = this.RULE('endOfRangeExpression', (start) => {\r\n            return this.OR([\r\n                {\r\n                    ALT: () => {\r\n                        return this.SUBRULE(this.endRangeReference, { ARGS: [start] });\r\n                    },\r\n                },\r\n                {\r\n                    ALT: () => {\r\n                        var _a;\r\n                        const offsetProcedure = this.SUBRULE(this.offsetProcedureExpression);\r\n                        const startAddress = this.ACTION(() => {\r\n                            return cellAddressFromString(this.sheetMapping, start.image, this.formulaAddress);\r\n                        });\r\n                        if (startAddress === undefined) {\r\n                            return buildCellErrorAst(new CellError(ErrorType.REF));\r\n                        }\r\n                        if (offsetProcedure.type === AstNodeType.CELL_REFERENCE) {\r\n                            return this.buildCellRange(startAddress, offsetProcedure.reference, (_a = start.leadingWhitespace) === null || _a === void 0 ? void 0 : _a.image);\r\n                        }\r\n                        else {\r\n                            return this.parsingError(ParsingErrorType.RangeOffsetNotAllowed, 'Range offset not allowed here');\r\n                        }\r\n                    },\r\n                },\r\n            ]);\r\n        });\r\n        /**\r\n         * Rule for cell ranges (e.g. A1:B$3, A1:OFFSET())\r\n         */\r\n        this.cellRangeExpression = this.RULE('cellRangeExpression', () => {\r\n            const start = this.CONSUME(CellReference);\r\n            this.CONSUME2(RangeSeparator);\r\n            return this.SUBRULE(this.endOfRangeExpression, { ARGS: [start] });\r\n        });\r\n        /**\r\n         * Rule for end range reference expression starting with offset procedure with additional checks considering range start\r\n         */\r\n        this.endRangeWithOffsetStartReference = this.RULE('endRangeWithOffsetStartReference', (start) => {\r\n            const end = this.CONSUME(CellReference);\r\n            const endAddress = this.ACTION(() => {\r\n                return cellAddressFromString(this.sheetMapping, end.image, this.formulaAddress);\r\n            });\r\n            if (endAddress === undefined) {\r\n                return this.ACTION(() => {\r\n                    return buildCellErrorAst(new CellError(ErrorType.REF));\r\n                });\r\n            }\r\n            return this.buildCellRange(start.reference, endAddress, start.leadingWhitespace);\r\n        });\r\n        /**\r\n         * Rule for end of range expression\r\n         *\r\n         * End of range may be a cell reference or OFFSET() function call\r\n         */\r\n        this.endOfRangeWithOffsetStartExpression = this.RULE('endOfRangeWithOffsetStartExpression', (start) => {\r\n            return this.OR([\r\n                {\r\n                    ALT: () => {\r\n                        return this.SUBRULE(this.endRangeWithOffsetStartReference, { ARGS: [start] });\r\n                    },\r\n                },\r\n                {\r\n                    ALT: () => {\r\n                        const offsetProcedure = this.SUBRULE(this.offsetProcedureExpression);\r\n                        if (offsetProcedure.type === AstNodeType.CELL_REFERENCE) {\r\n                            return this.buildCellRange(start.reference, offsetProcedure.reference, start.leadingWhitespace);\r\n                        }\r\n                        else {\r\n                            return this.parsingError(ParsingErrorType.RangeOffsetNotAllowed, 'Range offset not allowed here');\r\n                        }\r\n                    },\r\n                },\r\n            ]);\r\n        });\r\n        /**\r\n         * Rule for expressions that start with the OFFSET function.\r\n         *\r\n         * The OFFSET function can occur as a cell reference, or as a part of a cell range.\r\n         * To preserve LL(k) properties, expressions that start with the OFFSET function need a separate rule.\r\n         *\r\n         * Depending on the presence of the {@link RangeSeparator}, a proper {@link Ast} node type is built.\r\n         */\r\n        this.offsetExpression = this.RULE('offsetExpression', () => {\r\n            const offsetProcedure = this.SUBRULE(this.offsetProcedureExpression);\r\n            let end;\r\n            this.OPTION(() => {\r\n                this.CONSUME(RangeSeparator);\r\n                if (offsetProcedure.type === AstNodeType.CELL_RANGE) {\r\n                    end = this.parsingError(ParsingErrorType.RangeOffsetNotAllowed, 'Range offset not allowed here');\r\n                }\r\n                else {\r\n                    end = this.SUBRULE(this.endOfRangeWithOffsetStartExpression, { ARGS: [offsetProcedure] });\r\n                }\r\n            });\r\n            if (end !== undefined) {\r\n                return end;\r\n            }\r\n            return offsetProcedure;\r\n        });\r\n        this.insideArrayExpression = this.RULE('insideArrayExpression', () => {\r\n            const ret = [[]];\r\n            ret[ret.length - 1].push(this.SUBRULE(this.booleanExpression));\r\n            this.MANY(() => {\r\n                this.OR([\r\n                    {\r\n                        ALT: () => {\r\n                            this.CONSUME(this.lexerConfig.ArrayColSeparator);\r\n                            ret[ret.length - 1].push(this.SUBRULE2(this.booleanExpression));\r\n                        }\r\n                    },\r\n                    {\r\n                        ALT: () => {\r\n                            this.CONSUME(this.lexerConfig.ArrayRowSeparator);\r\n                            ret.push([]);\r\n                            ret[ret.length - 1].push(this.SUBRULE3(this.booleanExpression));\r\n                        }\r\n                    }\r\n                ]);\r\n            });\r\n            return buildArrayAst(ret);\r\n        });\r\n        /**\r\n         * Rule for parenthesis expression\r\n         */\r\n        this.parenthesisExpression = this.RULE('parenthesisExpression', () => {\r\n            const lParenToken = this.CONSUME(LParen);\r\n            const expression = this.SUBRULE(this.booleanExpression);\r\n            const rParenToken = this.CONSUME(RParen);\r\n            return buildParenthesisAst(expression, lParenToken.leadingWhitespace, rParenToken.leadingWhitespace);\r\n        });\r\n        this.arrayExpression = this.RULE('arrayExpression', () => {\r\n            return this.OR([\r\n                {\r\n                    ALT: () => {\r\n                        const ltoken = this.CONSUME(ArrayLParen);\r\n                        const ret = this.SUBRULE(this.insideArrayExpression);\r\n                        const rtoken = this.CONSUME(ArrayRParen);\r\n                        return buildArrayAst(ret.args, ltoken.leadingWhitespace, rtoken.leadingWhitespace);\r\n                    }\r\n                },\r\n                {\r\n                    ALT: () => this.SUBRULE(this.parenthesisExpression)\r\n                }\r\n            ]);\r\n        });\r\n        this.numericStringToNumber = (input) => {\r\n            const normalized = input.replace(this.lexerConfig.decimalSeparator, '.');\r\n            return Number(normalized);\r\n        };\r\n        /**\r\n         * Rule for positive atomic expressions\r\n         */\r\n        this.positiveAtomicExpression = this.RULE('positiveAtomicExpression', () => {\r\n            var _a;\r\n            return this.OR((_a = this.atomicExpCache) !== null && _a !== void 0 ? _a : (this.atomicExpCache = [\r\n                {\r\n                    ALT: () => this.SUBRULE(this.arrayExpression),\r\n                },\r\n                {\r\n                    ALT: () => this.SUBRULE(this.cellRangeExpression),\r\n                },\r\n                {\r\n                    ALT: () => this.SUBRULE(this.columnRangeExpression),\r\n                },\r\n                {\r\n                    ALT: () => this.SUBRULE(this.rowRangeExpression),\r\n                },\r\n                {\r\n                    ALT: () => this.SUBRULE(this.offsetExpression),\r\n                },\r\n                {\r\n                    ALT: () => this.SUBRULE(this.cellReference),\r\n                },\r\n                {\r\n                    ALT: () => this.SUBRULE(this.procedureExpression),\r\n                },\r\n                {\r\n                    ALT: () => this.SUBRULE(this.namedExpressionExpression),\r\n                },\r\n                {\r\n                    ALT: () => {\r\n                        const number = this.CONSUME(this.lexerConfig.NumberLiteral);\r\n                        return buildNumberAst(this.numericStringToNumber(number.image), number.leadingWhitespace);\r\n                    },\r\n                },\r\n                {\r\n                    ALT: () => {\r\n                        const str = this.CONSUME(StringLiteral);\r\n                        return buildStringAst(str);\r\n                    },\r\n                },\r\n                {\r\n                    ALT: () => {\r\n                        const token = this.CONSUME(ErrorLiteral);\r\n                        const errString = token.image.toUpperCase();\r\n                        const errorType = this.lexerConfig.errorMapping[errString];\r\n                        if (errorType) {\r\n                            return buildCellErrorAst(new CellError(errorType), token.leadingWhitespace);\r\n                        }\r\n                        else {\r\n                            return this.parsingError(ParsingErrorType.ParserError, 'Unknown error literal');\r\n                        }\r\n                    },\r\n                },\r\n            ]));\r\n        });\r\n        this.rightUnaryOpAtomicExpression = this.RULE('rightUnaryOpAtomicExpression', () => {\r\n            const positiveAtomicExpression = this.SUBRULE(this.positiveAtomicExpression);\r\n            const percentage = this.OPTION(() => {\r\n                return this.CONSUME(PercentOp);\r\n            });\r\n            if (percentage) {\r\n                return buildPercentOpAst(positiveAtomicExpression, percentage.leadingWhitespace);\r\n            }\r\n            return positiveAtomicExpression;\r\n        });\r\n        /**\r\n         * Rule for atomic expressions, which is positive atomic expression or negation of it\r\n         */\r\n        this.atomicExpression = this.RULE('atomicExpression', () => {\r\n            return this.OR([\r\n                {\r\n                    ALT: () => {\r\n                        const op = this.CONSUME(AdditionOp);\r\n                        const value = this.SUBRULE(this.atomicExpression);\r\n                        if (tokenMatcher(op, PlusOp)) {\r\n                            return buildPlusUnaryOpAst(value, op.leadingWhitespace);\r\n                        }\r\n                        else if (tokenMatcher(op, MinusOp)) {\r\n                            return buildMinusUnaryOpAst(value, op.leadingWhitespace);\r\n                        }\r\n                        else {\r\n                            this.customParsingError = parsingError(ParsingErrorType.ParserError, 'Mismatched token type');\r\n                            return this.customParsingError;\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    ALT: () => this.SUBRULE2(this.rightUnaryOpAtomicExpression),\r\n                },\r\n            ]);\r\n        });\r\n        /**\r\n         * Rule for power expression\r\n         */\r\n        this.powerExpression = this.RULE('powerExpression', () => {\r\n            let lhs = this.SUBRULE(this.atomicExpression);\r\n            this.MANY(() => {\r\n                const op = this.CONSUME(PowerOp);\r\n                const rhs = this.SUBRULE2(this.atomicExpression);\r\n                if (tokenMatcher(op, PowerOp)) {\r\n                    lhs = buildPowerOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else {\r\n                    this.ACTION(() => {\r\n                        throw Error('Operator not supported');\r\n                    });\r\n                }\r\n            });\r\n            return lhs;\r\n        });\r\n        /**\r\n         * Rule for multiplication category operators (e.g. 1 * A1, 1 / A1)\r\n         */\r\n        this.multiplicationExpression = this.RULE('multiplicationExpression', () => {\r\n            let lhs = this.SUBRULE(this.powerExpression);\r\n            this.MANY(() => {\r\n                const op = this.CONSUME(MultiplicationOp);\r\n                const rhs = this.SUBRULE2(this.powerExpression);\r\n                if (tokenMatcher(op, TimesOp)) {\r\n                    lhs = buildTimesOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else if (tokenMatcher(op, DivOp)) {\r\n                    lhs = buildDivOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else {\r\n                    this.ACTION(() => {\r\n                        throw Error('Operator not supported');\r\n                    });\r\n                }\r\n            });\r\n            return lhs;\r\n        });\r\n        /**\r\n         * Rule for addition category operators (e.g. 1 + A1, 1 - A1)\r\n         */\r\n        this.additionExpression = this.RULE('additionExpression', () => {\r\n            let lhs = this.SUBRULE(this.multiplicationExpression);\r\n            this.MANY(() => {\r\n                const op = this.CONSUME(AdditionOp);\r\n                const rhs = this.SUBRULE2(this.multiplicationExpression);\r\n                if (tokenMatcher(op, PlusOp)) {\r\n                    lhs = buildPlusOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else if (tokenMatcher(op, MinusOp)) {\r\n                    lhs = buildMinusOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else {\r\n                    this.ACTION(() => {\r\n                        throw Error('Operator not supported');\r\n                    });\r\n                }\r\n            });\r\n            return lhs;\r\n        });\r\n        /**\r\n         * Rule for concatenation operator expression (e.g. \"=\" & A1)\r\n         */\r\n        this.concatenateExpression = this.RULE('concatenateExpression', () => {\r\n            let lhs = this.SUBRULE(this.additionExpression);\r\n            this.MANY(() => {\r\n                const op = this.CONSUME(ConcatenateOp);\r\n                const rhs = this.SUBRULE2(this.additionExpression);\r\n                lhs = buildConcatenateOpAst(lhs, rhs, op.leadingWhitespace);\r\n            });\r\n            return lhs;\r\n        });\r\n        /**\r\n         * Rule for boolean expression (e.g. 1 <= A1)\r\n         */\r\n        this.booleanExpression = this.RULE('booleanExpression', () => {\r\n            let lhs = this.SUBRULE(this.concatenateExpression);\r\n            this.MANY(() => {\r\n                const op = this.CONSUME(BooleanOp);\r\n                const rhs = this.SUBRULE2(this.concatenateExpression);\r\n                if (tokenMatcher(op, EqualsOp)) {\r\n                    lhs = buildEqualsOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else if (tokenMatcher(op, NotEqualOp)) {\r\n                    lhs = buildNotEqualOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else if (tokenMatcher(op, GreaterThanOp)) {\r\n                    lhs = buildGreaterThanOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else if (tokenMatcher(op, LessThanOp)) {\r\n                    lhs = buildLessThanOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else if (tokenMatcher(op, GreaterThanOrEqualOp)) {\r\n                    lhs = buildGreaterThanOrEqualOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else if (tokenMatcher(op, LessThanOrEqualOp)) {\r\n                    lhs = buildLessThanOrEqualOpAst(lhs, rhs, op.leadingWhitespace);\r\n                }\r\n                else {\r\n                    this.ACTION(() => {\r\n                        throw Error('Operator not supported');\r\n                    });\r\n                }\r\n            });\r\n            return lhs;\r\n        });\r\n        /**\r\n         * Entry rule\r\n         */\r\n        this.formula = this.RULE('formula', () => {\r\n            this.CONSUME(EqualsOp);\r\n            return this.SUBRULE(this.booleanExpression);\r\n        });\r\n        this.lexerConfig = lexerConfig;\r\n        this.sheetMapping = sheetMapping;\r\n        this.formulaAddress = simpleCellAddress(0, 0, 0);\r\n        this.performSelfAnalysis();\r\n    }\r\n    /**\r\n     * Parses tokenized formula and builds abstract syntax tree\r\n     *\r\n     * @param tokens - tokenized formula\r\n     * @param formulaAddress - address of the cell in which formula is located\r\n     */\r\n    parseFromTokens(tokens, formulaAddress) {\r\n        this.input = tokens;\r\n        let ast = this.formulaWithContext(formulaAddress);\r\n        let errors = [];\r\n        if (this.customParsingError) {\r\n            errors.push(this.customParsingError);\r\n        }\r\n        errors = errors.concat(this.errors.map((e) => ({\r\n            type: ParsingErrorType.ParserError,\r\n            message: e.message,\r\n        })));\r\n        if (errors.length > 0) {\r\n            ast = buildParsingErrorAst();\r\n        }\r\n        return {\r\n            ast,\r\n            errors\r\n        };\r\n    }\r\n    reset() {\r\n        super.reset();\r\n        this.customParsingError = undefined;\r\n    }\r\n    /**\r\n     * Entry rule wrapper that sets formula address\r\n     *\r\n     * @param address - address of the cell in which formula is located\r\n     */\r\n    formulaWithContext(address) {\r\n        this.formulaAddress = address;\r\n        return this.formula();\r\n    }\r\n    buildCellRange(firstAddress, secondAddress, leadingWhitespace) {\r\n        if (firstAddress.sheet === undefined && secondAddress.sheet !== undefined) {\r\n            return this.parsingError(ParsingErrorType.ParserError, 'Malformed range expression');\r\n        }\r\n        const { firstEnd, secondEnd, sheetRefType } = FormulaParser.fixSheetIdsForRangeEnds(firstAddress, secondAddress);\r\n        const { start, end } = this.orderCellRangeEnds(firstEnd, secondEnd);\r\n        return buildCellRangeAst(start, end, sheetRefType, leadingWhitespace);\r\n    }\r\n    static fixSheetIdsForRangeEnds(firstEnd, secondEnd) {\r\n        const sheetRefType = FormulaParser.rangeSheetReferenceType(firstEnd.sheet, secondEnd.sheet);\r\n        const secondEndFixed = (firstEnd.sheet !== undefined && secondEnd.sheet === undefined)\r\n            ? secondEnd.withSheet(firstEnd.sheet)\r\n            : secondEnd;\r\n        return { firstEnd, secondEnd: secondEndFixed, sheetRefType };\r\n    }\r\n    orderCellRangeEnds(endA, endB) {\r\n        const ends = [endA, endB];\r\n        const [startCol, endCol] = ends.map(e => e.toColumnAddress()).sort(ColumnAddress.compareByAbsoluteAddress(this.formulaAddress));\r\n        const [startRow, endRow] = ends.map(e => e.toRowAddress()).sort(RowAddress.compareByAbsoluteAddress(this.formulaAddress));\r\n        const [startSheet, endSheet] = ends.map(e => e.sheet).sort(FormulaParser.compareSheetIds.bind(this));\r\n        return {\r\n            start: CellAddress.fromColAndRow(startCol, startRow, startSheet),\r\n            end: CellAddress.fromColAndRow(endCol, endRow, endSheet),\r\n        };\r\n    }\r\n    orderColumnRangeEnds(endA, endB) {\r\n        const ends = [endA, endB];\r\n        const [startCol, endCol] = ends.sort(ColumnAddress.compareByAbsoluteAddress(this.formulaAddress));\r\n        const [startSheet, endSheet] = ends.map(e => e.sheet).sort(FormulaParser.compareSheetIds.bind(this));\r\n        return {\r\n            start: new ColumnAddress(startCol.type, startCol.col, startSheet),\r\n            end: new ColumnAddress(endCol.type, endCol.col, endSheet),\r\n        };\r\n    }\r\n    orderRowRangeEnds(endA, endB) {\r\n        const ends = [endA, endB];\r\n        const [startRow, endRow] = ends.sort(RowAddress.compareByAbsoluteAddress(this.formulaAddress));\r\n        const [startSheet, endSheet] = ends.map(e => e.sheet).sort(FormulaParser.compareSheetIds.bind(this));\r\n        return {\r\n            start: new RowAddress(startRow.type, startRow.row, startSheet),\r\n            end: new RowAddress(endRow.type, endRow.row, endSheet),\r\n        };\r\n    }\r\n    static compareSheetIds(sheetA, sheetB) {\r\n        sheetA = sheetA != null ? sheetA : Infinity;\r\n        sheetB = sheetB != null ? sheetB : Infinity;\r\n        return sheetA - sheetB;\r\n    }\r\n    /**\r\n     * Returns {@link CellReferenceAst} or {@link CellRangeAst} based on OFFSET function arguments\r\n     *\r\n     * @param args - OFFSET function arguments\r\n     */\r\n    handleOffsetHeuristic(args) {\r\n        const cellArg = args[0];\r\n        if (cellArg.type !== AstNodeType.CELL_REFERENCE) {\r\n            return this.parsingError(ParsingErrorType.StaticOffsetError, 'First argument to OFFSET is not a reference');\r\n        }\r\n        const rowsArg = args[1];\r\n        let rowShift;\r\n        if (rowsArg.type === AstNodeType.NUMBER && Number.isInteger(rowsArg.value)) {\r\n            rowShift = rowsArg.value;\r\n        }\r\n        else if (rowsArg.type === AstNodeType.PLUS_UNARY_OP && rowsArg.value.type === AstNodeType.NUMBER && Number.isInteger(rowsArg.value.value)) {\r\n            rowShift = rowsArg.value.value;\r\n        }\r\n        else if (rowsArg.type === AstNodeType.MINUS_UNARY_OP && rowsArg.value.type === AstNodeType.NUMBER && Number.isInteger(rowsArg.value.value)) {\r\n            rowShift = -rowsArg.value.value;\r\n        }\r\n        else {\r\n            return this.parsingError(ParsingErrorType.StaticOffsetError, 'Second argument to OFFSET is not a static number');\r\n        }\r\n        const columnsArg = args[2];\r\n        let colShift;\r\n        if (columnsArg.type === AstNodeType.NUMBER && Number.isInteger(columnsArg.value)) {\r\n            colShift = columnsArg.value;\r\n        }\r\n        else if (columnsArg.type === AstNodeType.PLUS_UNARY_OP && columnsArg.value.type === AstNodeType.NUMBER && Number.isInteger(columnsArg.value.value)) {\r\n            colShift = columnsArg.value.value;\r\n        }\r\n        else if (columnsArg.type === AstNodeType.MINUS_UNARY_OP && columnsArg.value.type === AstNodeType.NUMBER && Number.isInteger(columnsArg.value.value)) {\r\n            colShift = -columnsArg.value.value;\r\n        }\r\n        else {\r\n            return this.parsingError(ParsingErrorType.StaticOffsetError, 'Third argument to OFFSET is not a static number');\r\n        }\r\n        const heightArg = args[3];\r\n        let height;\r\n        if (heightArg === undefined) {\r\n            height = 1;\r\n        }\r\n        else if (heightArg.type === AstNodeType.NUMBER) {\r\n            height = heightArg.value;\r\n            if (height < 1) {\r\n                return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fourth argument to OFFSET is too small number');\r\n            }\r\n            else if (!Number.isInteger(height)) {\r\n                return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fourth argument to OFFSET is not integer');\r\n            }\r\n        }\r\n        else {\r\n            return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fourth argument to OFFSET is not a static number');\r\n        }\r\n        const widthArg = args[4];\r\n        let width;\r\n        if (widthArg === undefined) {\r\n            width = 1;\r\n        }\r\n        else if (widthArg.type === AstNodeType.NUMBER) {\r\n            width = widthArg.value;\r\n            if (width < 1) {\r\n                return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fifth argument to OFFSET is too small number');\r\n            }\r\n            else if (!Number.isInteger(width)) {\r\n                return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fifth argument to OFFSET is not integer');\r\n            }\r\n        }\r\n        else {\r\n            return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fifth argument to OFFSET is not a static number');\r\n        }\r\n        const topLeftCorner = new CellAddress(cellArg.reference.col + colShift, cellArg.reference.row + rowShift, cellArg.reference.type);\r\n        let absoluteCol = topLeftCorner.col;\r\n        let absoluteRow = topLeftCorner.row;\r\n        if (cellArg.reference.type === CellReferenceType.CELL_REFERENCE_RELATIVE\r\n            || cellArg.reference.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL) {\r\n            absoluteRow = absoluteRow + this.formulaAddress.row;\r\n        }\r\n        if (cellArg.reference.type === CellReferenceType.CELL_REFERENCE_RELATIVE\r\n            || cellArg.reference.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW) {\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            absoluteCol = absoluteCol + this.formulaAddress.col;\r\n        }\r\n        if (absoluteCol < 0 || absoluteRow < 0) {\r\n            return buildCellErrorAst(new CellError(ErrorType.REF, ErrorMessage.OutOfSheet));\r\n        }\r\n        if (width === 1 && height === 1) {\r\n            return buildCellReferenceAst(topLeftCorner);\r\n        }\r\n        else {\r\n            const bottomRightCorner = new CellAddress(topLeftCorner.col + width - 1, topLeftCorner.row + height - 1, topLeftCorner.type);\r\n            return buildCellRangeAst(topLeftCorner, bottomRightCorner, RangeSheetReferenceType.RELATIVE);\r\n        }\r\n    }\r\n    parsingError(type, message) {\r\n        this.customParsingError = parsingError(type, message);\r\n        return buildParsingErrorAst();\r\n    }\r\n    static rangeSheetReferenceType(start, end) {\r\n        if (start === undefined) {\r\n            return RangeSheetReferenceType.RELATIVE;\r\n        }\r\n        else if (end === undefined) {\r\n            return RangeSheetReferenceType.START_ABSOLUTE;\r\n        }\r\n        else {\r\n            return RangeSheetReferenceType.BOTH_ABSOLUTE;\r\n        }\r\n    }\r\n}\r\nexport class FormulaLexer {\r\n    constructor(lexerConfig) {\r\n        this.lexerConfig = lexerConfig;\r\n        this.lexer = new Lexer(lexerConfig.allTokens, { ensureOptimizations: true });\r\n    }\r\n    /**\r\n     * Returns Lexer tokens from formula string\r\n     *\r\n     * @param text - string representation of a formula\r\n     */\r\n    tokenizeFormula(text) {\r\n        const lexingResult = this.lexer.tokenize(text);\r\n        let tokens = lexingResult.tokens;\r\n        tokens = this.trimTrailingWhitespaces(tokens);\r\n        tokens = this.skipWhitespacesInsideRanges(tokens);\r\n        tokens = this.skipWhitespacesBeforeArgSeparators(tokens);\r\n        lexingResult.tokens = tokens;\r\n        return lexingResult;\r\n    }\r\n    skipWhitespacesInsideRanges(tokens) {\r\n        return FormulaLexer.filterTokensByNeighbors(tokens, (previous, current, next) => {\r\n            return (tokenMatcher(previous, CellReference) || tokenMatcher(previous, RangeSeparator))\r\n                && tokenMatcher(current, this.lexerConfig.WhiteSpace)\r\n                && (tokenMatcher(next, CellReference) || tokenMatcher(next, RangeSeparator));\r\n        });\r\n    }\r\n    skipWhitespacesBeforeArgSeparators(tokens) {\r\n        return FormulaLexer.filterTokensByNeighbors(tokens, (previous, current, next) => {\r\n            return !tokenMatcher(previous, this.lexerConfig.ArgSeparator)\r\n                && tokenMatcher(current, this.lexerConfig.WhiteSpace)\r\n                && tokenMatcher(next, this.lexerConfig.ArgSeparator);\r\n        });\r\n    }\r\n    static filterTokensByNeighbors(tokens, shouldBeSkipped) {\r\n        if (tokens.length < 3) {\r\n            return tokens;\r\n        }\r\n        let i = 0;\r\n        const filteredTokens = [tokens[i++]];\r\n        while (i < tokens.length - 1) {\r\n            if (!shouldBeSkipped(tokens[i - 1], tokens[i], tokens[i + 1])) {\r\n                filteredTokens.push(tokens[i]);\r\n            }\r\n            ++i;\r\n        }\r\n        filteredTokens.push(tokens[i]);\r\n        return filteredTokens;\r\n    }\r\n    trimTrailingWhitespaces(tokens) {\r\n        if (tokens.length > 0 && tokenMatcher(tokens[tokens.length - 1], this.lexerConfig.WhiteSpace)) {\r\n            tokens.pop();\r\n        }\r\n        return tokens;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\n/**\r\n * This is a class for detailed error messages across HyperFormula.\r\n */\r\nexport class ErrorMessage {\r\n}\r\nErrorMessage.DistinctSigns = 'Distinct signs.';\r\nErrorMessage.WrongArgNumber = 'Wrong number of arguments.';\r\nErrorMessage.EmptyArg = 'Empty function argument.';\r\nErrorMessage.EmptyArray = 'Empty array not allowed.';\r\nErrorMessage.ArrayDimensions = 'Array dimensions are not compatible.';\r\nErrorMessage.NoSpaceForArrayResult = 'No space for array result.';\r\nErrorMessage.ValueSmall = 'Value too small.';\r\nErrorMessage.ValueLarge = 'Value too large.';\r\nErrorMessage.BadCriterion = 'Incorrect criterion.';\r\nErrorMessage.RangeManySheets = 'Range spans more than one sheet.';\r\nErrorMessage.CellRangeExpected = 'Cell range expected.';\r\nErrorMessage.WrongDimension = 'Wrong range dimension.';\r\nErrorMessage.ScalarExpected = 'Cell range not allowed.';\r\nErrorMessage.NumberCoercion = 'Value cannot be coerced to number.';\r\nErrorMessage.NumberExpected = 'Number argument expected.';\r\nErrorMessage.IntegerExpected = 'Value needs to be an integer.';\r\nErrorMessage.BadMode = 'Mode not recognized.';\r\nErrorMessage.DateBounds = 'Date outside of bounds.';\r\nErrorMessage.OutOfSheet = 'Resulting reference is out of the sheet.';\r\nErrorMessage.WrongType = 'Wrong type of argument.';\r\nErrorMessage.NaN = 'NaN or infinite value encountered.';\r\nErrorMessage.EqualLength = 'Ranges need to be of equal length.';\r\nErrorMessage.Negative = 'Value cannot be negative.';\r\nErrorMessage.NotBinary = 'String does not represent a binary number.';\r\nErrorMessage.NotOctal = 'String does not represent an octal number.';\r\nErrorMessage.NotHex = 'String does not represent a hexadecimal number.';\r\nErrorMessage.EndStartPeriod = 'End period needs to be at least start period.';\r\nErrorMessage.CellRefExpected = 'Cell reference expected.';\r\nErrorMessage.EmptyRange = 'Empty range not allowed.';\r\nErrorMessage.BadRef = 'Address is not correct.';\r\nErrorMessage.NumberRange = 'Number-only range expected.';\r\nErrorMessage.ValueNotFound = 'Value not found.';\r\nErrorMessage.ValueBaseLarge = 'Value in base too large.';\r\nErrorMessage.ValueBaseSmall = 'Value in base too small.';\r\nErrorMessage.ValueBaseLong = 'Value in base too long.';\r\nErrorMessage.NegativeLength = 'Length cannot be negative.';\r\nErrorMessage.PatternNotFound = 'Pattern not found.';\r\nErrorMessage.OneValue = 'Needs at least one value.';\r\nErrorMessage.TwoValues = 'Range needs to contain at least two elements.';\r\nErrorMessage.ThreeValues = 'Range needs to contain at least three elements.';\r\nErrorMessage.IndexBounds = 'Index out of bounds.';\r\nErrorMessage.IndexLarge = 'Index too large.';\r\nErrorMessage.Formula = 'Expected formula.';\r\nErrorMessage.NegativeCount = 'Count cannot be negative.';\r\nErrorMessage.ParseError = 'Parsing error.';\r\nErrorMessage.SheetRef = 'Sheet does not exist.';\r\nErrorMessage.PeriodLong = 'Period number cannot exceed life length.';\r\nErrorMessage.InvalidDate = 'Invalid date.';\r\nErrorMessage.BitshiftLong = 'Result of bitshift is too long.';\r\nErrorMessage.EmptyString = 'Empty-string argument not allowed.';\r\nErrorMessage.LengthBounds = 'Length out of bounds.';\r\nErrorMessage.NegativeTime = 'Time cannot be negative.';\r\nErrorMessage.NoDefault = 'No default option.';\r\nErrorMessage.Selector = 'Selector cannot exceed the number of arguments.';\r\nErrorMessage.StartEndDate = 'Start date needs to be earlier than end date.';\r\nErrorMessage.IncorrectDateTime = 'String does not represent correct DateTime.';\r\nErrorMessage.CharacterCodeBounds = 'Character code out of bounds.';\r\nErrorMessage.NonZero = 'Argument cannot be 0.';\r\nErrorMessage.LessThanOne = 'Argument cannot be less than 1.';\r\nErrorMessage.WeekendString = 'Incorrect weekend bitmask string.';\r\nErrorMessage.InvalidRoman = 'Invalid roman numeral.';\r\nErrorMessage.WrongOrder = 'Wrong order of values.';\r\nErrorMessage.ComplexNumberExpected = 'Complex number expected.';\r\nErrorMessage.ShouldBeIorJ = 'Should be \\'i\\' or \\'j\\'.';\r\nErrorMessage.SizeMismatch = 'Array dimensions mismatched.';\r\nErrorMessage.FunctionName = (arg) => `Function name ${arg} not recognized.`;\r\nErrorMessage.NamedExpressionName = (arg) => `Named expression ${arg} not recognized.`;\r\nErrorMessage.LicenseKey = (arg) => `License key is ${arg}.`;\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ErrorType } from '../Cell';\r\nimport { NoSheetWithIdError } from '../index';\r\nimport { sheetIndexToString } from './addressRepresentationConverters';\r\nimport { AstNodeType, imageWithWhitespace, RangeSheetReferenceType, } from './Ast';\r\nimport { binaryOpTokenMap } from './binaryOpTokenMap';\r\nexport class Unparser {\r\n    constructor(config, lexerConfig, sheetMappingFn, namedExpressions) {\r\n        this.config = config;\r\n        this.lexerConfig = lexerConfig;\r\n        this.sheetMappingFn = sheetMappingFn;\r\n        this.namedExpressions = namedExpressions;\r\n    }\r\n    unparse(ast, address) {\r\n        return '=' + this.unparseAst(ast, address);\r\n    }\r\n    unparseAst(ast, address) {\r\n        var _a, _b;\r\n        switch (ast.type) {\r\n            case AstNodeType.EMPTY: {\r\n                return imageWithWhitespace('', ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.NUMBER: {\r\n                return imageWithWhitespace(formatNumber(ast.value, this.config.decimalSeparator), ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.STRING: {\r\n                return imageWithWhitespace('\"' + ast.value + '\"', ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.FUNCTION_CALL: {\r\n                const args = ast.args.map((arg) => arg !== undefined ? this.unparseAst(arg, address) : '').join(this.config.functionArgSeparator);\r\n                const procedureName = this.config.translationPackage.isFunctionTranslated(ast.procedureName) ?\r\n                    this.config.translationPackage.getFunctionTranslation(ast.procedureName) :\r\n                    ast.procedureName;\r\n                const rightPart = procedureName + '(' + args + imageWithWhitespace(')', ast.internalWhitespace);\r\n                return imageWithWhitespace(rightPart, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.NAMED_EXPRESSION: {\r\n                const originalNamedExpressionName = (_a = this.namedExpressions.nearestNamedExpression(ast.expressionName, address.sheet)) === null || _a === void 0 ? void 0 : _a.displayName;\r\n                return imageWithWhitespace(originalNamedExpressionName || ast.expressionName, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.CELL_REFERENCE: {\r\n                let image;\r\n                if (ast.reference.sheet !== undefined) {\r\n                    image = this.unparseSheetName(ast.reference.sheet) + '!';\r\n                }\r\n                else {\r\n                    image = '';\r\n                }\r\n                image += (_b = ast.reference.unparse(address)) !== null && _b !== void 0 ? _b : this.config.translationPackage.getErrorTranslation(ErrorType.REF);\r\n                return imageWithWhitespace(image, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.COLUMN_RANGE:\r\n            case AstNodeType.ROW_RANGE:\r\n            case AstNodeType.CELL_RANGE: {\r\n                return imageWithWhitespace(this.formatRange(ast, address), ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.PLUS_UNARY_OP: {\r\n                const unparsedExpr = this.unparseAst(ast.value, address);\r\n                return imageWithWhitespace('+', ast.leadingWhitespace) + unparsedExpr;\r\n            }\r\n            case AstNodeType.MINUS_UNARY_OP: {\r\n                const unparsedExpr = this.unparseAst(ast.value, address);\r\n                return imageWithWhitespace('-', ast.leadingWhitespace) + unparsedExpr;\r\n            }\r\n            case AstNodeType.PERCENT_OP: {\r\n                return this.unparseAst(ast.value, address) + imageWithWhitespace('%', ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.ERROR: {\r\n                const image = this.config.translationPackage.getErrorTranslation(ast.error ? ast.error.type : ErrorType.ERROR);\r\n                return imageWithWhitespace(image, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.ERROR_WITH_RAW_INPUT: {\r\n                return imageWithWhitespace(ast.rawInput, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.PARENTHESIS: {\r\n                const expression = this.unparseAst(ast.expression, address);\r\n                const rightPart = '(' + expression + imageWithWhitespace(')', ast.internalWhitespace);\r\n                return imageWithWhitespace(rightPart, ast.leadingWhitespace);\r\n            }\r\n            case AstNodeType.ARRAY: {\r\n                const ret = '{' + ast.args.map(row => row.map(val => this.unparseAst(val, address)).join(this.config.arrayColumnSeparator)).join(this.config.arrayRowSeparator) + imageWithWhitespace('}', ast.internalWhitespace);\r\n                return imageWithWhitespace(ret, ast.leadingWhitespace);\r\n            }\r\n            default: {\r\n                const left = this.unparseAst(ast.left, address);\r\n                const right = this.unparseAst(ast.right, address);\r\n                return left + imageWithWhitespace(binaryOpTokenMap[ast.type], ast.leadingWhitespace) + right;\r\n            }\r\n        }\r\n    }\r\n    unparseSheetName(sheetId) {\r\n        const sheetName = sheetIndexToString(sheetId, this.sheetMappingFn);\r\n        if (sheetName === undefined) {\r\n            throw new NoSheetWithIdError(sheetId);\r\n        }\r\n        return sheetName;\r\n    }\r\n    formatRange(ast, baseAddress) {\r\n        let startSheeet = '';\r\n        let endSheet = '';\r\n        if (ast.start.sheet !== undefined && (ast.sheetReferenceType !== RangeSheetReferenceType.RELATIVE)) {\r\n            startSheeet = this.unparseSheetName(ast.start.sheet) + '!';\r\n        }\r\n        if (ast.end.sheet !== undefined && ast.sheetReferenceType === RangeSheetReferenceType.BOTH_ABSOLUTE) {\r\n            endSheet = this.unparseSheetName(ast.end.sheet) + '!';\r\n        }\r\n        const unparsedStart = ast.start.unparse(baseAddress);\r\n        const unparsedEnd = ast.end.unparse(baseAddress);\r\n        if (unparsedStart === undefined || unparsedEnd === undefined) {\r\n            return this.config.translationPackage.getErrorTranslation(ErrorType.REF);\r\n        }\r\n        return `${startSheeet}${unparsedStart}:${endSheet}${unparsedEnd}`;\r\n    }\r\n}\r\nexport function formatNumber(number, decimalSeparator) {\r\n    const numericString = number.toString();\r\n    return numericString.replace('.', decimalSeparator);\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AddressDependency, AstNodeType, CellRangeDependency, ColumnRangeDependency, NamedExpressionDependency, RowRangeDependency } from './';\r\nconst collectDependenciesFn = (ast, functionRegistry, dependenciesSet, needArgument) => {\r\n    switch (ast.type) {\r\n        case AstNodeType.EMPTY:\r\n        case AstNodeType.NUMBER:\r\n        case AstNodeType.STRING:\r\n        case AstNodeType.ERROR:\r\n            return;\r\n        case AstNodeType.NAMED_EXPRESSION: {\r\n            if (needArgument) {\r\n                dependenciesSet.push(new NamedExpressionDependency(ast.expressionName));\r\n            }\r\n            return;\r\n        }\r\n        case AstNodeType.CELL_REFERENCE: {\r\n            if (needArgument) {\r\n                dependenciesSet.push(new AddressDependency(ast.reference));\r\n            }\r\n            return;\r\n        }\r\n        case AstNodeType.CELL_RANGE: {\r\n            if (needArgument && ast.start.sheet === ast.end.sheet) {\r\n                dependenciesSet.push(new CellRangeDependency(ast.start, ast.end));\r\n            }\r\n            return;\r\n        }\r\n        case AstNodeType.COLUMN_RANGE: {\r\n            if (needArgument && ast.start.sheet === ast.end.sheet) {\r\n                dependenciesSet.push(new ColumnRangeDependency(ast.start, ast.end));\r\n            }\r\n            return;\r\n        }\r\n        case AstNodeType.ROW_RANGE: {\r\n            if (needArgument && ast.start.sheet === ast.end.sheet) {\r\n                dependenciesSet.push(new RowRangeDependency(ast.start, ast.end));\r\n            }\r\n            return;\r\n        }\r\n        case AstNodeType.PERCENT_OP:\r\n        case AstNodeType.PLUS_UNARY_OP:\r\n        case AstNodeType.MINUS_UNARY_OP: {\r\n            collectDependenciesFn(ast.value, functionRegistry, dependenciesSet, true);\r\n            return;\r\n        }\r\n        case AstNodeType.CONCATENATE_OP:\r\n        case AstNodeType.EQUALS_OP:\r\n        case AstNodeType.NOT_EQUAL_OP:\r\n        case AstNodeType.LESS_THAN_OP:\r\n        case AstNodeType.GREATER_THAN_OP:\r\n        case AstNodeType.LESS_THAN_OR_EQUAL_OP:\r\n        case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\r\n        case AstNodeType.MINUS_OP:\r\n        case AstNodeType.PLUS_OP:\r\n        case AstNodeType.TIMES_OP:\r\n        case AstNodeType.DIV_OP:\r\n        case AstNodeType.POWER_OP:\r\n            collectDependenciesFn(ast.left, functionRegistry, dependenciesSet, true);\r\n            collectDependenciesFn(ast.right, functionRegistry, dependenciesSet, true);\r\n            return;\r\n        case AstNodeType.PARENTHESIS:\r\n            collectDependenciesFn(ast.expression, functionRegistry, dependenciesSet, needArgument);\r\n            return;\r\n        case AstNodeType.FUNCTION_CALL: {\r\n            const functionNeedArgument = !functionRegistry.doesFunctionNeedArgumentToBeComputed(ast.procedureName);\r\n            ast.args.forEach((argAst) => collectDependenciesFn(argAst, functionRegistry, dependenciesSet, functionNeedArgument));\r\n            return;\r\n        }\r\n    }\r\n};\r\nexport const collectDependencies = (ast, functionRegistry) => {\r\n    const result = new Array();\r\n    collectDependenciesFn(ast, functionRegistry, result, true);\r\n    return result;\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange, AbsoluteColumnRange, AbsoluteRowRange } from '../AbsoluteCellRange';\r\nexport class AddressDependency {\r\n    constructor(dependency) {\r\n        this.dependency = dependency;\r\n    }\r\n    absolutize(baseAddress) {\r\n        return this.dependency.toSimpleCellAddress(baseAddress);\r\n    }\r\n}\r\nexport class CellRangeDependency {\r\n    constructor(start, end) {\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n    absolutize(baseAddress) {\r\n        return new AbsoluteCellRange(this.start.toSimpleCellAddress(baseAddress), this.end.toSimpleCellAddress(baseAddress));\r\n    }\r\n}\r\nexport class ColumnRangeDependency {\r\n    constructor(start, end) {\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n    absolutize(baseAddress) {\r\n        const start = this.start.toSimpleColumnAddress(baseAddress);\r\n        const end = this.end.toSimpleColumnAddress(baseAddress);\r\n        return new AbsoluteColumnRange(start.sheet, start.col, end.col);\r\n    }\r\n}\r\nexport class RowRangeDependency {\r\n    constructor(start, end) {\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n    absolutize(baseAddress) {\r\n        const start = this.start.toSimpleRowAddress(baseAddress);\r\n        const end = this.end.toSimpleRowAddress(baseAddress);\r\n        return new AbsoluteRowRange(start.sheet, start.row, end.row);\r\n    }\r\n}\r\nexport class NamedExpressionDependency {\r\n    constructor(name) {\r\n        this.name = name;\r\n    }\r\n    absolutize(_baseAddress) {\r\n        return this;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\n/*\r\n * A class representing a set of rows in specific sheet\r\n */\r\nexport class RowsSpan {\r\n    constructor(sheet, rowStart, rowEnd) {\r\n        this.sheet = sheet;\r\n        this.rowStart = rowStart;\r\n        this.rowEnd = rowEnd;\r\n        if (rowStart < 0) {\r\n            throw Error('Starting row cant be less than 0');\r\n        }\r\n        if (rowEnd < rowStart) {\r\n            throw Error('Row span cant end before start');\r\n        }\r\n    }\r\n    get numberOfRows() {\r\n        return this.rowEnd - this.rowStart + 1;\r\n    }\r\n    get start() {\r\n        return this.rowStart;\r\n    }\r\n    get end() {\r\n        return this.rowEnd;\r\n    }\r\n    static fromNumberOfRows(sheet, rowStart, numberOfRows) {\r\n        return new RowsSpan(sheet, rowStart, rowStart + numberOfRows - 1);\r\n    }\r\n    static fromRowStartAndEnd(sheet, rowStart, rowEnd) {\r\n        return new RowsSpan(sheet, rowStart, rowEnd);\r\n    }\r\n    *rows() {\r\n        for (let col = this.rowStart; col <= this.rowEnd; ++col) {\r\n            yield col;\r\n        }\r\n    }\r\n    intersect(otherSpan) {\r\n        if (this.sheet !== otherSpan.sheet) {\r\n            throw Error('Can\\'t intersect spans from different sheets');\r\n        }\r\n        const start = Math.max(this.rowStart, otherSpan.rowStart);\r\n        const end = Math.min(this.rowEnd, otherSpan.rowEnd);\r\n        if (start > end) {\r\n            return null;\r\n        }\r\n        return new RowsSpan(this.sheet, start, end);\r\n    }\r\n    firstRow() {\r\n        return new RowsSpan(this.sheet, this.rowStart, this.rowStart);\r\n    }\r\n}\r\n/*\r\n * A class representing a set of columns in specific sheet\r\n */\r\nexport class ColumnsSpan {\r\n    constructor(sheet, columnStart, columnEnd) {\r\n        this.sheet = sheet;\r\n        this.columnStart = columnStart;\r\n        this.columnEnd = columnEnd;\r\n        if (columnStart < 0) {\r\n            throw Error('Starting column cant be less than 0');\r\n        }\r\n        if (columnEnd < columnStart) {\r\n            throw Error('Column span cant end before start');\r\n        }\r\n    }\r\n    get numberOfColumns() {\r\n        return this.columnEnd - this.columnStart + 1;\r\n    }\r\n    get start() {\r\n        return this.columnStart;\r\n    }\r\n    get end() {\r\n        return this.columnEnd;\r\n    }\r\n    static fromNumberOfColumns(sheet, columnStart, numberOfColumns) {\r\n        return new ColumnsSpan(sheet, columnStart, columnStart + numberOfColumns - 1);\r\n    }\r\n    static fromColumnStartAndEnd(sheet, columnStart, columnEnd) {\r\n        return new ColumnsSpan(sheet, columnStart, columnEnd);\r\n    }\r\n    *columns() {\r\n        for (let col = this.columnStart; col <= this.columnEnd; ++col) {\r\n            yield col;\r\n        }\r\n    }\r\n    intersect(otherSpan) {\r\n        if (this.sheet !== otherSpan.sheet) {\r\n            throw Error('Can\\'t intersect spans from different sheets');\r\n        }\r\n        const start = Math.max(this.columnStart, otherSpan.columnStart);\r\n        const end = Math.min(this.columnEnd, otherSpan.columnEnd);\r\n        if (start > end) {\r\n            return null;\r\n        }\r\n        return new ColumnsSpan(this.sheet, start, end);\r\n    }\r\n    firstColumn() {\r\n        return new ColumnsSpan(this.sheet, this.columnStart, this.columnStart);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\r\nimport { invalidSimpleCellAddress } from './Cell';\r\nimport { NamedExpressionDependency } from './parser';\r\n/**\r\n * Converts dependencies from maybe relative addressing to absolute addressing.\r\n *\r\n * @param deps - list of addresses in R0C0 format\r\n * @param baseAddress - base address with regard to which make a convertion\r\n */\r\nexport const absolutizeDependencies = (deps, baseAddress) => {\r\n    return deps.map(dep => dep.absolutize(baseAddress));\r\n};\r\nexport const filterDependenciesOutOfScope = (deps) => {\r\n    return deps.filter(dep => {\r\n        if (dep instanceof NamedExpressionDependency) {\r\n            return true;\r\n        }\r\n        if (dep instanceof AbsoluteCellRange) {\r\n            return !(invalidSimpleCellAddress(dep.start) || invalidSimpleCellAddress(dep.end));\r\n        }\r\n        else {\r\n            return !invalidSimpleCellAddress(dep);\r\n        }\r\n    });\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { addressKey } from './Cell';\r\nimport { SimpleRangeValue } from './interpreter/SimpleRangeValue';\r\nexport class ContentChanges {\r\n    constructor() {\r\n        this.changes = new Map();\r\n    }\r\n    static empty() {\r\n        return new ContentChanges();\r\n    }\r\n    addAll(other) {\r\n        for (const change of other.changes.values()) {\r\n            this.add(change.address, change);\r\n        }\r\n        return this;\r\n    }\r\n    addChange(newValue, address, oldValue) {\r\n        this.addInterpreterValue(newValue, address, oldValue);\r\n    }\r\n    exportChanges(exporter) {\r\n        let ret = [];\r\n        this.changes.forEach((e) => {\r\n            const change = exporter.exportChange(e);\r\n            if (Array.isArray(change)) {\r\n                ret = ret.concat(change);\r\n            }\r\n            else {\r\n                ret.push(change);\r\n            }\r\n        });\r\n        return ret;\r\n    }\r\n    getChanges() {\r\n        return Array.from(this.changes.values());\r\n    }\r\n    isEmpty() {\r\n        return this.changes.size === 0;\r\n    }\r\n    add(address, change) {\r\n        const value = change.value;\r\n        if (value instanceof SimpleRangeValue) {\r\n            for (const cellAddress of value.effectiveAddressesFromData(address)) {\r\n                this.changes.delete(`${cellAddress.sheet},${cellAddress.col},${cellAddress.row}`);\r\n            }\r\n        }\r\n        this.changes.set(addressKey((address)), change);\r\n    }\r\n    addInterpreterValue(value, address, oldValue) {\r\n        this.add(address, {\r\n            address,\r\n            value,\r\n            oldValue\r\n        });\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArraySize } from '../ArraySize';\r\nimport { CellError, ErrorType, simpleCellAddress } from '../Cell';\r\nimport { ErrorMessage } from '../error-message';\r\nimport { isExtendedNumber } from './InterpreterValue';\r\nexport class SimpleRangeValue {\r\n    constructor(_data, range, dependencyGraph, _hasOnlyNumbers) {\r\n        this._data = _data;\r\n        this.range = range;\r\n        this.dependencyGraph = dependencyGraph;\r\n        this._hasOnlyNumbers = _hasOnlyNumbers;\r\n        if (_data === undefined) {\r\n            this.size = new ArraySize(range.effectiveWidth(dependencyGraph), range.effectiveHeight(dependencyGraph));\r\n        }\r\n        else {\r\n            this.size = new ArraySize(_data[0].length, _data.length);\r\n        }\r\n    }\r\n    get data() {\r\n        this.ensureThatComputed();\r\n        return this._data;\r\n    }\r\n    static fromRange(data, range, dependencyGraph) {\r\n        return new SimpleRangeValue(data, range, dependencyGraph, true);\r\n    }\r\n    static onlyNumbers(data) {\r\n        return new SimpleRangeValue(data, undefined, undefined, true);\r\n    }\r\n    static onlyValues(data) {\r\n        return new SimpleRangeValue(data, undefined, undefined, undefined);\r\n    }\r\n    static onlyRange(range, dependencyGraph) {\r\n        return new SimpleRangeValue(undefined, range, dependencyGraph, undefined);\r\n    }\r\n    static fromScalar(scalar) {\r\n        return new SimpleRangeValue([[scalar]], undefined, undefined, undefined);\r\n    }\r\n    isAdHoc() {\r\n        return this.range === undefined;\r\n    }\r\n    width() {\r\n        return this.size.width; //should be equal to this.data[0].length\r\n    }\r\n    height() {\r\n        return this.size.height; //should be equal to this.data.length\r\n    }\r\n    valuesFromTopLeftCorner() {\r\n        this.ensureThatComputed();\r\n        const ret = [];\r\n        for (let i = 0; i < this._data.length; i++) {\r\n            for (let j = 0; j < this._data[0].length; j++) {\r\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                ret.push(this._data[i][j]);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    *effectiveAddressesFromData(leftCorner) {\r\n        for (let row = 0; row < this.data.length; ++row) {\r\n            const rowData = this.data[row];\r\n            for (let col = 0; col < rowData.length; ++col) {\r\n                yield simpleCellAddress(leftCorner.sheet, leftCorner.col + col, leftCorner.row + row);\r\n            }\r\n        }\r\n    }\r\n    *entriesFromTopLeftCorner(leftCorner) {\r\n        this.ensureThatComputed();\r\n        for (let row = 0; row < this.size.height; ++row) {\r\n            for (let col = 0; col < this.size.width; ++col) {\r\n                yield [this._data[row][col], simpleCellAddress(leftCorner.sheet, leftCorner.col + col, leftCorner.row + row)];\r\n            }\r\n        }\r\n    }\r\n    *iterateValuesFromTopLeftCorner() {\r\n        yield* this.valuesFromTopLeftCorner();\r\n    }\r\n    numberOfElements() {\r\n        return this.size.width * this.size.height;\r\n    }\r\n    hasOnlyNumbers() {\r\n        if (this._hasOnlyNumbers === undefined) {\r\n            this._hasOnlyNumbers = true;\r\n            for (const row of this.data) {\r\n                for (const v of row) {\r\n                    if (typeof v !== 'number') {\r\n                        this._hasOnlyNumbers = false;\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this._hasOnlyNumbers;\r\n    }\r\n    rawNumbers() {\r\n        return this._data;\r\n    }\r\n    rawData() {\r\n        var _a;\r\n        this.ensureThatComputed();\r\n        return (_a = this._data) !== null && _a !== void 0 ? _a : [];\r\n    }\r\n    sameDimensionsAs(other) {\r\n        return this.width() === other.width() && this.height() === other.height();\r\n    }\r\n    ensureThatComputed() {\r\n        if (this._data !== undefined) {\r\n            return;\r\n        }\r\n        this._hasOnlyNumbers = true;\r\n        this._data = this.range.addressesArrayMap(this.dependencyGraph, cellFromRange => {\r\n            const value = this.dependencyGraph.getCellValue(cellFromRange);\r\n            if (value instanceof SimpleRangeValue) {\r\n                this._hasOnlyNumbers = false;\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\r\n            }\r\n            else if (isExtendedNumber(value)) {\r\n                return value;\r\n            }\r\n            else {\r\n                this._hasOnlyNumbers = false;\r\n                return value;\r\n            }\r\n        });\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\r\nimport { InterpreterState } from './interpreter/InterpreterState';\r\nimport { ArgumentTypes } from './interpreter/plugin/FunctionPlugin';\r\nimport { AstNodeType } from './parser';\r\nexport class ArraySize {\r\n    constructor(width, height, isRef = false) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.isRef = isRef;\r\n        if (width <= 0 || height <= 0) {\r\n            throw Error('Incorrect array size');\r\n        }\r\n    }\r\n    static fromArray(array) {\r\n        return new ArraySize(array.length > 0 ? array[0].length : 0, array.length);\r\n    }\r\n    static error() {\r\n        return new ArraySize(1, 1, true);\r\n    }\r\n    static scalar() {\r\n        return new ArraySize(1, 1, false);\r\n    }\r\n    isScalar() {\r\n        return (this.width <= 1 && this.height <= 1) || this.isRef;\r\n    }\r\n}\r\nfunction arraySizeForBinaryOp(leftArraySize, rightArraySize) {\r\n    return new ArraySize(Math.max(leftArraySize.width, rightArraySize.width), Math.max(leftArraySize.height, rightArraySize.height));\r\n}\r\nfunction arraySizeForUnaryOp(arraySize) {\r\n    return new ArraySize(arraySize.width, arraySize.height);\r\n}\r\nexport class ArraySizePredictor {\r\n    constructor(config, functionRegistry) {\r\n        this.config = config;\r\n        this.functionRegistry = functionRegistry;\r\n    }\r\n    checkArraySize(ast, formulaAddress) {\r\n        return this.checkArraySizeForAst(ast, { formulaAddress, arraysFlag: this.config.useArrayArithmetic });\r\n    }\r\n    checkArraySizeForAst(ast, state) {\r\n        switch (ast.type) {\r\n            case AstNodeType.FUNCTION_CALL: {\r\n                return this.checkArraySizeForFunction(ast, state);\r\n            }\r\n            case AstNodeType.COLUMN_RANGE:\r\n            case AstNodeType.ROW_RANGE:\r\n            case AstNodeType.CELL_RANGE: {\r\n                const range = AbsoluteCellRange.fromAstOrUndef(ast, state.formulaAddress);\r\n                if (range === undefined) {\r\n                    return ArraySize.error();\r\n                }\r\n                else {\r\n                    return new ArraySize(range.width(), range.height(), true);\r\n                }\r\n            }\r\n            case AstNodeType.ARRAY: {\r\n                const heights = [];\r\n                const widths = [];\r\n                for (const row of ast.args) {\r\n                    const sizes = row.map(ast => this.checkArraySizeForAst(ast, state));\r\n                    const h = Math.min(...sizes.map(size => size.height));\r\n                    const w = sizes.reduce((total, size) => total + size.width, 0);\r\n                    heights.push(h);\r\n                    widths.push(w);\r\n                }\r\n                const height = heights.reduce((total, h) => total + h, 0);\r\n                const width = Math.min(...widths);\r\n                return new ArraySize(width, height);\r\n            }\r\n            case AstNodeType.STRING:\r\n            case AstNodeType.NUMBER:\r\n                return ArraySize.scalar();\r\n            case AstNodeType.CELL_REFERENCE:\r\n                return new ArraySize(1, 1, true);\r\n            case AstNodeType.DIV_OP:\r\n            case AstNodeType.CONCATENATE_OP:\r\n            case AstNodeType.EQUALS_OP:\r\n            case AstNodeType.GREATER_THAN_OP:\r\n            case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\r\n            case AstNodeType.LESS_THAN_OP:\r\n            case AstNodeType.LESS_THAN_OR_EQUAL_OP:\r\n            case AstNodeType.MINUS_OP:\r\n            case AstNodeType.NOT_EQUAL_OP:\r\n            case AstNodeType.PLUS_OP:\r\n            case AstNodeType.POWER_OP:\r\n            case AstNodeType.TIMES_OP: {\r\n                const left = this.checkArraySizeForAst(ast.left, state);\r\n                const right = this.checkArraySizeForAst(ast.right, state);\r\n                if (!state.arraysFlag && (left.height > 1 || left.width > 1 || right.height > 1 || right.width > 1)) {\r\n                    return ArraySize.error();\r\n                }\r\n                return arraySizeForBinaryOp(left, right);\r\n            }\r\n            case AstNodeType.MINUS_UNARY_OP:\r\n            case AstNodeType.PLUS_UNARY_OP:\r\n            case AstNodeType.PERCENT_OP: {\r\n                const val = this.checkArraySizeForAst(ast.value, state);\r\n                if (!state.arraysFlag && (val.height > 1 || val.width > 1)) {\r\n                    return ArraySize.error();\r\n                }\r\n                return arraySizeForUnaryOp(val);\r\n            }\r\n            case AstNodeType.PARENTHESIS: {\r\n                return this.checkArraySizeForAst(ast.expression, state);\r\n            }\r\n            case AstNodeType.EMPTY:\r\n                return ArraySize.error();\r\n            default:\r\n                return ArraySize.error();\r\n        }\r\n    }\r\n    checkArraySizeForFunction(ast, state) {\r\n        const metadata = this.functionRegistry.getMetadata(ast.procedureName);\r\n        const pluginArraySizeFunction = this.functionRegistry.getArraySizeFunction(ast.procedureName);\r\n        if (pluginArraySizeFunction !== undefined) {\r\n            return pluginArraySizeFunction(ast, state);\r\n        }\r\n        const subChecks = ast.args.map((arg) => { var _a; return this.checkArraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false))); });\r\n        if (metadata === undefined || metadata.expandRanges || !state.arraysFlag || metadata.vectorizationForbidden || metadata.parameters === undefined) {\r\n            return new ArraySize(1, 1);\r\n        }\r\n        const argumentDefinitions = [...metadata.parameters];\r\n        if (metadata.repeatLastArgs === undefined && argumentDefinitions.length < subChecks.length) {\r\n            return ArraySize.error();\r\n        }\r\n        if (metadata.repeatLastArgs !== undefined && argumentDefinitions.length < subChecks.length &&\r\n            (subChecks.length - argumentDefinitions.length) % metadata.repeatLastArgs !== 0) {\r\n            return ArraySize.error();\r\n        }\r\n        while (argumentDefinitions.length < subChecks.length) {\r\n            argumentDefinitions.push(...argumentDefinitions.slice(argumentDefinitions.length - metadata.repeatLastArgs));\r\n        }\r\n        let maxWidth = 1;\r\n        let maxHeight = 1;\r\n        for (let i = 0; i < subChecks.length; i++) {\r\n            if (argumentDefinitions[i].argumentType !== ArgumentTypes.RANGE && argumentDefinitions[i].argumentType !== ArgumentTypes.ANY) {\r\n                maxHeight = Math.max(maxHeight, subChecks[i].height);\r\n                maxWidth = Math.max(maxWidth, subChecks[i].width);\r\n            }\r\n        }\r\n        return new ArraySize(maxWidth, maxHeight);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport class InterpreterState {\r\n    constructor(formulaAddress, arraysFlag, formulaVertex) {\r\n        this.formulaAddress = formulaAddress;\r\n        this.arraysFlag = arraysFlag;\r\n        this.formulaVertex = formulaVertex;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from '../../AbsoluteCellRange';\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { AstNodeType } from '../../parser';\r\nimport { coerceRangeToScalar, coerceScalarToBoolean, coerceScalarToString, coerceToRange } from '../ArithmeticHelper';\r\nimport { getRawValue, isExtendedNumber } from '../InterpreterValue';\r\nimport { SimpleRangeValue } from '../SimpleRangeValue';\r\nexport var ArgumentTypes;\r\n(function (ArgumentTypes) {\r\n    /**\r\n     * String type.\r\n     */\r\n    ArgumentTypes[\"STRING\"] = \"STRING\";\r\n    /**\r\n     * Floating point type.\r\n     */\r\n    ArgumentTypes[\"NUMBER\"] = \"NUMBER\";\r\n    /**\r\n     * Boolean type.\r\n     */\r\n    ArgumentTypes[\"BOOLEAN\"] = \"BOOLEAN\";\r\n    /**\r\n     * Any non-range value.\r\n     */\r\n    ArgumentTypes[\"SCALAR\"] = \"SCALAR\";\r\n    /**\r\n     * Any non-range, no-error type.\r\n     */\r\n    ArgumentTypes[\"NOERROR\"] = \"NOERROR\";\r\n    /**\r\n     * Range type.\r\n     */\r\n    ArgumentTypes[\"RANGE\"] = \"RANGE\";\r\n    /**\r\n     * Integer type.\r\n     */\r\n    ArgumentTypes[\"INTEGER\"] = \"INTEGER\";\r\n    /**\r\n     * String representing complex number.\r\n     */\r\n    ArgumentTypes[\"COMPLEX\"] = \"COMPLEX\";\r\n    /**\r\n     * Range or scalar.\r\n     */\r\n    ArgumentTypes[\"ANY\"] = \"ANY\";\r\n})(ArgumentTypes || (ArgumentTypes = {}));\r\n/**\r\n * Abstract class representing interpreter function plugin.\r\n * Plugin may contain multiple functions. Each function should be of type {@link PluginFunctionType} and needs to be\r\n * included in {@link implementedFunctions}\r\n */\r\nexport class FunctionPlugin {\r\n    constructor(interpreter) {\r\n        this.coerceScalarToNumberOrError = (arg) => this.arithmeticHelper.coerceScalarToNumberOrError(arg);\r\n        this.runFunction = (args, state, metadata, fn) => {\r\n            var _a, _b, _c, _d, _e;\r\n            let argumentDefinitions = metadata.parameters || [];\r\n            let argValues;\r\n            if (metadata.expandRanges) {\r\n                argValues = this.listOfScalarValues(args, state);\r\n            }\r\n            else {\r\n                argValues = args.map((ast) => [this.evaluateAst(ast, state), false]);\r\n            }\r\n            if (metadata.repeatLastArgs === undefined && argumentDefinitions.length < argValues.length) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\r\n            }\r\n            if (metadata.repeatLastArgs !== undefined && argumentDefinitions.length < argValues.length &&\r\n                (argValues.length - argumentDefinitions.length) % metadata.repeatLastArgs !== 0) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\r\n            }\r\n            argumentDefinitions = [...argumentDefinitions];\r\n            while (argumentDefinitions.length < argValues.length) {\r\n                argumentDefinitions.push(...argumentDefinitions.slice(argumentDefinitions.length - metadata.repeatLastArgs));\r\n            }\r\n            let maxWidth = 1;\r\n            let maxHeight = 1;\r\n            if (!metadata.vectorizationForbidden && state.arraysFlag) {\r\n                for (let i = 0; i < argValues.length; i++) {\r\n                    const [val] = argValues[i];\r\n                    if (val instanceof SimpleRangeValue && argumentDefinitions[i].argumentType !== ArgumentTypes.RANGE && argumentDefinitions[i].argumentType !== ArgumentTypes.ANY) {\r\n                        maxHeight = Math.max(maxHeight, val.height());\r\n                        maxWidth = Math.max(maxWidth, val.width());\r\n                    }\r\n                }\r\n            }\r\n            for (let i = argValues.length; i < argumentDefinitions.length; i++) {\r\n                if (((_a = argumentDefinitions[i]) === null || _a === void 0 ? void 0 : _a.defaultValue) === undefined) {\r\n                    if (!((_b = argumentDefinitions[i]) === null || _b === void 0 ? void 0 : _b.optionalArg)) {\r\n                        //not enough values passed as arguments, and there was no default value and argument was not optional\r\n                        return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\r\n                    }\r\n                }\r\n            }\r\n            const retArr = [];\r\n            for (let row = 0; row < maxHeight; row++) {\r\n                const rowArr = [];\r\n                for (let col = 0; col < maxWidth; col++) {\r\n                    let argCoerceFailure = undefined;\r\n                    const coercedArguments = [];\r\n                    for (let i = 0; i < argumentDefinitions.length; i++) {\r\n                        // eslint-disable-next-line prefer-const\r\n                        let [val, ignorable] = (_c = argValues[i]) !== null && _c !== void 0 ? _c : [undefined, undefined];\r\n                        if (val instanceof SimpleRangeValue && argumentDefinitions[i].argumentType !== ArgumentTypes.RANGE && argumentDefinitions[i].argumentType !== ArgumentTypes.ANY) {\r\n                            if (!metadata.vectorizationForbidden && state.arraysFlag) {\r\n                                val = (_d = val.data[val.height() !== 1 ? row : 0]) === null || _d === void 0 ? void 0 : _d[val.width() !== 1 ? col : 0];\r\n                            }\r\n                        }\r\n                        const arg = val !== null && val !== void 0 ? val : (_e = argumentDefinitions[i]) === null || _e === void 0 ? void 0 : _e.defaultValue;\r\n                        if (arg === undefined) {\r\n                            coercedArguments.push(undefined); //we verified in previous loop that this arg is optional\r\n                        }\r\n                        else {\r\n                            //we apply coerce only to non-default values\r\n                            const coercedArg = val !== undefined ? this.coerceToType(arg, argumentDefinitions[i], state) : arg;\r\n                            if (coercedArg !== undefined) {\r\n                                if (coercedArg instanceof CellError && argumentDefinitions[i].argumentType !== ArgumentTypes.SCALAR) {\r\n                                    //if this is first error encountered, store it\r\n                                    argCoerceFailure = argCoerceFailure !== null && argCoerceFailure !== void 0 ? argCoerceFailure : coercedArg;\r\n                                }\r\n                                coercedArguments.push(coercedArg);\r\n                            }\r\n                            else if (!ignorable) {\r\n                                //if this is first error encountered, store it\r\n                                argCoerceFailure = argCoerceFailure !== null && argCoerceFailure !== void 0 ? argCoerceFailure : (new CellError(ErrorType.VALUE, ErrorMessage.WrongType));\r\n                            }\r\n                        }\r\n                    }\r\n                    const ret = argCoerceFailure !== null && argCoerceFailure !== void 0 ? argCoerceFailure : this.returnNumberWrapper(fn(...coercedArguments), metadata.returnNumberType);\r\n                    if (maxHeight === 1 && maxWidth === 1) {\r\n                        return ret;\r\n                    }\r\n                    if (ret instanceof SimpleRangeValue) {\r\n                        throw 'Function returning array cannot be vectorized.';\r\n                    }\r\n                    rowArr.push(ret);\r\n                }\r\n                retArr.push(rowArr);\r\n            }\r\n            return SimpleRangeValue.onlyValues(retArr);\r\n        };\r\n        this.runFunctionWithReferenceArgument = (args, state, metadata, noArgCallback, referenceCallback, nonReferenceCallback = () => new CellError(ErrorType.NA, ErrorMessage.CellRefExpected)) => {\r\n            if (args.length === 0) {\r\n                return this.returnNumberWrapper(noArgCallback(), metadata.returnNumberType);\r\n            }\r\n            else if (args.length > 1) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\r\n            }\r\n            let arg = args[0];\r\n            while (arg.type === AstNodeType.PARENTHESIS) {\r\n                arg = arg.expression;\r\n            }\r\n            let cellReference;\r\n            if (arg.type === AstNodeType.CELL_REFERENCE) {\r\n                cellReference = arg.reference.toSimpleCellAddress(state.formulaAddress);\r\n            }\r\n            else if (arg.type === AstNodeType.CELL_RANGE || arg.type === AstNodeType.COLUMN_RANGE || arg.type === AstNodeType.ROW_RANGE) {\r\n                try {\r\n                    cellReference = AbsoluteCellRange.fromAst(arg, state.formulaAddress).start;\r\n                }\r\n                catch (e) {\r\n                    return new CellError(ErrorType.REF, ErrorMessage.CellRefExpected);\r\n                }\r\n            }\r\n            if (cellReference !== undefined) {\r\n                return this.returnNumberWrapper(referenceCallback(cellReference), metadata.returnNumberType);\r\n            }\r\n            return this.runFunction(args, state, metadata, nonReferenceCallback);\r\n        };\r\n        this.interpreter = interpreter;\r\n        this.dependencyGraph = interpreter.dependencyGraph;\r\n        this.columnSearch = interpreter.columnSearch;\r\n        this.config = interpreter.config;\r\n        this.serialization = interpreter.serialization;\r\n        this.arraySizePredictor = interpreter.arraySizePredictor;\r\n        this.dateTimeHelper = interpreter.dateTimeHelper;\r\n        this.arithmeticHelper = interpreter.arithmeticHelper;\r\n    }\r\n    evaluateAst(ast, state) {\r\n        return this.interpreter.evaluateAst(ast, state);\r\n    }\r\n    arraySizeForAst(ast, state) {\r\n        return this.arraySizePredictor.checkArraySizeForAst(ast, state);\r\n    }\r\n    listOfScalarValues(asts, state) {\r\n        const ret = [];\r\n        for (const argAst of asts) {\r\n            const value = this.evaluateAst(argAst, state);\r\n            if (value instanceof SimpleRangeValue) {\r\n                for (const scalarValue of value.valuesFromTopLeftCorner()) {\r\n                    ret.push([scalarValue, true]);\r\n                }\r\n            }\r\n            else {\r\n                ret.push([value, false]);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    coerceToType(arg, coercedType, state) {\r\n        let ret;\r\n        if (arg instanceof SimpleRangeValue) {\r\n            switch (coercedType.argumentType) {\r\n                case ArgumentTypes.RANGE:\r\n                case ArgumentTypes.ANY:\r\n                    ret = arg;\r\n                    break;\r\n                default: {\r\n                    const coerce = coerceRangeToScalar(arg, state);\r\n                    if (coerce === undefined) {\r\n                        return undefined;\r\n                    }\r\n                    arg = coerce;\r\n                }\r\n            }\r\n        }\r\n        if (!(arg instanceof SimpleRangeValue)) {\r\n            switch (coercedType.argumentType) {\r\n                case ArgumentTypes.INTEGER:\r\n                case ArgumentTypes.NUMBER:\r\n                    // eslint-disable-next-line no-case-declarations\r\n                    const coerced = this.coerceScalarToNumberOrError(arg);\r\n                    if (!isExtendedNumber(coerced)) {\r\n                        ret = coerced;\r\n                        break;\r\n                    }\r\n                    // eslint-disable-next-line no-case-declarations\r\n                    const value = getRawValue(coerced);\r\n                    if (coercedType.maxValue !== undefined && value > coercedType.maxValue) {\r\n                        return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n                    }\r\n                    if (coercedType.minValue !== undefined && value < coercedType.minValue) {\r\n                        return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n                    }\r\n                    if (coercedType.lessThan !== undefined && value >= coercedType.lessThan) {\r\n                        return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n                    }\r\n                    if (coercedType.greaterThan !== undefined && value <= coercedType.greaterThan) {\r\n                        return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n                    }\r\n                    if (coercedType.argumentType === ArgumentTypes.INTEGER && !Number.isInteger(value)) {\r\n                        return new CellError(ErrorType.NUM, ErrorMessage.IntegerExpected);\r\n                    }\r\n                    ret = coerced;\r\n                    break;\r\n                case ArgumentTypes.STRING:\r\n                    ret = coerceScalarToString(arg);\r\n                    break;\r\n                case ArgumentTypes.BOOLEAN:\r\n                    ret = coerceScalarToBoolean(arg);\r\n                    break;\r\n                case ArgumentTypes.SCALAR:\r\n                case ArgumentTypes.NOERROR:\r\n                case ArgumentTypes.ANY:\r\n                    ret = arg;\r\n                    break;\r\n                case ArgumentTypes.RANGE:\r\n                    if (arg instanceof CellError) {\r\n                        return arg;\r\n                    }\r\n                    ret = coerceToRange(arg);\r\n                    break;\r\n                case ArgumentTypes.COMPLEX:\r\n                    return this.arithmeticHelper.coerceScalarToComplex(getRawValue(arg));\r\n            }\r\n        }\r\n        if (coercedType.passSubtype || ret === undefined) {\r\n            return ret;\r\n        }\r\n        else {\r\n            return getRawValue(ret);\r\n        }\r\n    }\r\n    metadata(name) {\r\n        const params = this.constructor.implementedFunctions[name];\r\n        if (params !== undefined) {\r\n            return params;\r\n        }\r\n        throw new Error(`No metadata for function ${name}.`);\r\n    }\r\n    returnNumberWrapper(val, type, format) {\r\n        if (type !== undefined && isExtendedNumber(val)) {\r\n            return this.arithmeticHelper.ExtendedNumberFactory(getRawValue(val), { type, format });\r\n        }\r\n        else {\r\n            return val;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport unorm from 'unorm';\r\nimport { CellError, CellValueTypeOrd, ErrorType, getCellValueType } from '../Cell';\r\nimport { ErrorMessage } from '../error-message';\r\nimport { collatorFromConfig } from '../StringHelper';\r\nimport { cloneNumber, CurrencyNumber, DateNumber, DateTimeNumber, EmptyValue, getRawValue, getTypeFormatOfExtendedNumber, isExtendedNumber, NumberType, PercentNumber, TimeNumber } from './InterpreterValue';\r\nimport { SimpleRangeValue } from './SimpleRangeValue';\r\nconst COMPLEX_NUMBER_SYMBOL = 'i';\r\nconst complexParsingRegexp = /^\\s*([+-]?)\\s*(([\\d\\.,]+(e[+-]?\\d+)?)\\s*([ij]?)|([ij]))\\s*(([+-])\\s*([+-]?)\\s*(([\\d\\.,]+(e[+-]?\\d+)?)\\s*([ij]?)|([ij])))?$/;\r\nexport class ArithmeticHelper {\r\n    constructor(config, dateTimeHelper, numberLiteralsHelper) {\r\n        this.config = config;\r\n        this.dateTimeHelper = dateTimeHelper;\r\n        this.numberLiteralsHelper = numberLiteralsHelper;\r\n        this.lt = (left, right) => {\r\n            return this.compare(left, right) < 0;\r\n        };\r\n        this.leq = (left, right) => {\r\n            return this.compare(left, right) <= 0;\r\n        };\r\n        this.gt = (left, right) => {\r\n            return this.compare(left, right) > 0;\r\n        };\r\n        this.geq = (left, right) => {\r\n            return this.compare(left, right) >= 0;\r\n        };\r\n        this.eq = (left, right) => {\r\n            return this.compare(left, right) === 0;\r\n        };\r\n        this.neq = (left, right) => {\r\n            return this.compare(left, right) !== 0;\r\n        };\r\n        this.pow = (left, right) => {\r\n            return Math.pow(getRawValue(left), getRawValue(right));\r\n        };\r\n        this.addWithEpsilonRaw = (left, right) => {\r\n            const ret = left + right;\r\n            if (Math.abs(ret) < this.actualEps * Math.abs(left)) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return ret;\r\n            }\r\n        };\r\n        this.addWithEpsilon = (left, right) => {\r\n            const typeOfResult = inferExtendedNumberTypeAdditive(left, right);\r\n            return this.ExtendedNumberFactory(this.addWithEpsilonRaw(getRawValue(left), getRawValue(right)), typeOfResult);\r\n        };\r\n        this.unaryMinus = (arg) => {\r\n            return cloneNumber(arg, -getRawValue(arg));\r\n        };\r\n        this.unaryPlus = (arg) => arg;\r\n        this.unaryPercent = (arg) => {\r\n            return new PercentNumber(getRawValue(arg) / 100);\r\n        };\r\n        this.concat = (left, right) => {\r\n            return left.concat(right);\r\n        };\r\n        this.nonstrictadd = (left, right) => {\r\n            if (left instanceof CellError) {\r\n                return left;\r\n            }\r\n            else if (right instanceof CellError) {\r\n                return right;\r\n            }\r\n            else if (typeof left === 'number') {\r\n                if (typeof right === 'number') {\r\n                    return this.addWithEpsilonRaw(left, right);\r\n                }\r\n                else {\r\n                    return left;\r\n                }\r\n            }\r\n            else if (typeof right === 'number') {\r\n                return right;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        };\r\n        /**\r\n         * Subtracts two numbers\r\n         *\r\n         * Implementation of subtracting which is used in interpreter.\r\n         *\r\n         * @param left - left operand of subtraction\r\n         * @param right - right operand of subtraction\r\n         * @param eps - precision of comparison\r\n         */\r\n        this.subtract = (leftArg, rightArg) => {\r\n            const typeOfResult = inferExtendedNumberTypeAdditive(leftArg, rightArg);\r\n            const left = getRawValue(leftArg);\r\n            const right = getRawValue(rightArg);\r\n            let ret = left - right;\r\n            if (Math.abs(ret) < this.actualEps * Math.abs(left)) {\r\n                ret = 0;\r\n            }\r\n            return this.ExtendedNumberFactory(ret, typeOfResult);\r\n        };\r\n        this.divide = (leftArg, rightArg) => {\r\n            const left = getRawValue(leftArg);\r\n            const right = getRawValue(rightArg);\r\n            if (right === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            else {\r\n                const typeOfResult = inferExtendedNumberTypeMultiplicative(leftArg, rightArg);\r\n                return this.ExtendedNumberFactory(left / right, typeOfResult);\r\n            }\r\n        };\r\n        this.multiply = (left, right) => {\r\n            const typeOfResult = inferExtendedNumberTypeMultiplicative(left, right);\r\n            return this.ExtendedNumberFactory(getRawValue(left) * getRawValue(right), typeOfResult);\r\n        };\r\n        this.manyToExactComplex = (args) => {\r\n            const ret = [];\r\n            for (const arg of args) {\r\n                if (arg instanceof CellError) {\r\n                    return arg;\r\n                }\r\n                else if (isExtendedNumber(arg) || typeof arg === 'string') {\r\n                    const coerced = this.coerceScalarToComplex(arg);\r\n                    if (!(coerced instanceof CellError)) {\r\n                        ret.push(coerced);\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n        this.coerceNumbersExactRanges = (args) => this.manyToNumbers(args, this.manyToExactNumbers);\r\n        this.coerceNumbersCoerceRangesDropNulls = (args) => this.manyToNumbers(args, this.manyToCoercedNumbersDropNulls);\r\n        this.manyToExactNumbers = (args) => {\r\n            const ret = [];\r\n            for (const arg of args) {\r\n                if (arg instanceof CellError) {\r\n                    return arg;\r\n                }\r\n                else if (isExtendedNumber(arg)) {\r\n                    ret.push(getRawValue(arg));\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n        this.manyToOnlyNumbersDropNulls = (args) => {\r\n            const ret = [];\r\n            for (const arg of args) {\r\n                if (arg instanceof CellError) {\r\n                    return arg;\r\n                }\r\n                else if (isExtendedNumber(arg)) {\r\n                    ret.push(getRawValue(arg));\r\n                }\r\n                else if (arg !== EmptyValue) {\r\n                    return new CellError(ErrorType.VALUE, ErrorMessage.NumberExpected);\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n        this.manyToCoercedNumbersDropNulls = (args) => {\r\n            const ret = [];\r\n            for (const arg of args) {\r\n                if (arg instanceof CellError) {\r\n                    return arg;\r\n                }\r\n                if (arg === EmptyValue) {\r\n                    continue;\r\n                }\r\n                const coerced = this.coerceScalarToNumberOrError(arg);\r\n                if (isExtendedNumber(coerced)) {\r\n                    ret.push(getRawValue(coerced));\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n        this.collator = collatorFromConfig(config);\r\n        this.actualEps = config.smartRounding ? config.precisionEpsilon : 0;\r\n    }\r\n    eqMatcherFunction(pattern) {\r\n        const regexp = this.buildRegex(pattern);\r\n        return (cellValue) => (typeof cellValue === 'string' && regexp.test(this.normalizeString(cellValue)));\r\n    }\r\n    neqMatcherFunction(pattern) {\r\n        const regexp = this.buildRegex(pattern);\r\n        return (cellValue) => {\r\n            return (!(typeof cellValue === 'string') || !regexp.test(this.normalizeString(cellValue)));\r\n        };\r\n    }\r\n    searchString(pattern, text) {\r\n        var _a;\r\n        const regexp = this.buildRegex(pattern, false);\r\n        const result = regexp.exec(text);\r\n        return (_a = result === null || result === void 0 ? void 0 : result.index) !== null && _a !== void 0 ? _a : -1;\r\n    }\r\n    requiresRegex(pattern) {\r\n        if (!this.config.useRegularExpressions && !this.config.useWildcards) {\r\n            return !this.config.matchWholeCell;\r\n        }\r\n        for (let i = 0; i < pattern.length; i++) {\r\n            const c = pattern.charAt(i);\r\n            if (isWildcard(c) || (this.config.useRegularExpressions && needsEscape(c))) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    floatCmp(leftArg, rightArg) {\r\n        const left = getRawValue(leftArg);\r\n        const right = getRawValue(rightArg);\r\n        const mod = (1 + this.actualEps);\r\n        if ((right >= 0) && (left * mod >= right) && (left <= right * mod)) {\r\n            return 0;\r\n        }\r\n        else if ((right <= 0) && (left * mod <= right) && (left >= right * mod)) {\r\n            return 0;\r\n        }\r\n        else if (left > right) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    }\r\n    coerceScalarToNumberOrError(arg) {\r\n        var _a;\r\n        if (arg instanceof CellError) {\r\n            return arg;\r\n        }\r\n        return (_a = this.coerceToMaybeNumber(arg)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.VALUE, ErrorMessage.NumberCoercion);\r\n    }\r\n    coerceToMaybeNumber(arg) {\r\n        var _a;\r\n        return (_a = this.coerceNonDateScalarToMaybeNumber(arg)) !== null && _a !== void 0 ? _a : (typeof arg === 'string' ? this.dateTimeHelper.dateStringToDateNumber(arg) : undefined);\r\n    }\r\n    coerceNonDateScalarToMaybeNumber(arg) {\r\n        if (arg === EmptyValue) {\r\n            return 0;\r\n        }\r\n        else if (typeof arg === 'string') {\r\n            if (arg === '') {\r\n                return 0;\r\n            }\r\n            const maybePercentNumber = this.coerceStringToMaybePercentNumber(arg);\r\n            if (maybePercentNumber !== undefined) {\r\n                return maybePercentNumber;\r\n            }\r\n            const maybeCurrencyNumber = this.coerceStringToMaybeCurrencyNumber(arg);\r\n            if (maybeCurrencyNumber !== undefined) {\r\n                return maybeCurrencyNumber;\r\n            }\r\n            return this.numberLiteralsHelper.numericStringToMaybeNumber(arg.trim());\r\n        }\r\n        else if (isExtendedNumber(arg)) {\r\n            return arg;\r\n        }\r\n        else if (typeof arg === 'boolean') {\r\n            return Number(arg);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    coerceStringToMaybePercentNumber(input) {\r\n        const trimmedInput = input.trim();\r\n        if (trimmedInput.endsWith('%')) {\r\n            const numOfPercents = trimmedInput.slice(0, trimmedInput.length - 1).trim();\r\n            const parsedNumOfPercents = this.numberLiteralsHelper.numericStringToMaybeNumber(numOfPercents);\r\n            if (parsedNumOfPercents !== undefined) {\r\n                return new PercentNumber(parsedNumOfPercents / 100);\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    coerceStringToMaybeCurrencyNumber(input) {\r\n        const matchedCurrency = this.currencyMatcher(input.trim());\r\n        if (matchedCurrency !== undefined) {\r\n            const [currencySymbol, currencyValue] = matchedCurrency;\r\n            const parsedCurrencyValue = this.numberLiteralsHelper.numericStringToMaybeNumber(currencyValue);\r\n            if (parsedCurrencyValue !== undefined) {\r\n                return new CurrencyNumber(parsedCurrencyValue, currencySymbol);\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    currencyMatcher(token) {\r\n        for (const currency of this.config.currencySymbol) {\r\n            if (token.startsWith(currency)) {\r\n                return [currency, token.slice(currency.length).trim()];\r\n            }\r\n            if (token.endsWith(currency)) {\r\n                return [currency, token.slice(0, token.length - currency.length).trim()];\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    coerceComplexExactRanges(args) {\r\n        const vals = [];\r\n        for (const arg of args) {\r\n            if (arg instanceof SimpleRangeValue) {\r\n                vals.push(arg);\r\n            }\r\n            else if (arg !== EmptyValue) {\r\n                const coerced = this.coerceScalarToComplex(arg);\r\n                if (coerced instanceof CellError) {\r\n                    return coerced;\r\n                }\r\n                else {\r\n                    vals.push(coerced);\r\n                }\r\n            }\r\n        }\r\n        const expandedVals = [];\r\n        for (const val of vals) {\r\n            if (val instanceof SimpleRangeValue) {\r\n                const arr = this.manyToExactComplex(val.valuesFromTopLeftCorner());\r\n                if (arr instanceof CellError) {\r\n                    return arr;\r\n                }\r\n                else {\r\n                    expandedVals.push(...arr);\r\n                }\r\n            }\r\n            else {\r\n                expandedVals.push(val);\r\n            }\r\n        }\r\n        return expandedVals;\r\n    }\r\n    coerceScalarToComplex(arg) {\r\n        if (arg instanceof CellError) {\r\n            return arg;\r\n        }\r\n        else if (arg === EmptyValue) {\r\n            return [0, 0];\r\n        }\r\n        else if (isExtendedNumber(arg)) {\r\n            return [getRawValue(arg), 0];\r\n        }\r\n        else if (typeof arg === 'string') {\r\n            return this.coerceStringToComplex(arg);\r\n        }\r\n        else {\r\n            return new CellError(ErrorType.NUM, ErrorMessage.ComplexNumberExpected);\r\n        }\r\n    }\r\n    ExtendedNumberFactory(value, typeFormat) {\r\n        const { type, format } = typeFormat;\r\n        switch (type) {\r\n            case NumberType.NUMBER_RAW:\r\n                return value;\r\n            case NumberType.NUMBER_CURRENCY: {\r\n                return new CurrencyNumber(value, format !== null && format !== void 0 ? format : this.config.currencySymbol[0]);\r\n            }\r\n            case NumberType.NUMBER_DATE:\r\n                return new DateNumber(value, format);\r\n            case NumberType.NUMBER_DATETIME:\r\n                return new DateTimeNumber(value, format);\r\n            case NumberType.NUMBER_TIME:\r\n                return new TimeNumber(value, format);\r\n            case NumberType.NUMBER_PERCENT:\r\n                return new PercentNumber(value, format);\r\n        }\r\n    }\r\n    buildRegex(pattern, matchWholeCell = true) {\r\n        pattern = this.normalizeString(pattern);\r\n        let regexpStr;\r\n        let useWildcards = this.config.useWildcards;\r\n        let useRegularExpressions = this.config.useRegularExpressions;\r\n        if (useRegularExpressions) {\r\n            try {\r\n                RegExp(pattern);\r\n            }\r\n            catch (e) {\r\n                useRegularExpressions = false;\r\n                useWildcards = false;\r\n            }\r\n        }\r\n        if (useRegularExpressions) {\r\n            regexpStr = escapeNoCharacters(pattern, this.config.caseSensitive);\r\n        }\r\n        else if (useWildcards) {\r\n            regexpStr = escapeNonWildcards(pattern, this.config.caseSensitive);\r\n        }\r\n        else {\r\n            regexpStr = escapeAllCharacters(pattern, this.config.caseSensitive);\r\n        }\r\n        if (this.config.matchWholeCell && matchWholeCell) {\r\n            return RegExp('^(' + regexpStr + ')$');\r\n        }\r\n        else {\r\n            return RegExp(regexpStr);\r\n        }\r\n    }\r\n    normalizeString(str) {\r\n        if (!this.config.caseSensitive) {\r\n            str = str.toLowerCase();\r\n        }\r\n        if (!this.config.accentSensitive) {\r\n            str = normalizeString(str, 'nfd').replace(/[\\u0300-\\u036f]/g, '');\r\n        }\r\n        return str;\r\n    }\r\n    compare(left, right) {\r\n        if (typeof left === 'string' || typeof right === 'string') {\r\n            const leftTmp = typeof left === 'string' ? this.dateTimeHelper.dateStringToDateNumber(left) : left;\r\n            const rightTmp = typeof right === 'string' ? this.dateTimeHelper.dateStringToDateNumber(right) : right;\r\n            if (isExtendedNumber(leftTmp) && isExtendedNumber(rightTmp)) {\r\n                return this.floatCmp(leftTmp, rightTmp);\r\n            }\r\n        }\r\n        if (left === EmptyValue) {\r\n            left = coerceEmptyToValue(right);\r\n        }\r\n        else if (right === EmptyValue) {\r\n            right = coerceEmptyToValue(left);\r\n        }\r\n        if (typeof left === 'string' && typeof right === 'string') {\r\n            return this.stringCmp(left, right);\r\n        }\r\n        else if (typeof left === 'boolean' && typeof right === 'boolean') {\r\n            return numberCmp(coerceBooleanToNumber(left), coerceBooleanToNumber(right));\r\n        }\r\n        else if (isExtendedNumber(left) && isExtendedNumber(right)) {\r\n            return this.floatCmp(left, right);\r\n        }\r\n        else if (left === EmptyValue && right === EmptyValue) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return numberCmp(CellValueTypeOrd(getCellValueType(left)), CellValueTypeOrd(getCellValueType(right)));\r\n        }\r\n    }\r\n    stringCmp(left, right) {\r\n        return this.collator.compare(left, right);\r\n    }\r\n    manyToNumbers(args, rangeFn) {\r\n        const vals = [];\r\n        for (const arg of args) {\r\n            if (arg instanceof SimpleRangeValue) {\r\n                vals.push(arg);\r\n            }\r\n            else {\r\n                const coerced = getRawValue(this.coerceScalarToNumberOrError(arg));\r\n                if (coerced instanceof CellError) {\r\n                    return coerced;\r\n                }\r\n                else {\r\n                    vals.push(coerced);\r\n                }\r\n            }\r\n        }\r\n        const expandedVals = [];\r\n        for (const val of vals) {\r\n            if (val instanceof SimpleRangeValue) {\r\n                const arr = rangeFn(val.valuesFromTopLeftCorner());\r\n                if (arr instanceof CellError) {\r\n                    return arr;\r\n                }\r\n                else {\r\n                    expandedVals.push(...arr);\r\n                }\r\n            }\r\n            else {\r\n                expandedVals.push(val);\r\n            }\r\n        }\r\n        return expandedVals;\r\n    }\r\n    coerceStringToComplex(arg) {\r\n        const match = complexParsingRegexp.exec(arg);\r\n        if (match === null) {\r\n            return new CellError(ErrorType.NUM, ErrorMessage.ComplexNumberExpected);\r\n        }\r\n        let val1;\r\n        if (match[6] !== undefined) {\r\n            val1 = (match[1] === '-' ? [0, -1] : [0, 1]);\r\n        }\r\n        else {\r\n            val1 = this.parseComplexToken(match[1] + match[3], match[5]);\r\n        }\r\n        if (val1 instanceof CellError) {\r\n            return val1;\r\n        }\r\n        if (match[8] === undefined) {\r\n            return val1;\r\n        }\r\n        let val2;\r\n        if (match[14] !== undefined) {\r\n            val2 = (match[9] === '-' ? [0, -1] : [0, 1]);\r\n        }\r\n        else {\r\n            val2 = this.parseComplexToken(match[9] + match[11], match[13]);\r\n        }\r\n        if (val2 instanceof CellError) {\r\n            return val2;\r\n        }\r\n        if ((match[5] !== '') || (match[13] === '')) {\r\n            return new CellError(ErrorType.NUM, ErrorMessage.ComplexNumberExpected);\r\n        }\r\n        if (match[8] === '+') {\r\n            return [val1[0] + val2[0], val1[1] + val2[1]];\r\n        }\r\n        else {\r\n            return [val1[0] - val2[0], val1[1] - val2[1]];\r\n        }\r\n    }\r\n    parseComplexToken(arg, mod) {\r\n        const val = getRawValue(this.coerceNonDateScalarToMaybeNumber(arg));\r\n        if (val === undefined) {\r\n            return new CellError(ErrorType.NUM, ErrorMessage.ComplexNumberExpected);\r\n        }\r\n        if (mod === '') {\r\n            return [val, 0];\r\n        }\r\n        else {\r\n            return [0, val];\r\n        }\r\n    }\r\n}\r\nexport function coerceComplexToString([re, im], symb) {\r\n    if (!isFinite(re) || !isFinite(im)) {\r\n        return new CellError(ErrorType.NUM, ErrorMessage.NaN);\r\n    }\r\n    symb = symb !== null && symb !== void 0 ? symb : COMPLEX_NUMBER_SYMBOL;\r\n    if (im === 0) {\r\n        return `${re}`;\r\n    }\r\n    const imStr = `${im === -1 || im === 1 ? '' : Math.abs(im)}${symb}`;\r\n    if (re === 0) {\r\n        return `${im < 0 ? '-' : ''}${imStr}`;\r\n    }\r\n    return `${re}${im < 0 ? '-' : '+'}${imStr}`;\r\n}\r\nexport function coerceToRange(arg) {\r\n    if (arg instanceof SimpleRangeValue) {\r\n        return arg;\r\n    }\r\n    else {\r\n        return SimpleRangeValue.fromScalar(arg);\r\n    }\r\n}\r\nexport function coerceToRangeNumbersOrError(arg) {\r\n    if ((arg instanceof SimpleRangeValue && arg.hasOnlyNumbers()) || arg instanceof CellError) {\r\n        return arg;\r\n    }\r\n    else if (isExtendedNumber(arg)) {\r\n        return SimpleRangeValue.fromScalar(arg);\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\nexport function coerceBooleanToNumber(arg) {\r\n    return Number(arg);\r\n}\r\nexport function coerceEmptyToValue(arg) {\r\n    if (typeof arg === 'string') {\r\n        return '';\r\n    }\r\n    else if (isExtendedNumber(arg)) {\r\n        return 0;\r\n    }\r\n    else if (typeof arg === 'boolean') {\r\n        return false;\r\n    }\r\n    else {\r\n        return EmptyValue;\r\n    }\r\n}\r\n/**\r\n * Coerce scalar value to boolean if possible, or error if value is an error\r\n *\r\n * @param arg\r\n */\r\nexport function coerceScalarToBoolean(arg) {\r\n    if (arg instanceof CellError || typeof arg === 'boolean') {\r\n        return arg;\r\n    }\r\n    else if (arg === EmptyValue) {\r\n        return false;\r\n    }\r\n    else if (isExtendedNumber(arg)) {\r\n        return getRawValue(arg) !== 0;\r\n    }\r\n    else {\r\n        const argUppered = arg.toUpperCase();\r\n        if (argUppered === 'TRUE') {\r\n            return true;\r\n        }\r\n        else if (argUppered === 'FALSE') {\r\n            return false;\r\n        }\r\n        else if (argUppered === '') {\r\n            return false;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\nexport function coerceScalarToString(arg) {\r\n    if (arg instanceof CellError || typeof arg === 'string') {\r\n        return arg;\r\n    }\r\n    else if (arg === EmptyValue) {\r\n        return '';\r\n    }\r\n    else if (isExtendedNumber(arg)) {\r\n        return getRawValue(arg).toString();\r\n    }\r\n    else {\r\n        return arg ? 'TRUE' : 'FALSE';\r\n    }\r\n}\r\nexport function zeroIfEmpty(arg) {\r\n    return arg === EmptyValue ? 0 : arg;\r\n}\r\nexport function numberCmp(leftArg, rightArg) {\r\n    const left = getRawValue(leftArg);\r\n    const right = getRawValue(rightArg);\r\n    if (left > right) {\r\n        return 1;\r\n    }\r\n    else if (left < right) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\nexport function isNumberOverflow(arg) {\r\n    return (isNaN(arg) || arg === Infinity || arg === -Infinity);\r\n}\r\nexport function fixNegativeZero(arg) {\r\n    if (arg === 0) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return arg;\r\n    }\r\n}\r\nfunction isWildcard(c) {\r\n    return ['*', '?'].includes(c);\r\n}\r\nconst escapedCharacters = ['{', '}', '[', ']', '(', ')', '<', '>', '=', '.', '+', '-', ',', '\\\\', '$', '^', '!'];\r\nfunction needsEscape(c) {\r\n    return escapedCharacters.includes(c);\r\n}\r\nfunction escapeNonWildcards(pattern, caseSensitive) {\r\n    let str = '';\r\n    for (let i = 0; i < pattern.length; i++) {\r\n        const c = pattern.charAt(i);\r\n        if (c === '~') {\r\n            if (i == pattern.length - 1) {\r\n                str += '~';\r\n                continue;\r\n            }\r\n            const d = pattern.charAt(i + 1);\r\n            if (isWildcard(d) || needsEscape(d)) {\r\n                str += '\\\\' + d;\r\n                i++;\r\n            }\r\n            else {\r\n                str += d;\r\n                i++;\r\n            }\r\n        }\r\n        else if (isWildcard(c)) {\r\n            str += '.' + c;\r\n        }\r\n        else if (needsEscape(c)) {\r\n            str += '\\\\' + c;\r\n        }\r\n        else if (caseSensitive) {\r\n            str += c;\r\n        }\r\n        else {\r\n            str += c.toLowerCase();\r\n        }\r\n    }\r\n    return str;\r\n}\r\nfunction escapeAllCharacters(pattern, caseSensitive) {\r\n    let str = '';\r\n    for (let i = 0; i < pattern.length; i++) {\r\n        const c = pattern.charAt(i);\r\n        if (isWildcard(c) || needsEscape(c)) {\r\n            str += '\\\\' + c;\r\n        }\r\n        else if (caseSensitive) {\r\n            str += c;\r\n        }\r\n        else {\r\n            str += c.toLowerCase();\r\n        }\r\n    }\r\n    return str;\r\n}\r\nfunction escapeNoCharacters(pattern, caseSensitive) {\r\n    let str = '';\r\n    for (let i = 0; i < pattern.length; i++) {\r\n        const c = pattern.charAt(i);\r\n        if (isWildcard(c) || needsEscape(c)) {\r\n            str += c;\r\n        }\r\n        else if (caseSensitive) {\r\n            str += c;\r\n        }\r\n        else {\r\n            str += c.toLowerCase();\r\n        }\r\n    }\r\n    return str;\r\n}\r\nfunction inferExtendedNumberTypeAdditive(leftArg, rightArg) {\r\n    const { type: leftType, format: leftFormat } = getTypeFormatOfExtendedNumber(leftArg);\r\n    const { type: rightType, format: rightFormat } = getTypeFormatOfExtendedNumber(rightArg);\r\n    if (leftType === NumberType.NUMBER_RAW) {\r\n        return { type: rightType, format: rightFormat };\r\n    }\r\n    if (rightType === NumberType.NUMBER_RAW) {\r\n        return { type: leftType, format: leftFormat };\r\n    }\r\n    if ((leftType === NumberType.NUMBER_DATETIME || leftType === NumberType.NUMBER_DATE)\r\n        && (rightType === NumberType.NUMBER_DATETIME || rightType === NumberType.NUMBER_DATE)) {\r\n        return { type: NumberType.NUMBER_RAW };\r\n    }\r\n    if (leftType === NumberType.NUMBER_TIME) {\r\n        if (rightType === NumberType.NUMBER_DATE) {\r\n            return { type: NumberType.NUMBER_DATETIME, format: rightFormat + ' ' + leftFormat };\r\n        }\r\n        if (rightType === NumberType.NUMBER_DATETIME) {\r\n            return { type: NumberType.NUMBER_DATETIME, format: rightFormat };\r\n        }\r\n    }\r\n    if (rightType === NumberType.NUMBER_TIME) {\r\n        if (leftType === NumberType.NUMBER_DATE) {\r\n            return { type: NumberType.NUMBER_DATETIME, format: leftFormat + ' ' + rightFormat };\r\n        }\r\n        if (leftType === NumberType.NUMBER_DATETIME) {\r\n            return { type: NumberType.NUMBER_DATETIME, format: leftFormat };\r\n        }\r\n    }\r\n    return { type: leftType, format: leftFormat };\r\n}\r\nfunction inferExtendedNumberTypeMultiplicative(leftArg, rightArg) {\r\n    let { type: leftType, format: leftFormat } = getTypeFormatOfExtendedNumber(leftArg);\r\n    let { type: rightType, format: rightFormat } = getTypeFormatOfExtendedNumber(rightArg);\r\n    if (leftType === NumberType.NUMBER_PERCENT) {\r\n        leftType = NumberType.NUMBER_RAW;\r\n        leftFormat = undefined;\r\n    }\r\n    if (rightType === NumberType.NUMBER_PERCENT) {\r\n        rightType = NumberType.NUMBER_RAW;\r\n        rightFormat = undefined;\r\n    }\r\n    if (leftType === NumberType.NUMBER_RAW) {\r\n        return { type: rightType, format: rightFormat };\r\n    }\r\n    if (rightType === NumberType.NUMBER_RAW) {\r\n        return { type: leftType, format: leftFormat };\r\n    }\r\n    return { type: NumberType.NUMBER_RAW };\r\n}\r\nexport function forceNormalizeString(str) {\r\n    return normalizeString(str.toLowerCase(), 'nfd').replace(/[\\u0300-\\u036f]/g, '');\r\n}\r\nexport function coerceRangeToScalar(arg, state) {\r\n    var _a;\r\n    if (arg.isAdHoc()) {\r\n        return (_a = arg.data[0]) === null || _a === void 0 ? void 0 : _a[0];\r\n    }\r\n    const range = arg.range;\r\n    if (state.formulaAddress.sheet === range.sheet) {\r\n        if (range.width() === 1) {\r\n            const offset = state.formulaAddress.row - range.start.row;\r\n            if (offset >= 0 && offset < range.height()) {\r\n                return arg.data[offset][0];\r\n            }\r\n        }\r\n        else if (range.height() === 1) {\r\n            const offset = state.formulaAddress.col - range.start.col;\r\n            if (offset >= 0 && offset < range.width()) {\r\n                return arg.data[0][offset];\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nexport function normalizeString(str, form) {\r\n    return typeof str.normalize === 'function'\r\n        ? str.normalize(form.toUpperCase()) : unorm[form](str);\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__101__;","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport function collatorFromConfig(config) {\r\n    const sensitivity = config.caseSensitive ? (config.accentSensitive ? 'variant' : 'case') : (config.accentSensitive ? 'accent' : 'base');\r\n    const caseFirst = config.caseFirst;\r\n    const ignorePunctuation = config.ignorePunctuation;\r\n    return new Intl.Collator(config.localeLang, { sensitivity, caseFirst, ignorePunctuation });\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport const EmptyValue = Symbol('Empty value');\r\nexport function getRawValue(num) {\r\n    if (num instanceof RichNumber) {\r\n        return num.val;\r\n    }\r\n    else {\r\n        return num;\r\n    }\r\n}\r\nexport class RichNumber {\r\n    constructor(val, format) {\r\n        this.val = val;\r\n        this.format = format;\r\n    }\r\n    fromNumber(val) {\r\n        return new this.constructor(val);\r\n    }\r\n}\r\nexport function cloneNumber(val, newVal) {\r\n    if (typeof val === 'number') {\r\n        return newVal;\r\n    }\r\n    else {\r\n        const ret = val.fromNumber(newVal);\r\n        ret.format = val.format;\r\n        return ret;\r\n    }\r\n}\r\nexport class DateNumber extends RichNumber {\r\n    getDetailedType() {\r\n        return NumberType.NUMBER_DATE;\r\n    }\r\n}\r\nexport class CurrencyNumber extends RichNumber {\r\n    getDetailedType() {\r\n        return NumberType.NUMBER_CURRENCY;\r\n    }\r\n}\r\nexport class TimeNumber extends RichNumber {\r\n    getDetailedType() {\r\n        return NumberType.NUMBER_TIME;\r\n    }\r\n}\r\nexport class DateTimeNumber extends RichNumber {\r\n    getDetailedType() {\r\n        return NumberType.NUMBER_DATETIME;\r\n    }\r\n}\r\nexport class PercentNumber extends RichNumber {\r\n    getDetailedType() {\r\n        return NumberType.NUMBER_PERCENT;\r\n    }\r\n}\r\nexport function isExtendedNumber(val) {\r\n    return (typeof val === 'number') || (val instanceof RichNumber);\r\n}\r\nexport var NumberType;\r\n(function (NumberType) {\r\n    NumberType[\"NUMBER_RAW\"] = \"NUMBER_RAW\";\r\n    NumberType[\"NUMBER_DATE\"] = \"NUMBER_DATE\";\r\n    NumberType[\"NUMBER_TIME\"] = \"NUMBER_TIME\";\r\n    NumberType[\"NUMBER_DATETIME\"] = \"NUMBER_DATETIME\";\r\n    NumberType[\"NUMBER_CURRENCY\"] = \"NUMBER_CURRENCY\";\r\n    NumberType[\"NUMBER_PERCENT\"] = \"NUMBER_PERCENT\";\r\n})(NumberType || (NumberType = {}));\r\nexport function getTypeOfExtendedNumber(num) {\r\n    if (num instanceof RichNumber) {\r\n        return num.getDetailedType();\r\n    }\r\n    else {\r\n        return NumberType.NUMBER_RAW;\r\n    }\r\n}\r\nexport function getFormatOfExtendedNumber(num) {\r\n    if (num instanceof RichNumber) {\r\n        return num.format;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nexport function getTypeFormatOfExtendedNumber(num) {\r\n    if (num instanceof RichNumber) {\r\n        return { type: num.getDetailedType(), format: num.format };\r\n    }\r\n    else {\r\n        return { type: NumberType.NUMBER_RAW };\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport { EmptyStatistics } from './EmptyStatistics';\r\nexport { Statistics } from './Statistics';\r\nexport { StatType } from './StatType';\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { Statistics } from './Statistics';\r\n/** Do not store stats in the memory. Stats are not needed on daily basis */\r\nexport class EmptyStatistics extends Statistics {\r\n    /** @inheritDoc */\r\n    incrementCriterionFunctionFullCacheUsed() {\r\n        // do nothing\r\n    }\r\n    /** @inheritDoc */\r\n    incrementCriterionFunctionPartialCacheUsed() {\r\n        // do nothing\r\n    }\r\n    /** @inheritDoc */\r\n    start(_name) {\r\n        // do nothing\r\n    }\r\n    /** @inheritDoc */\r\n    end(_name) {\r\n        // do nothing\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { StatType } from './StatType';\r\n/**\r\n * Provides tracking performance statistics to the engine\r\n */\r\nexport class Statistics {\r\n    constructor() {\r\n        this.stats = new Map([\r\n            [StatType.CRITERION_FUNCTION_FULL_CACHE_USED, 0],\r\n            [StatType.CRITERION_FUNCTION_PARTIAL_CACHE_USED, 0],\r\n        ]);\r\n        this.startTimes = new Map();\r\n    }\r\n    incrementCriterionFunctionFullCacheUsed() {\r\n        var _a;\r\n        const newValue = ((_a = this.stats.get(StatType.CRITERION_FUNCTION_FULL_CACHE_USED)) !== null && _a !== void 0 ? _a : 0) + 1;\r\n        this.stats.set(StatType.CRITERION_FUNCTION_FULL_CACHE_USED, newValue);\r\n    }\r\n    incrementCriterionFunctionPartialCacheUsed() {\r\n        var _a;\r\n        const newValue = ((_a = this.stats.get(StatType.CRITERION_FUNCTION_PARTIAL_CACHE_USED)) !== null && _a !== void 0 ? _a : 0) + 1;\r\n        this.stats.set(StatType.CRITERION_FUNCTION_PARTIAL_CACHE_USED, newValue);\r\n    }\r\n    /**\r\n     * Resets statistics\r\n     */\r\n    reset() {\r\n        this.stats.clear();\r\n        this.startTimes.clear();\r\n        this.stats.set(StatType.CRITERION_FUNCTION_FULL_CACHE_USED, 0);\r\n        this.stats.set(StatType.CRITERION_FUNCTION_PARTIAL_CACHE_USED, 0);\r\n    }\r\n    /**\r\n     * Starts tracking particular statistic.\r\n     *\r\n     * @param name - statistic to start tracking\r\n     */\r\n    start(name) {\r\n        if (this.startTimes.get(name)) {\r\n            throw Error(`Statistics ${name} already started`);\r\n        }\r\n        else {\r\n            this.startTimes.set(name, Date.now());\r\n        }\r\n    }\r\n    /**\r\n     * Stops tracking particular statistic.\r\n     * Raise error if tracking statistic wasn't started.\r\n     *\r\n     * @param name - statistic to stop tracking\r\n     */\r\n    end(name) {\r\n        var _a;\r\n        const now = Date.now();\r\n        const startTime = this.startTimes.get(name);\r\n        if (startTime) {\r\n            let values = (_a = this.stats.get(name)) !== null && _a !== void 0 ? _a : 0;\r\n            values += (now - startTime);\r\n            this.stats.set(name, values);\r\n            this.startTimes.delete(name);\r\n        }\r\n        else {\r\n            throw Error(`Statistics ${name} not started`);\r\n        }\r\n    }\r\n    /**\r\n     * Measure given statistic as execution of given function.\r\n     *\r\n     * @param name - statistic to track\r\n     * @param func - function to call\r\n     * @returns result of the function call\r\n     */\r\n    measure(name, func) {\r\n        this.start(name);\r\n        const result = func();\r\n        this.end(name);\r\n        return result;\r\n    }\r\n    /**\r\n     * Returns the snapshot of current results\r\n     */\r\n    snapshot() {\r\n        return new Map(this.stats);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport var StatType;\r\n(function (StatType) {\r\n    /* build engine */\r\n    StatType[\"BUILD_ENGINE_TOTAL\"] = \"BUILD_ENGINE_TOTAL\";\r\n    StatType[\"PARSER\"] = \"PARSER\";\r\n    StatType[\"GRAPH_BUILD\"] = \"GRAPH_BUILD\";\r\n    StatType[\"COLLECT_DEPENDENCIES\"] = \"COLLECT_DEPENDENCIES\";\r\n    StatType[\"PROCESS_DEPENDENCIES\"] = \"PROCESS_DEPENDENCIES\";\r\n    StatType[\"TOP_SORT\"] = \"TOP_SORT\";\r\n    StatType[\"BUILD_COLUMN_INDEX\"] = \"BUILD_COLUMN_INDEX\";\r\n    StatType[\"EVALUATION\"] = \"EVALUATION\";\r\n    StatType[\"VLOOKUP\"] = \"VLOOKUP\";\r\n    /* crud adjustments */\r\n    StatType[\"TRANSFORM_ASTS\"] = \"TRANSFORM_ASTS\";\r\n    StatType[\"TRANSFORM_ASTS_POSTPONED\"] = \"TRANSFORM_ASTS_POSTPONED\";\r\n    StatType[\"ADJUSTING_ADDRESS_MAPPING\"] = \"ADJUSTING_ADDRESS_MAPPING\";\r\n    StatType[\"ADJUSTING_ARRAY_MAPPING\"] = \"ADJUSTING_ARRAY_MAPPING\";\r\n    StatType[\"ADJUSTING_RANGES\"] = \"ADJUSTING_RANGES\";\r\n    StatType[\"ADJUSTING_GRAPH\"] = \"ADJUSTING_GRAPH\";\r\n    /* criterion cache */\r\n    StatType[\"CRITERION_FUNCTION_FULL_CACHE_USED\"] = \"CRITERION_FUNCTION_FULL_CACHE_USED\";\r\n    StatType[\"CRITERION_FUNCTION_PARTIAL_CACHE_USED\"] = \"CRITERION_FUNCTION_PARTIAL_CACHE_USED\";\r\n})(StatType || (StatType = {}));\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { NoSheetWithIdError } from '../../errors';\r\nimport { EmptyValue } from '../../interpreter/InterpreterValue';\r\nimport { ArrayVertex, ValueCellVertex } from '../index';\r\nexport class AddressMapping {\r\n    constructor(policy) {\r\n        this.policy = policy;\r\n        this.mapping = new Map();\r\n    }\r\n    /** @inheritDoc */\r\n    getCell(address) {\r\n        const sheetMapping = this.mapping.get(address.sheet);\r\n        if (sheetMapping === undefined) {\r\n            throw new NoSheetWithIdError(address.sheet);\r\n        }\r\n        return sheetMapping.getCell(address);\r\n    }\r\n    fetchCell(address) {\r\n        const sheetMapping = this.mapping.get(address.sheet);\r\n        if (sheetMapping === undefined) {\r\n            throw new NoSheetWithIdError(address.sheet);\r\n        }\r\n        const vertex = sheetMapping.getCell(address);\r\n        if (!vertex) {\r\n            throw Error('Vertex for address missing in AddressMapping');\r\n        }\r\n        return vertex;\r\n    }\r\n    strategyFor(sheetId) {\r\n        const strategy = this.mapping.get(sheetId);\r\n        if (strategy === undefined) {\r\n            throw new NoSheetWithIdError(sheetId);\r\n        }\r\n        return strategy;\r\n    }\r\n    addSheet(sheetId, strategy) {\r\n        if (this.mapping.has(sheetId)) {\r\n            throw Error('Sheet already added');\r\n        }\r\n        this.mapping.set(sheetId, strategy);\r\n    }\r\n    autoAddSheet(sheetId, sheet, sheetBoundaries) {\r\n        const { height, width, fill } = sheetBoundaries;\r\n        const strategyConstructor = this.policy.call(fill);\r\n        this.addSheet(sheetId, new strategyConstructor(width, height));\r\n    }\r\n    getCellValue(address) {\r\n        const vertex = this.getCell(address);\r\n        if (vertex === undefined) {\r\n            return EmptyValue;\r\n        }\r\n        else if (vertex instanceof ArrayVertex) {\r\n            return vertex.getArrayCellValue(address);\r\n        }\r\n        else {\r\n            return vertex.getCellValue();\r\n        }\r\n    }\r\n    getRawValue(address) {\r\n        const vertex = this.getCell(address);\r\n        if (vertex instanceof ValueCellVertex) {\r\n            return vertex.getValues().rawValue;\r\n        }\r\n        else if (vertex instanceof ArrayVertex) {\r\n            return vertex.getArrayCellRawValue(address);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    setCell(address, newVertex) {\r\n        const sheetMapping = this.mapping.get(address.sheet);\r\n        if (!sheetMapping) {\r\n            throw Error('Sheet not initialized');\r\n        }\r\n        sheetMapping.setCell(address, newVertex);\r\n    }\r\n    moveCell(source, destination) {\r\n        const sheetMapping = this.mapping.get(source.sheet);\r\n        if (!sheetMapping) {\r\n            throw Error('Sheet not initialized.');\r\n        }\r\n        if (source.sheet !== destination.sheet) {\r\n            throw Error('Cannot move cells between sheets.');\r\n        }\r\n        if (sheetMapping.has(destination)) {\r\n            throw new Error('Cannot move cell. Destination already occupied.');\r\n        }\r\n        const vertex = sheetMapping.getCell(source);\r\n        if (vertex === undefined) {\r\n            throw new Error('Cannot move cell. No cell with such address.');\r\n        }\r\n        this.setCell(destination, vertex);\r\n        this.removeCell(source);\r\n    }\r\n    removeCell(address) {\r\n        const sheetMapping = this.mapping.get(address.sheet);\r\n        if (!sheetMapping) {\r\n            throw Error('Sheet not initialized');\r\n        }\r\n        sheetMapping.removeCell(address);\r\n    }\r\n    /** @inheritDoc */\r\n    has(address) {\r\n        const sheetMapping = this.mapping.get(address.sheet);\r\n        if (sheetMapping === undefined) {\r\n            return false;\r\n        }\r\n        return sheetMapping.has(address);\r\n    }\r\n    /** @inheritDoc */\r\n    getHeight(sheetId) {\r\n        const sheetMapping = this.mapping.get(sheetId);\r\n        if (sheetMapping === undefined) {\r\n            throw new NoSheetWithIdError(sheetId);\r\n        }\r\n        return sheetMapping.getHeight();\r\n    }\r\n    /** @inheritDoc */\r\n    getWidth(sheetId) {\r\n        const sheetMapping = this.mapping.get(sheetId);\r\n        if (!sheetMapping) {\r\n            throw new NoSheetWithIdError(sheetId);\r\n        }\r\n        return sheetMapping.getWidth();\r\n    }\r\n    addRows(sheet, row, numberOfRows) {\r\n        const sheetMapping = this.mapping.get(sheet);\r\n        if (sheetMapping === undefined) {\r\n            throw new NoSheetWithIdError(sheet);\r\n        }\r\n        sheetMapping.addRows(row, numberOfRows);\r\n    }\r\n    removeRows(removedRows) {\r\n        const sheetMapping = this.mapping.get(removedRows.sheet);\r\n        if (sheetMapping === undefined) {\r\n            throw new NoSheetWithIdError(removedRows.sheet);\r\n        }\r\n        sheetMapping.removeRows(removedRows);\r\n    }\r\n    removeSheet(sheetId) {\r\n        this.mapping.delete(sheetId);\r\n    }\r\n    addColumns(sheet, column, numberOfColumns) {\r\n        const sheetMapping = this.mapping.get(sheet);\r\n        if (sheetMapping === undefined) {\r\n            throw new NoSheetWithIdError(sheet);\r\n        }\r\n        sheetMapping.addColumns(column, numberOfColumns);\r\n    }\r\n    removeColumns(removedColumns) {\r\n        const sheetMapping = this.mapping.get(removedColumns.sheet);\r\n        if (sheetMapping === undefined) {\r\n            throw new NoSheetWithIdError(removedColumns.sheet);\r\n        }\r\n        sheetMapping.removeColumns(removedColumns);\r\n    }\r\n    *verticesFromRowsSpan(rowsSpan) {\r\n        yield* this.mapping.get(rowsSpan.sheet).verticesFromRowsSpan(rowsSpan); // eslint-disable-line @typescript-eslint/no-non-null-assertion\r\n    }\r\n    *verticesFromColumnsSpan(columnsSpan) {\r\n        yield* this.mapping.get(columnsSpan.sheet).verticesFromColumnsSpan(columnsSpan); // eslint-disable-line @typescript-eslint/no-non-null-assertion\r\n    }\r\n    *entriesFromRowsSpan(rowsSpan) {\r\n        yield* this.mapping.get(rowsSpan.sheet).entriesFromRowsSpan(rowsSpan);\r\n    }\r\n    *entriesFromColumnsSpan(columnsSpan) {\r\n        yield* this.mapping.get(columnsSpan.sheet).entriesFromColumnsSpan(columnsSpan);\r\n    }\r\n    *entries() {\r\n        for (const [sheet, mapping] of this.mapping.entries()) {\r\n            yield* mapping.getEntries(sheet);\r\n        }\r\n    }\r\n    *sheetEntries(sheet) {\r\n        const sheetMapping = this.mapping.get(sheet);\r\n        if (sheetMapping !== undefined) {\r\n            yield* sheetMapping.getEntries(sheet);\r\n        }\r\n        else {\r\n            throw new NoSheetWithIdError(sheet);\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { addressKey } from '../Cell';\r\nexport class ArrayMapping {\r\n    constructor() {\r\n        this.arrayMapping = new Map();\r\n    }\r\n    getArray(range) {\r\n        const array = this.getArrayByCorner(range.start);\r\n        if (array === null || array === void 0 ? void 0 : array.getRange().sameAs(range)) {\r\n            return array;\r\n        }\r\n        return;\r\n    }\r\n    getArrayByCorner(address) {\r\n        return this.arrayMapping.get(addressKey(address));\r\n    }\r\n    setArray(range, vertex) {\r\n        this.arrayMapping.set(addressKey(range.start), vertex);\r\n    }\r\n    removeArray(range) {\r\n        if (typeof range === 'string') {\r\n            this.arrayMapping.delete(range);\r\n        }\r\n        else {\r\n            this.arrayMapping.delete(addressKey(range.start));\r\n        }\r\n    }\r\n    count() {\r\n        return this.arrayMapping.size;\r\n    }\r\n    *arraysInRows(rowsSpan) {\r\n        for (const [mtxKey, mtx] of this.arrayMapping.entries()) {\r\n            if (mtx.spansThroughSheetRows(rowsSpan.sheet, rowsSpan.rowStart, rowsSpan.rowEnd)) {\r\n                yield [mtxKey, mtx];\r\n            }\r\n        }\r\n    }\r\n    *arraysInCols(col) {\r\n        for (const [mtxKey, mtx] of this.arrayMapping.entries()) {\r\n            if (mtx.spansThroughSheetColumn(col.sheet, col.columnStart, col.columnEnd)) {\r\n                yield [mtxKey, mtx];\r\n            }\r\n        }\r\n    }\r\n    isFormulaArrayInRow(sheet, row) {\r\n        for (const mtx of this.arrayMapping.values()) {\r\n            if (mtx.spansThroughSheetRows(sheet, row)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    isFormulaArrayInAllRows(span) {\r\n        let result = true;\r\n        for (const row of span.rows()) {\r\n            if (!this.isFormulaArrayInRow(span.sheet, row)) {\r\n                result = false;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    isFormulaArrayInColumn(sheet, column) {\r\n        for (const mtx of this.arrayMapping.values()) {\r\n            if (mtx.spansThroughSheetColumn(sheet, column)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    isFormulaArrayInAllColumns(span) {\r\n        let result = true;\r\n        for (const col of span.columns()) {\r\n            if (!this.isFormulaArrayInColumn(span.sheet, col)) {\r\n                result = false;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    isFormulaArrayInRange(range) {\r\n        for (const mtx of this.arrayMapping.values()) {\r\n            if (mtx.getRange().doesOverlap(range)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    isFormulaArrayAtAddress(address) {\r\n        for (const mtx of this.arrayMapping.values()) {\r\n            if (mtx.getRange().addressInRange(address)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    moveArrayVerticesAfterRowByRows(sheet, row, numberOfRows) {\r\n        this.updateArrayVerticesInSheet(sheet, (key, vertex) => {\r\n            const range = vertex.getRange();\r\n            return row <= range.start.row ? [range.shifted(0, numberOfRows), vertex] : undefined;\r\n        });\r\n    }\r\n    moveArrayVerticesAfterColumnByColumns(sheet, column, numberOfColumns) {\r\n        this.updateArrayVerticesInSheet(sheet, (key, vertex) => {\r\n            const range = vertex.getRange();\r\n            return column <= range.start.col ? [range.shifted(numberOfColumns, 0), vertex] : undefined;\r\n        });\r\n    }\r\n    updateArrayVerticesInSheet(sheet, fn) {\r\n        const updated = Array();\r\n        for (const [key, vertex] of this.arrayMapping.entries()) {\r\n            if (vertex.sheet !== sheet) {\r\n                continue;\r\n            }\r\n            const result = fn(key, vertex);\r\n            if (result !== undefined) {\r\n                this.removeArray(key);\r\n                updated.push(result);\r\n            }\r\n        }\r\n        updated.forEach(([range, array]) => {\r\n            this.setArray(range, array);\r\n        });\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AddressDependency, collectDependencies } from '../parser';\r\nimport { FormulaVertex } from './FormulaCellVertex';\r\nimport { RangeVertex } from './RangeVertex';\r\nexport const collectAddressesDependentToRange = (functionRegistry, vertex, range, lazilyTransformingAstService, dependencyGraph) => {\r\n    if (vertex instanceof RangeVertex) {\r\n        const intersection = vertex.range.intersectionWith(range);\r\n        if (intersection !== undefined) {\r\n            return Array.from(intersection.addresses(dependencyGraph));\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n    let formula;\r\n    let address;\r\n    if (vertex instanceof FormulaVertex) {\r\n        formula = vertex.getFormula(lazilyTransformingAstService);\r\n        address = vertex.getAddress(lazilyTransformingAstService);\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n    return collectDependencies(formula, functionRegistry)\r\n        .filter((d) => d instanceof AddressDependency)\r\n        .map((d) => d.dependency.toSimpleCellAddress(address))\r\n        .filter((d) => range.addressInRange(d));\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from '../AbsoluteCellRange';\r\nimport { ArraySize } from '../ArraySize';\r\nimport { ArrayValue, ErroredArray, NotComputedArray } from '../ArrayValue';\r\nimport { CellError, equalSimpleCellAddress, ErrorType } from '../Cell';\r\nimport { ErrorMessage } from '../error-message';\r\nimport { EmptyValue, getRawValue } from '../interpreter/InterpreterValue';\r\nimport { ColumnsSpan, RowsSpan } from '../Span';\r\nexport class FormulaVertex {\r\n    constructor(formula, cellAddress, version) {\r\n        this.formula = formula;\r\n        this.cellAddress = cellAddress;\r\n        this.version = version;\r\n    }\r\n    get width() {\r\n        return 1;\r\n    }\r\n    get height() {\r\n        return 1;\r\n    }\r\n    static fromAst(formula, address, size, version) {\r\n        if (size.isScalar()) {\r\n            return new FormulaCellVertex(formula, address, version);\r\n        }\r\n        else {\r\n            return new ArrayVertex(formula, address, size, version);\r\n        }\r\n    }\r\n    /**\r\n     * Returns formula stored in this vertex\r\n     */\r\n    getFormula(updatingService) {\r\n        this.ensureRecentData(updatingService);\r\n        return this.formula;\r\n    }\r\n    ensureRecentData(updatingService) {\r\n        if (this.version != updatingService.version()) {\r\n            const [newAst, newAddress, newVersion] = updatingService.applyTransformations(this.formula, this.cellAddress, this.version);\r\n            this.formula = newAst;\r\n            this.cellAddress = newAddress;\r\n            this.version = newVersion;\r\n        }\r\n    }\r\n    /**\r\n     * Returns address of the cell associated with vertex\r\n     */\r\n    getAddress(updatingService) {\r\n        this.ensureRecentData(updatingService);\r\n        return this.cellAddress;\r\n    }\r\n}\r\nexport class ArrayVertex extends FormulaVertex {\r\n    constructor(formula, cellAddress, size, version = 0) {\r\n        super(formula, cellAddress, version);\r\n        if (size.isRef) {\r\n            this.array = new ErroredArray(new CellError(ErrorType.REF, ErrorMessage.NoSpaceForArrayResult), ArraySize.error());\r\n        }\r\n        else {\r\n            this.array = new NotComputedArray(size);\r\n        }\r\n    }\r\n    get width() {\r\n        return this.array.width();\r\n    }\r\n    get height() {\r\n        return this.array.height();\r\n    }\r\n    get sheet() {\r\n        return this.cellAddress.sheet;\r\n    }\r\n    get leftCorner() {\r\n        return this.cellAddress;\r\n    }\r\n    setCellValue(value) {\r\n        if (value instanceof CellError) {\r\n            this.setErrorValue(value);\r\n            return value;\r\n        }\r\n        const array = ArrayValue.fromInterpreterValue(value);\r\n        array.resize(this.array.size);\r\n        this.array = array;\r\n        return value;\r\n    }\r\n    getCellValue() {\r\n        if (this.array instanceof NotComputedArray) {\r\n            throw Error('Array not computed yet.');\r\n        }\r\n        return this.array.simpleRangeValue();\r\n    }\r\n    valueOrUndef() {\r\n        if (this.array instanceof NotComputedArray) {\r\n            return undefined;\r\n        }\r\n        return this.array.simpleRangeValue();\r\n    }\r\n    getArrayCellValue(address) {\r\n        const col = address.col - this.cellAddress.col;\r\n        const row = address.row - this.cellAddress.row;\r\n        try {\r\n            return this.array.get(col, row);\r\n        }\r\n        catch (e) {\r\n            return new CellError(ErrorType.REF);\r\n        }\r\n    }\r\n    getArrayCellRawValue(address) {\r\n        const val = this.getArrayCellValue(address);\r\n        if (val instanceof CellError || val === EmptyValue) {\r\n            return undefined;\r\n        }\r\n        else {\r\n            return getRawValue(val);\r\n        }\r\n    }\r\n    setArrayCellValue(address, value) {\r\n        const col = address.col - this.cellAddress.col;\r\n        const row = address.row - this.cellAddress.row;\r\n        if (this.array instanceof ArrayValue) {\r\n            this.array.set(col, row, value);\r\n        }\r\n    }\r\n    setNoSpace() {\r\n        this.array = new ErroredArray(new CellError(ErrorType.SPILL, ErrorMessage.NoSpaceForArrayResult), ArraySize.error());\r\n        return this.getCellValue();\r\n    }\r\n    getRange() {\r\n        return AbsoluteCellRange.spanFrom(this.cellAddress, this.width, this.height);\r\n    }\r\n    getRangeOrUndef() {\r\n        return AbsoluteCellRange.spanFromOrUndef(this.cellAddress, this.width, this.height);\r\n    }\r\n    setAddress(address) {\r\n        this.cellAddress = address;\r\n    }\r\n    setFormula(newFormula) {\r\n        this.formula = newFormula;\r\n    }\r\n    spansThroughSheetRows(sheet, startRow, endRow = startRow) {\r\n        return (this.cellAddress.sheet === sheet) &&\r\n            (this.cellAddress.row <= endRow) &&\r\n            (startRow < this.cellAddress.row + this.height);\r\n    }\r\n    spansThroughSheetColumn(sheet, col, columnEnd = col) {\r\n        return (this.cellAddress.sheet === sheet) &&\r\n            (this.cellAddress.col <= columnEnd) &&\r\n            (col < this.cellAddress.col + this.width);\r\n    }\r\n    isComputed() {\r\n        return (!(this.array instanceof NotComputedArray));\r\n    }\r\n    columnsFromArray() {\r\n        return ColumnsSpan.fromNumberOfColumns(this.cellAddress.sheet, this.cellAddress.col, this.width);\r\n    }\r\n    rowsFromArray() {\r\n        return RowsSpan.fromNumberOfRows(this.cellAddress.sheet, this.cellAddress.row, this.height);\r\n    }\r\n    /**\r\n     * No-op as array vertices are transformed eagerly.\r\n     * */\r\n    ensureRecentData(_updatingService) {\r\n    }\r\n    isLeftCorner(address) {\r\n        return equalSimpleCellAddress(this.cellAddress, address);\r\n    }\r\n    setErrorValue(error) {\r\n        this.array = new ErroredArray(error, this.array.size);\r\n    }\r\n}\r\n/**\r\n * Represents vertex which keeps formula\r\n */\r\nexport class FormulaCellVertex extends FormulaVertex {\r\n    constructor(\r\n    /** Formula in AST format */\r\n    formula, \r\n    /** Address which this vertex represents */\r\n    address, version) {\r\n        super(formula, address, version);\r\n    }\r\n    valueOrUndef() {\r\n        return this.cachedCellValue;\r\n    }\r\n    /**\r\n     * Sets computed cell value stored in this vertex\r\n     */\r\n    setCellValue(cellValue) {\r\n        this.cachedCellValue = cellValue;\r\n        return this.cachedCellValue;\r\n    }\r\n    /**\r\n     * Returns cell value stored in vertex\r\n     */\r\n    getCellValue() {\r\n        if (this.cachedCellValue !== undefined) {\r\n            return this.cachedCellValue;\r\n        }\r\n        else {\r\n            throw Error('Value of the formula cell is not computed.');\r\n        }\r\n    }\r\n    isComputed() {\r\n        return (this.cachedCellValue !== undefined);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArraySize } from './ArraySize';\r\nimport { EmptyValue } from './interpreter/InterpreterValue';\r\nimport { SimpleRangeValue } from './interpreter/SimpleRangeValue';\r\nexport class NotComputedArray {\r\n    constructor(size) {\r\n        this.size = size;\r\n    }\r\n    width() {\r\n        return this.size.width;\r\n    }\r\n    height() {\r\n        return this.size.height;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    get(col, row) {\r\n        throw Error('Array not computed yet.');\r\n    }\r\n    simpleRangeValue() {\r\n        throw Error('Array not computed yet.');\r\n    }\r\n}\r\nexport class ArrayValue {\r\n    constructor(array) {\r\n        this.size = new ArraySize(array.length > 0 ? array[0].length : 0, array.length);\r\n        this.array = array;\r\n    }\r\n    static fromInterpreterValue(value) {\r\n        if (value instanceof SimpleRangeValue) {\r\n            return new ArrayValue(value.data);\r\n        }\r\n        else {\r\n            return new ArrayValue([[value]]);\r\n        }\r\n    }\r\n    simpleRangeValue() {\r\n        return SimpleRangeValue.onlyValues(this.array);\r\n    }\r\n    addRows(aboveRow, numberOfRows) {\r\n        this.array.splice(aboveRow, 0, ...this.nullArrays(numberOfRows, this.width()));\r\n        this.size.height += numberOfRows;\r\n    }\r\n    addColumns(aboveColumn, numberOfColumns) {\r\n        for (let i = 0; i < this.height(); i++) {\r\n            this.array[i].splice(aboveColumn, 0, ...new Array(numberOfColumns).fill(EmptyValue));\r\n        }\r\n        this.size.width += numberOfColumns;\r\n    }\r\n    removeRows(startRow, endRow) {\r\n        if (this.outOfBound(0, startRow) || this.outOfBound(0, endRow)) {\r\n            throw Error('Array index out of bound');\r\n        }\r\n        const numberOfRows = endRow - startRow + 1;\r\n        this.array.splice(startRow, numberOfRows);\r\n        this.size.height -= numberOfRows;\r\n    }\r\n    removeColumns(leftmostColumn, rightmostColumn) {\r\n        if (this.outOfBound(leftmostColumn, 0) || this.outOfBound(rightmostColumn, 0)) {\r\n            throw Error('Array index out of bound');\r\n        }\r\n        const numberOfColumns = rightmostColumn - leftmostColumn + 1;\r\n        for (const row of this.array) {\r\n            row.splice(leftmostColumn, numberOfColumns);\r\n        }\r\n        this.size.width -= numberOfColumns;\r\n    }\r\n    nullArrays(count, size) {\r\n        const result = [];\r\n        for (let i = 0; i < count; ++i) {\r\n            result.push(new Array(size).fill(EmptyValue));\r\n        }\r\n        return result;\r\n    }\r\n    get(col, row) {\r\n        if (this.outOfBound(col, row)) {\r\n            throw Error('Array index out of bound');\r\n        }\r\n        return this.array[row][col];\r\n    }\r\n    set(col, row, value) {\r\n        if (this.outOfBound(col, row)) {\r\n            throw Error('Array index out of bound');\r\n        }\r\n        this.array[row][col] = value;\r\n    }\r\n    width() {\r\n        return this.size.width;\r\n    }\r\n    height() {\r\n        return this.size.height;\r\n    }\r\n    raw() {\r\n        return this.array;\r\n    }\r\n    resize(newSize) {\r\n        if (this.height() < newSize.height && isFinite(newSize.height)) {\r\n            this.addRows(this.height(), newSize.height - this.height());\r\n        }\r\n        if (this.height() > newSize.height) {\r\n            throw 'Resizing to smaller array';\r\n        }\r\n        if (this.width() < newSize.width && isFinite(newSize.width)) {\r\n            this.addColumns(this.width(), newSize.width - this.width());\r\n        }\r\n        if (this.width() > newSize.width) {\r\n            throw 'Resizing to smaller array';\r\n        }\r\n    }\r\n    outOfBound(col, row) {\r\n        return col < 0 || row < 0 || row > this.size.height - 1 || col > this.size.width - 1;\r\n    }\r\n}\r\nexport class ErroredArray {\r\n    constructor(error, size) {\r\n        this.error = error;\r\n        this.size = size;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    get(col, row) {\r\n        return this.error;\r\n    }\r\n    width() {\r\n        return this.size.width;\r\n    }\r\n    height() {\r\n        return this.size.height;\r\n    }\r\n    simpleRangeValue() {\r\n        return this.error;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\n/**\r\n * Represents vertex bound to range\r\n */\r\nexport class RangeVertex {\r\n    constructor(range) {\r\n        this.range = range;\r\n        this.functionCache = new Map();\r\n        this.criterionFunctionCache = new Map();\r\n        this.dependentCacheRanges = new Set();\r\n        this.bruteForce = false;\r\n    }\r\n    get start() {\r\n        return this.range.start;\r\n    }\r\n    get end() {\r\n        return this.range.end;\r\n    }\r\n    get sheet() {\r\n        return this.range.start.sheet;\r\n    }\r\n    /**\r\n     * Returns cached value stored for given function\r\n     *\r\n     * @param functionName - name of the function\r\n     */\r\n    getFunctionValue(functionName) {\r\n        return this.functionCache.get(functionName);\r\n    }\r\n    /**\r\n     * Stores cached value for given function\r\n     *\r\n     * @param functionName - name of the function\r\n     * @param value - cached value\r\n     */\r\n    setFunctionValue(functionName, value) {\r\n        this.functionCache.set(functionName, value);\r\n    }\r\n    /**\r\n     * Returns cached value for given cache key and criterion text representation\r\n     *\r\n     * @param cacheKey - key to retrieve from the cache\r\n     * @param criterionString - criterion text (ex. '<=5')\r\n     */\r\n    getCriterionFunctionValue(cacheKey, criterionString) {\r\n        var _a;\r\n        return (_a = this.getCriterionFunctionValues(cacheKey).get(criterionString)) === null || _a === void 0 ? void 0 : _a[0];\r\n    }\r\n    /**\r\n     * Returns all cached values stored for given criterion function\r\n     *\r\n     * @param cacheKey - key to retrieve from the cache\r\n     */\r\n    getCriterionFunctionValues(cacheKey) {\r\n        var _a;\r\n        return (_a = this.criterionFunctionCache.get(cacheKey)) !== null && _a !== void 0 ? _a : new Map();\r\n    }\r\n    /**\r\n     * Stores all values for given criterion function\r\n     *\r\n     * @param cacheKey - key to store in the cache\r\n     * @param values - map with values\r\n     */\r\n    setCriterionFunctionValues(cacheKey, values) {\r\n        this.criterionFunctionCache.set(cacheKey, values);\r\n    }\r\n    addDependentCacheRange(dependentRange) {\r\n        if (dependentRange !== this) {\r\n            this.dependentCacheRanges.add(dependentRange);\r\n        }\r\n    }\r\n    /**\r\n     * Clears function cache\r\n     */\r\n    clearCache() {\r\n        this.functionCache.clear();\r\n        this.criterionFunctionCache.clear();\r\n        this.dependentCacheRanges.forEach(range => range.criterionFunctionCache.clear());\r\n        this.dependentCacheRanges.clear();\r\n    }\r\n    /**\r\n     * Returns start of the range (it's top-left corner)\r\n     */\r\n    getStart() {\r\n        return this.start;\r\n    }\r\n    /**\r\n     * Returns end of the range (it's bottom-right corner)\r\n     */\r\n    getEnd() {\r\n        return this.end;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nvar NodeVisitStatus;\r\n(function (NodeVisitStatus) {\r\n    NodeVisitStatus[NodeVisitStatus[\"ON_STACK\"] = 0] = \"ON_STACK\";\r\n    NodeVisitStatus[NodeVisitStatus[\"PROCESSED\"] = 1] = \"PROCESSED\";\r\n    NodeVisitStatus[NodeVisitStatus[\"POPPED\"] = 2] = \"POPPED\";\r\n})(NodeVisitStatus || (NodeVisitStatus = {}));\r\n/**\r\n * Provides graph directed structure\r\n *\r\n * Invariants:\r\n * - this.edges(node) exists if and only if node is in the graph\r\n * - this.specialNodes* are always subset of this.nodes\r\n * - this.edges(node) is subset of this.nodes (i.e. it does not contain nodes not present in graph) -- this invariant DOES NOT HOLD right now\r\n */\r\nexport class Graph {\r\n    constructor(dependencyQuery) {\r\n        this.dependencyQuery = dependencyQuery;\r\n        /** Set with nodes in graph. */\r\n        this.nodes = new Set();\r\n        this.specialNodes = new Set();\r\n        this.specialNodesStructuralChanges = new Set();\r\n        this.specialNodesRecentlyChanged = new Set();\r\n        this.infiniteRanges = new Set();\r\n        /** Nodes adjacency mapping. */\r\n        this.edges = new Map();\r\n    }\r\n    /**\r\n     * Adds node to a graph\r\n     *\r\n     * @param node - a node to be added\r\n     */\r\n    addNode(node) {\r\n        this.nodes.add(node);\r\n        if (!this.edges.has(node)) {\r\n            this.edges.set(node, new Set());\r\n        }\r\n    }\r\n    /**\r\n     * Adds edge between nodes.\r\n     *\r\n     * The nodes had to be added to the graph before, or the error will be raised\r\n     *\r\n     * @param fromNode - node from which edge is outcoming\r\n     * @param toNode - node to which edge is incoming\r\n     */\r\n    addEdge(fromNode, toNode) {\r\n        if (!this.nodes.has(fromNode)) {\r\n            throw new Error(`Unknown node ${fromNode}`);\r\n        }\r\n        if (!this.nodes.has(toNode)) {\r\n            throw new Error(`Unknown node ${toNode}`);\r\n        }\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        this.edges.get(fromNode).add(toNode);\r\n    }\r\n    removeEdge(fromNode, toNode) {\r\n        if (this.existsEdge(fromNode, toNode)) {\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            this.edges.get(fromNode).delete(toNode);\r\n        }\r\n        else {\r\n            throw new Error('Edge does not exist');\r\n        }\r\n    }\r\n    softRemoveEdge(fromNode, toNode) {\r\n        var _a;\r\n        (_a = this.edges.get(fromNode)) === null || _a === void 0 ? void 0 : _a.delete(toNode);\r\n    }\r\n    removeIncomingEdges(toNode) {\r\n        this.edges.forEach((nodeEdges) => {\r\n            nodeEdges.delete(toNode);\r\n        });\r\n    }\r\n    /**\r\n     * Returns nodes adjacent to given node\r\n     *\r\n     * @param node - node to which adjacent nodes we want to retrieve\r\n     */\r\n    adjacentNodes(node) {\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        return this.edges.get(node);\r\n    }\r\n    adjacentNodesCount(node) {\r\n        return this.adjacentNodes(node).size;\r\n    }\r\n    /**\r\n     * Checks whether a node is present in graph\r\n     *\r\n     * @param node - node to check\r\n     */\r\n    hasNode(node) {\r\n        return this.nodes.has(node);\r\n    }\r\n    /**\r\n     * Returns number of nodes in graph\r\n     */\r\n    nodesCount() {\r\n        return this.nodes.size;\r\n    }\r\n    /**\r\n     * Returns number of edges in graph\r\n     */\r\n    edgesCount() {\r\n        let result = 0;\r\n        this.edges.forEach((edgesForNode) => (result += edgesForNode.size));\r\n        return result;\r\n    }\r\n    removeNode(node) {\r\n        for (const adjacentNode of this.adjacentNodes(node).values()) {\r\n            this.markNodeAsSpecialRecentlyChanged(adjacentNode);\r\n        }\r\n        this.edges.delete(node);\r\n        this.nodes.delete(node);\r\n        this.specialNodes.delete(node);\r\n        this.specialNodesRecentlyChanged.delete(node);\r\n        this.specialNodesStructuralChanges.delete(node);\r\n        this.infiniteRanges.delete(node);\r\n        return this.removeDependencies(node);\r\n    }\r\n    markNodeAsSpecial(node) {\r\n        this.specialNodes.add(node);\r\n    }\r\n    markNodeAsSpecialRecentlyChanged(node) {\r\n        if (this.nodes.has(node)) {\r\n            this.specialNodesRecentlyChanged.add(node);\r\n        }\r\n    }\r\n    markNodeAsChangingWithStructure(node) {\r\n        this.specialNodesStructuralChanges.add(node);\r\n    }\r\n    clearSpecialNodesRecentlyChanged() {\r\n        this.specialNodesRecentlyChanged.clear();\r\n    }\r\n    markNodeAsInfiniteRange(node) {\r\n        this.infiniteRanges.add(node);\r\n    }\r\n    /**\r\n     * Checks whether exists edge between nodes\r\n     *\r\n     * @param fromNode - node from which edge is outcoming\r\n     * @param toNode - node to which edge is incoming\r\n     */\r\n    existsEdge(fromNode, toNode) {\r\n        var _a, _b;\r\n        return (_b = (_a = this.edges.get(fromNode)) === null || _a === void 0 ? void 0 : _a.has(toNode)) !== null && _b !== void 0 ? _b : false;\r\n    }\r\n    /*\r\n     * return a topological sort order, but separates vertices that exist in some cycle\r\n     */\r\n    topSortWithScc() {\r\n        return this.getTopSortedWithSccSubgraphFrom(Array.from(this.nodes), () => true, () => {\r\n        });\r\n    }\r\n    /**\r\n     *\r\n     * an iterative implementation of Tarjan's algorithm for finding strongly connected compontents\r\n     * returns vertices in order of topological sort, but vertices that are on cycles are kept separate\r\n     *\r\n     * @param modifiedNodes - seed for computation. During engine init run, all of the vertices of grap. In recomputation run, changed vertices.\r\n     * @param operatingFunction - recomputes value of a node, and returns whether a change occured\r\n     * @param onCycle - action to be performed when node is on cycle\r\n     */\r\n    getTopSortedWithSccSubgraphFrom(modifiedNodes, operatingFunction, onCycle) {\r\n        const entranceTime = new Map();\r\n        const low = new Map();\r\n        const parent = new Map();\r\n        const inSCC = new Set();\r\n        // node status life cycle:\r\n        // undefined -> ON_STACK -> PROCESSED -> POPPED\r\n        const nodeStatus = new Map();\r\n        const order = [];\r\n        let time = 0;\r\n        const sccNonSingletons = new Set();\r\n        modifiedNodes.reverse();\r\n        modifiedNodes.forEach((v) => {\r\n            if (nodeStatus.get(v) !== undefined) {\r\n                return;\r\n            }\r\n            const DFSstack = [v];\r\n            const SCCstack = [];\r\n            nodeStatus.set(v, NodeVisitStatus.ON_STACK);\r\n            while (DFSstack.length > 0) {\r\n                const u = DFSstack[DFSstack.length - 1];\r\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                switch (nodeStatus.get(u)) {\r\n                    case NodeVisitStatus.ON_STACK: {\r\n                        entranceTime.set(u, time);\r\n                        low.set(u, time);\r\n                        SCCstack.push(u);\r\n                        time++;\r\n                        this.adjacentNodes(u).forEach((t) => {\r\n                            if (entranceTime.get(t) === undefined) {\r\n                                DFSstack.push(t);\r\n                                parent.set(t, u);\r\n                                nodeStatus.set(t, NodeVisitStatus.ON_STACK);\r\n                            }\r\n                        });\r\n                        nodeStatus.set(u, NodeVisitStatus.PROCESSED);\r\n                        break;\r\n                    }\r\n                    case NodeVisitStatus.PROCESSED: { // leaving this DFS subtree\r\n                        let uLow;\r\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                        uLow = entranceTime.get(u);\r\n                        this.adjacentNodes(u).forEach((t) => {\r\n                            if (!inSCC.has(t)) {\r\n                                if (parent.get(t) === u) {\r\n                                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                                    uLow = Math.min(uLow, low.get(t));\r\n                                }\r\n                                else {\r\n                                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                                    uLow = Math.min(uLow, entranceTime.get(t));\r\n                                }\r\n                            }\r\n                        });\r\n                        low.set(u, uLow);\r\n                        if (uLow === entranceTime.get(u)) {\r\n                            const currentSCC = [];\r\n                            do {\r\n                                currentSCC.push(SCCstack[SCCstack.length - 1]);\r\n                                SCCstack.pop();\r\n                            } while (currentSCC[currentSCC.length - 1] !== u);\r\n                            currentSCC.forEach((t) => {\r\n                                inSCC.add(t);\r\n                            });\r\n                            order.push(...currentSCC);\r\n                            if (currentSCC.length > 1) {\r\n                                currentSCC.forEach((t) => {\r\n                                    sccNonSingletons.add(t);\r\n                                });\r\n                            }\r\n                        }\r\n                        DFSstack.pop();\r\n                        nodeStatus.set(u, NodeVisitStatus.POPPED);\r\n                        break;\r\n                    }\r\n                    case NodeVisitStatus.POPPED: { // it's a 'shadow' copy, we already processed this vertex and can ignore it\r\n                        DFSstack.pop();\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        const shouldBeUpdatedMapping = new Set(modifiedNodes);\r\n        const sorted = [];\r\n        const cycled = [];\r\n        order.reverse();\r\n        order.forEach((t) => {\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            if (sccNonSingletons.has(t) || this.adjacentNodes(t).has(t)) {\r\n                cycled.push(t);\r\n                onCycle(t);\r\n                this.adjacentNodes(t).forEach((s) => shouldBeUpdatedMapping.add(s));\r\n            }\r\n            else {\r\n                sorted.push(t);\r\n                if (shouldBeUpdatedMapping.has(t) && operatingFunction(t)) {\r\n                    this.adjacentNodes(t).forEach((s) => shouldBeUpdatedMapping.add(s));\r\n                }\r\n            }\r\n        });\r\n        return { sorted, cycled };\r\n    }\r\n    getDependencies(vertex) {\r\n        const result = [];\r\n        this.edges.forEach((adjacentNodes, sourceNode) => {\r\n            if (adjacentNodes.has(vertex)) {\r\n                result.push(sourceNode);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    removeDependencies(node) {\r\n        const dependencies = this.dependencyQuery(node);\r\n        for (const dependency of dependencies) {\r\n            this.softRemoveEdge(dependency, node);\r\n        }\r\n        return dependencies;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from '../AbsoluteCellRange';\r\nimport { simpleCellAddress } from '../Cell';\r\n/**\r\n * Mapping from address ranges to range vertices\r\n */\r\nexport class RangeMapping {\r\n    constructor() {\r\n        /** Map in which actual data is stored. */\r\n        this.rangeMapping = new Map();\r\n    }\r\n    getMappingSize(sheet) {\r\n        var _a, _b;\r\n        return (_b = (_a = this.rangeMapping.get(sheet)) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : 0;\r\n    }\r\n    /**\r\n     * Saves range vertex\r\n     *\r\n     * @param vertex - vertex to save\r\n     */\r\n    setRange(vertex) {\r\n        let sheetMap = this.rangeMapping.get(vertex.getStart().sheet);\r\n        if (sheetMap === undefined) {\r\n            sheetMap = new Map();\r\n            this.rangeMapping.set(vertex.getStart().sheet, sheetMap);\r\n        }\r\n        const key = keyFromAddresses(vertex.getStart(), vertex.getEnd());\r\n        sheetMap.set(key, vertex);\r\n    }\r\n    removeRange(vertex) {\r\n        const sheet = vertex.getStart().sheet;\r\n        const sheetMap = this.rangeMapping.get(sheet);\r\n        if (sheetMap === undefined) {\r\n            return;\r\n        }\r\n        const key = keyFromAddresses(vertex.getStart(), vertex.getEnd());\r\n        sheetMap.delete(key);\r\n        if (sheetMap.size === 0) {\r\n            this.rangeMapping.delete(sheet);\r\n        }\r\n    }\r\n    /**\r\n     * Returns associated vertex for given range\r\n     *\r\n     * @param start - top-left corner of the range\r\n     * @param end - bottom-right corner of the range\r\n     */\r\n    getRange(start, end) {\r\n        const sheetMap = this.rangeMapping.get(start.sheet);\r\n        const key = keyFromAddresses(start, end);\r\n        return sheetMap === null || sheetMap === void 0 ? void 0 : sheetMap.get(key);\r\n    }\r\n    fetchRange(start, end) {\r\n        const maybeRange = this.getRange(start, end);\r\n        if (!maybeRange) {\r\n            throw Error('Range does not exist');\r\n        }\r\n        return maybeRange;\r\n    }\r\n    truncateRanges(span, coordinate) {\r\n        const verticesToRemove = Array();\r\n        const updated = Array();\r\n        const verticesWithChangedSize = Array();\r\n        const sheet = span.sheet;\r\n        for (const [key, vertex] of this.entriesFromSheet(span.sheet)) {\r\n            const range = vertex.range;\r\n            if (span.start <= coordinate(vertex.range.end)) {\r\n                range.removeSpan(span);\r\n                if (range.shouldBeRemoved()) {\r\n                    this.removeByKey(sheet, key);\r\n                    verticesToRemove.push(vertex);\r\n                }\r\n                else {\r\n                    updated.push([key, vertex]);\r\n                }\r\n                verticesWithChangedSize.push(vertex);\r\n            }\r\n        }\r\n        const verticesToMerge = [];\r\n        updated.sort((left, right) => compareBy(left[1], right[1], coordinate));\r\n        for (const [oldKey, vertex] of updated) {\r\n            const newKey = keyFromRange(vertex.range);\r\n            if (newKey === oldKey) {\r\n                continue;\r\n            }\r\n            const existingVertex = this.getByKey(sheet, newKey);\r\n            this.removeByKey(sheet, oldKey);\r\n            if (existingVertex !== undefined && vertex != existingVertex) {\r\n                verticesToMerge.push([existingVertex, vertex]);\r\n            }\r\n            else {\r\n                this.setRange(vertex);\r\n            }\r\n        }\r\n        return {\r\n            verticesToRemove,\r\n            verticesToMerge,\r\n            verticesWithChangedSize\r\n        };\r\n    }\r\n    moveAllRangesInSheetAfterRowByRows(sheet, row, numberOfRows) {\r\n        return this.updateVerticesFromSheet(sheet, (key, vertex) => {\r\n            if (row <= vertex.start.row) {\r\n                vertex.range.shiftByRows(numberOfRows);\r\n                return {\r\n                    changedSize: false,\r\n                    vertex: vertex\r\n                };\r\n            }\r\n            else if (row > vertex.start.row && row <= vertex.end.row) {\r\n                vertex.range.expandByRows(numberOfRows);\r\n                return {\r\n                    changedSize: true,\r\n                    vertex: vertex\r\n                };\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        });\r\n    }\r\n    moveAllRangesInSheetAfterColumnByColumns(sheet, column, numberOfColumns) {\r\n        return this.updateVerticesFromSheet(sheet, (key, vertex) => {\r\n            if (column <= vertex.start.col) {\r\n                vertex.range.shiftByColumns(numberOfColumns);\r\n                return {\r\n                    changedSize: false,\r\n                    vertex: vertex\r\n                };\r\n            }\r\n            else if (column > vertex.start.col && column <= vertex.end.col) {\r\n                vertex.range.expandByColumns(numberOfColumns);\r\n                return {\r\n                    changedSize: true,\r\n                    vertex: vertex\r\n                };\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        });\r\n    }\r\n    moveRangesInsideSourceRange(sourceRange, toRight, toBottom, toSheet) {\r\n        this.updateVerticesFromSheet(sourceRange.sheet, (key, vertex) => {\r\n            if (sourceRange.containsRange(vertex.range)) {\r\n                vertex.range.shiftByColumns(toRight);\r\n                vertex.range.shiftByRows(toBottom);\r\n                vertex.range.moveToSheet(toSheet);\r\n                return {\r\n                    changedSize: false,\r\n                    vertex: vertex\r\n                };\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        });\r\n    }\r\n    removeRangesInSheet(sheet) {\r\n        if (this.rangeMapping.has(sheet)) {\r\n            const ranges = this.rangeMapping.get(sheet).values();\r\n            this.rangeMapping.delete(sheet);\r\n            return ranges;\r\n        }\r\n        return [][Symbol.iterator]();\r\n    }\r\n    *rangesInSheet(sheet) {\r\n        const sheetMap = this.rangeMapping.get(sheet);\r\n        if (!sheetMap) {\r\n            return;\r\n        }\r\n        yield* sheetMap.values();\r\n    }\r\n    *rangeVerticesContainedInRange(sourceRange) {\r\n        for (const rangeVertex of this.rangesInSheet(sourceRange.sheet)) {\r\n            if (sourceRange.containsRange(rangeVertex.range)) {\r\n                yield rangeVertex;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Finds smaller range does have own vertex.\r\n     *\r\n     * @param range\r\n     */\r\n    findSmallerRange(range) {\r\n        if (range.height() > 1 && Number.isFinite(range.height())) {\r\n            const valuesRangeEndRowLess = simpleCellAddress(range.end.sheet, range.end.col, range.end.row - 1);\r\n            const rowLessVertex = this.getRange(range.start, valuesRangeEndRowLess);\r\n            if (rowLessVertex !== undefined) {\r\n                const restRange = new AbsoluteCellRange(simpleCellAddress(range.start.sheet, range.start.col, range.end.row), range.end);\r\n                return {\r\n                    smallerRangeVertex: rowLessVertex,\r\n                    restRange,\r\n                };\r\n            }\r\n        }\r\n        return {\r\n            restRange: range,\r\n        };\r\n    }\r\n    *entriesFromSheet(sheet) {\r\n        const sheetMap = this.rangeMapping.get(sheet);\r\n        if (!sheetMap) {\r\n            return;\r\n        }\r\n        yield* sheetMap.entries();\r\n    }\r\n    removeByKey(sheet, key) {\r\n        this.rangeMapping.get(sheet).delete(key);\r\n    }\r\n    getByKey(sheet, key) {\r\n        var _a;\r\n        return (_a = this.rangeMapping.get(sheet)) === null || _a === void 0 ? void 0 : _a.get(key);\r\n    }\r\n    updateVerticesFromSheet(sheet, fn) {\r\n        const updated = Array();\r\n        for (const [key, vertex] of this.entriesFromSheet(sheet)) {\r\n            const result = fn(key, vertex);\r\n            if (result !== undefined) {\r\n                this.removeByKey(sheet, key);\r\n                updated.push(result);\r\n            }\r\n        }\r\n        updated.forEach(entry => {\r\n            this.setRange(entry.vertex);\r\n        });\r\n        return {\r\n            verticesWithChangedSize: updated\r\n                .filter(entry => entry.changedSize)\r\n                .map(entry => entry.vertex)\r\n        };\r\n    }\r\n}\r\nfunction keyFromAddresses(start, end) {\r\n    return `${start.col},${start.row},${end.col},${end.row}`;\r\n}\r\nfunction keyFromRange(range) {\r\n    return keyFromAddresses(range.start, range.end);\r\n}\r\nconst compareBy = (left, right, coordinate) => {\r\n    const leftStart = coordinate(left.range.start);\r\n    const rightStart = coordinate(left.range.start);\r\n    if (leftStart === rightStart) {\r\n        const leftEnd = coordinate(left.range.end);\r\n        const rightEnd = coordinate(right.range.end);\r\n        return leftEnd - rightEnd;\r\n    }\r\n    else {\r\n        return leftStart - rightStart;\r\n    }\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { NoSheetWithIdError, NoSheetWithNameError, SheetNameAlreadyTakenError } from '../errors';\r\nimport { UIElement } from '../i18n';\r\nfunction canonicalize(sheetDisplayName) {\r\n    return sheetDisplayName.toLowerCase();\r\n}\r\nclass Sheet {\r\n    constructor(id, displayName) {\r\n        this.id = id;\r\n        this.displayName = displayName;\r\n    }\r\n    get canonicalName() {\r\n        return canonicalize(this.displayName);\r\n    }\r\n}\r\nexport class SheetMapping {\r\n    constructor(languages) {\r\n        this.languages = languages;\r\n        this.mappingFromCanonicalName = new Map();\r\n        this.mappingFromId = new Map();\r\n        this.lastSheetId = -1;\r\n        this.fetch = (sheetName) => {\r\n            const sheet = this.mappingFromCanonicalName.get(canonicalize(sheetName));\r\n            if (sheet === undefined) {\r\n                throw new NoSheetWithNameError(sheetName);\r\n            }\r\n            return sheet.id;\r\n        };\r\n        this.get = (sheetName) => {\r\n            var _a;\r\n            return (_a = this.mappingFromCanonicalName.get(canonicalize(sheetName))) === null || _a === void 0 ? void 0 : _a.id;\r\n        };\r\n        this.fetchDisplayName = (sheetId) => {\r\n            return this.fetchSheetById(sheetId).displayName;\r\n        };\r\n        this.sheetNamePrefix = languages.getUITranslation(UIElement.NEW_SHEET_PREFIX);\r\n    }\r\n    addSheet(newSheetDisplayName = `${this.sheetNamePrefix}${this.lastSheetId + 2}`) {\r\n        const newSheetCanonicalName = canonicalize(newSheetDisplayName);\r\n        if (this.mappingFromCanonicalName.has(newSheetCanonicalName)) {\r\n            throw new SheetNameAlreadyTakenError(newSheetDisplayName);\r\n        }\r\n        this.lastSheetId++;\r\n        const sheet = new Sheet(this.lastSheetId, newSheetDisplayName);\r\n        this.store(sheet);\r\n        return sheet.id;\r\n    }\r\n    removeSheet(sheetId) {\r\n        const sheet = this.fetchSheetById(sheetId);\r\n        if (sheetId == this.lastSheetId) {\r\n            --this.lastSheetId;\r\n        }\r\n        this.mappingFromCanonicalName.delete(sheet.canonicalName);\r\n        this.mappingFromId.delete(sheet.id);\r\n    }\r\n    getDisplayName(sheetId) {\r\n        var _a;\r\n        return (_a = this.mappingFromId.get(sheetId)) === null || _a === void 0 ? void 0 : _a.displayName;\r\n    }\r\n    *displayNames() {\r\n        for (const sheet of this.mappingFromCanonicalName.values()) {\r\n            yield sheet.displayName;\r\n        }\r\n    }\r\n    numberOfSheets() {\r\n        return this.mappingFromCanonicalName.size;\r\n    }\r\n    hasSheetWithId(sheetId) {\r\n        return this.mappingFromId.has(sheetId);\r\n    }\r\n    hasSheetWithName(sheetName) {\r\n        return this.mappingFromCanonicalName.has(canonicalize(sheetName));\r\n    }\r\n    renameSheet(sheetId, newDisplayName) {\r\n        const sheet = this.fetchSheetById(sheetId);\r\n        const currentDisplayName = sheet.displayName;\r\n        if (currentDisplayName === newDisplayName) {\r\n            return undefined;\r\n        }\r\n        const sheetWithThisCanonicalName = this.mappingFromCanonicalName.get(canonicalize(newDisplayName));\r\n        if (sheetWithThisCanonicalName !== undefined && sheetWithThisCanonicalName.id !== sheet.id) {\r\n            throw new SheetNameAlreadyTakenError(newDisplayName);\r\n        }\r\n        const currentCanonicalName = sheet.canonicalName;\r\n        this.mappingFromCanonicalName.delete(currentCanonicalName);\r\n        sheet.displayName = newDisplayName;\r\n        this.store(sheet);\r\n        return currentDisplayName;\r\n    }\r\n    sheetNames() {\r\n        return Array.from(this.mappingFromId.values()).map((s) => s.displayName);\r\n    }\r\n    store(sheet) {\r\n        this.mappingFromId.set(sheet.id, sheet);\r\n        this.mappingFromCanonicalName.set(sheet.canonicalName, sheet);\r\n    }\r\n    fetchSheetById(sheetId) {\r\n        const sheet = this.mappingFromId.get(sheetId);\r\n        if (sheet === undefined) {\r\n            throw new NoSheetWithIdError(sheetId);\r\n        }\r\n        return sheet;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { buildTranslationPackage, TranslationPackage } from './TranslationPackage';\r\nexport { TranslationPackage, buildTranslationPackage };\r\nexport var UIElement;\r\n(function (UIElement) {\r\n    UIElement[\"NEW_SHEET_PREFIX\"] = \"NEW_SHEET_PREFIX\";\r\n})(UIElement || (UIElement = {}));\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ErrorType } from '../Cell';\r\nimport { MissingTranslationError, ProtectedFunctionTranslationError } from '../errors';\r\nimport { UIElement } from './index';\r\nexport class TranslationPackage {\r\n    constructor(functions, errors, ui) {\r\n        this.functions = functions;\r\n        this.errors = errors;\r\n        this.ui = ui;\r\n        this._protectedTranslations = {\r\n            'VERSION': 'VERSION'\r\n        };\r\n        this.checkUI();\r\n        this.checkErrors();\r\n        this.checkFunctionTranslations(this.functions);\r\n        Object.assign(this.functions, this._protectedTranslations);\r\n    }\r\n    extendFunctions(additionalFunctionTranslations) {\r\n        this.checkFunctionTranslations(additionalFunctionTranslations);\r\n        Object.assign(this.functions, additionalFunctionTranslations);\r\n    }\r\n    buildFunctionMapping() {\r\n        return Object.keys(this.functions).reduce((ret, key) => {\r\n            ret[this.functions[key]] = key;\r\n            return ret;\r\n        }, {});\r\n    }\r\n    buildErrorMapping() {\r\n        return Object.keys(this.errors).reduce((ret, key) => {\r\n            ret[this.errors[key]] = key;\r\n            return ret;\r\n        }, {});\r\n    }\r\n    isFunctionTranslated(key) {\r\n        return this.functions[key] !== undefined;\r\n    }\r\n    getFunctionTranslations(functionIds) {\r\n        const translations = [];\r\n        for (const functionId of functionIds) {\r\n            if (this.isFunctionTranslated(functionId)) {\r\n                translations.push(this.functions[functionId]);\r\n            }\r\n        }\r\n        return translations;\r\n    }\r\n    getFunctionTranslation(key) {\r\n        const val = this.functions[key];\r\n        if (val === undefined) {\r\n            throw new MissingTranslationError(`functions.${key}`);\r\n        }\r\n        else {\r\n            return val;\r\n        }\r\n    }\r\n    getMaybeFunctionTranslation(key) {\r\n        return this.functions[key];\r\n    }\r\n    getErrorTranslation(key) {\r\n        if (key === ErrorType.LIC) {\r\n            return `#${ErrorType.LIC}!`;\r\n        }\r\n        const val = this.errors[key];\r\n        if (val === undefined) {\r\n            throw new MissingTranslationError(`errors.${key}`);\r\n        }\r\n        else {\r\n            return val;\r\n        }\r\n    }\r\n    getUITranslation(key) {\r\n        const val = this.ui[key];\r\n        if (val === undefined) {\r\n            throw new MissingTranslationError(`ui.${key}`);\r\n        }\r\n        else {\r\n            return val;\r\n        }\r\n    }\r\n    checkUI() {\r\n        for (const key of Object.values(UIElement)) {\r\n            if (!(key in this.ui)) {\r\n                throw new MissingTranslationError(`ui.${key}`);\r\n            }\r\n        }\r\n    }\r\n    checkErrors() {\r\n        for (const key of Object.values(ErrorType)) {\r\n            if (!(key in this.errors) && (key !== ErrorType.LIC)) {\r\n                throw new MissingTranslationError(`errors.${key}`);\r\n            }\r\n        }\r\n    }\r\n    checkFunctionTranslations(functions) {\r\n        const functionNames = new Set(Object.getOwnPropertyNames(functions));\r\n        for (const protectedTranslation of Object.getOwnPropertyNames(this._protectedTranslations)) {\r\n            if (functionNames.has(protectedTranslation)) {\r\n                throw new ProtectedFunctionTranslationError(protectedTranslation);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function buildTranslationPackage(rawTranslationPackage) {\r\n    return new TranslationPackage(Object.assign({}, rawTranslationPackage.functions), Object.assign({}, rawTranslationPackage.errors), Object.assign({}, rawTranslationPackage.ui));\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { EmptyValue } from '../interpreter/InterpreterValue';\r\n/**\r\n * Represents singleton vertex bound to all empty cells\r\n */\r\nexport class EmptyCellVertex {\r\n    constructor(address //might be outdated!\r\n    ) {\r\n        this.address = address;\r\n    }\r\n    /**\r\n     * Retrieves cell value bound to that singleton\r\n     */\r\n    getCellValue() {\r\n        return EmptyValue;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\n/**\r\n * Represents vertex which keeps static cell value\r\n */\r\nexport class ValueCellVertex {\r\n    /** Static cell value. */\r\n    constructor(parsedValue, rawValue) {\r\n        this.parsedValue = parsedValue;\r\n        this.rawValue = rawValue;\r\n    }\r\n    getValues() {\r\n        return { parsedValue: this.parsedValue, rawValue: this.rawValue };\r\n    }\r\n    setValues(values) {\r\n        this.parsedValue = values.parsedValue;\r\n        this.rawValue = values.rawValue;\r\n    }\r\n    /**\r\n     * Returns cell value stored in vertex\r\n     */\r\n    getCellValue() {\r\n        return this.parsedValue;\r\n    }\r\n    setCellValue(_cellValue) {\r\n        throw 'SetCellValue is deprecated for ValueCellVertex';\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError } from '../Cell';\r\nexport class ParsingErrorVertex {\r\n    constructor(errors, rawInput) {\r\n        this.errors = errors;\r\n        this.rawInput = rawInput;\r\n    }\r\n    getCellValue() {\r\n        return CellError.parsingError();\r\n    }\r\n    getFormula() {\r\n        return this.rawInput;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { simpleCellAddress } from '../../Cell';\r\n/**\r\n * Mapping from cell addresses to vertices\r\n *\r\n * Uses Map to store addresses, having minimal memory usage for sparse sheets but not necessarily constant set/lookup.\r\n */\r\nexport class SparseStrategy {\r\n    constructor(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n        /**\r\n         * Map of Maps in which actual data is stored.\r\n         *\r\n         * Key of map in first level is column number.\r\n         * Key of map in second level is row number.\r\n         */\r\n        this.mapping = new Map();\r\n    }\r\n    /** @inheritDoc */\r\n    getCell(address) {\r\n        var _a;\r\n        return (_a = this.mapping.get(address.col)) === null || _a === void 0 ? void 0 : _a.get(address.row);\r\n    }\r\n    /** @inheritDoc */\r\n    setCell(address, newVertex) {\r\n        this.width = Math.max(this.width, address.col + 1);\r\n        this.height = Math.max(this.height, address.row + 1);\r\n        let colMapping = this.mapping.get(address.col);\r\n        if (!colMapping) {\r\n            colMapping = new Map();\r\n            this.mapping.set(address.col, colMapping);\r\n        }\r\n        colMapping.set(address.row, newVertex);\r\n    }\r\n    /** @inheritDoc */\r\n    has(address) {\r\n        var _a;\r\n        return !!((_a = this.mapping.get(address.col)) === null || _a === void 0 ? void 0 : _a.get(address.row));\r\n    }\r\n    /** @inheritDoc */\r\n    getHeight() {\r\n        return this.height;\r\n    }\r\n    /** @inheritDoc */\r\n    getWidth() {\r\n        return this.width;\r\n    }\r\n    removeCell(address) {\r\n        var _a;\r\n        (_a = this.mapping.get(address.col)) === null || _a === void 0 ? void 0 : _a.delete(address.row);\r\n    }\r\n    addRows(row, numberOfRows) {\r\n        this.mapping.forEach((rowMapping) => {\r\n            const tmpMapping = new Map();\r\n            rowMapping.forEach((vertex, rowNumber) => {\r\n                if (rowNumber >= row) {\r\n                    tmpMapping.set(rowNumber + numberOfRows, vertex);\r\n                    rowMapping.delete(rowNumber);\r\n                }\r\n            });\r\n            tmpMapping.forEach((vertex, rowNumber) => {\r\n                rowMapping.set(rowNumber, vertex);\r\n            });\r\n        });\r\n        this.height += numberOfRows;\r\n    }\r\n    addColumns(column, numberOfColumns) {\r\n        const tmpMapping = new Map();\r\n        this.mapping.forEach((rowMapping, colNumber) => {\r\n            if (colNumber >= column) {\r\n                tmpMapping.set(colNumber + numberOfColumns, rowMapping);\r\n                this.mapping.delete(colNumber);\r\n            }\r\n        });\r\n        tmpMapping.forEach((rowMapping, colNumber) => {\r\n            this.mapping.set(colNumber, rowMapping);\r\n        });\r\n        this.width += numberOfColumns;\r\n    }\r\n    removeRows(removedRows) {\r\n        this.mapping.forEach((rowMapping) => {\r\n            const tmpMapping = new Map();\r\n            rowMapping.forEach((vertex, rowNumber) => {\r\n                if (rowNumber >= removedRows.rowStart) {\r\n                    rowMapping.delete(rowNumber);\r\n                    if (rowNumber > removedRows.rowEnd) {\r\n                        tmpMapping.set(rowNumber - removedRows.numberOfRows, vertex);\r\n                    }\r\n                }\r\n            });\r\n            tmpMapping.forEach((vertex, rowNumber) => {\r\n                rowMapping.set(rowNumber, vertex);\r\n            });\r\n        });\r\n        const rightmostRowRemoved = Math.min(this.height - 1, removedRows.rowEnd);\r\n        const numberOfRowsRemoved = Math.max(0, rightmostRowRemoved - removedRows.rowStart + 1);\r\n        this.height = Math.max(0, this.height - numberOfRowsRemoved);\r\n    }\r\n    removeColumns(removedColumns) {\r\n        const tmpMapping = new Map();\r\n        this.mapping.forEach((rowMapping, colNumber) => {\r\n            if (colNumber >= removedColumns.columnStart) {\r\n                this.mapping.delete(colNumber);\r\n                if (colNumber > removedColumns.columnEnd) {\r\n                    tmpMapping.set(colNumber - removedColumns.numberOfColumns, rowMapping);\r\n                }\r\n            }\r\n        });\r\n        tmpMapping.forEach((rowMapping, colNumber) => {\r\n            this.mapping.set(colNumber, rowMapping);\r\n        });\r\n        const rightmostColumnRemoved = Math.min(this.width - 1, removedColumns.columnEnd);\r\n        const numberOfColumnsRemoved = Math.max(0, rightmostColumnRemoved - removedColumns.columnStart + 1);\r\n        this.width = Math.max(0, this.width - numberOfColumnsRemoved);\r\n    }\r\n    *getEntries(sheet) {\r\n        for (const [colNumber, col] of this.mapping) {\r\n            for (const [rowNumber, value] of col) {\r\n                yield [simpleCellAddress(sheet, colNumber, rowNumber), value];\r\n            }\r\n        }\r\n    }\r\n    *verticesFromColumn(column) {\r\n        const colMapping = this.mapping.get(column);\r\n        if (colMapping === undefined) {\r\n            return;\r\n        }\r\n        for (const [_, vertex] of colMapping) {\r\n            yield vertex;\r\n        }\r\n    }\r\n    *verticesFromRow(row) {\r\n        for (const colMapping of this.mapping.values()) {\r\n            const rowVertex = colMapping.get(row);\r\n            if (rowVertex !== undefined) {\r\n                yield rowVertex;\r\n            }\r\n        }\r\n    }\r\n    *verticesFromColumnsSpan(columnsSpan) {\r\n        for (const column of columnsSpan.columns()) {\r\n            const colMapping = this.mapping.get(column);\r\n            if (colMapping === undefined) {\r\n                continue;\r\n            }\r\n            for (const [_, vertex] of colMapping) {\r\n                yield vertex;\r\n            }\r\n        }\r\n    }\r\n    *verticesFromRowsSpan(rowsSpan) {\r\n        for (const colMapping of this.mapping.values()) {\r\n            for (const row of rowsSpan.rows()) {\r\n                const rowVertex = colMapping.get(row);\r\n                if (rowVertex !== undefined) {\r\n                    yield rowVertex;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    *entriesFromRowsSpan(rowsSpan) {\r\n        for (const [col, colMapping] of this.mapping.entries()) {\r\n            for (const row of rowsSpan.rows()) {\r\n                const rowVertex = colMapping.get(row);\r\n                if (rowVertex !== undefined) {\r\n                    yield [simpleCellAddress(rowsSpan.sheet, col, row), rowVertex];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    *entriesFromColumnsSpan(columnsSpan) {\r\n        for (const col of columnsSpan.columns()) {\r\n            const colMapping = this.mapping.get(col);\r\n            if (colMapping !== undefined) {\r\n                for (const [row, vertex] of colMapping.entries()) {\r\n                    yield [simpleCellAddress(columnsSpan.sheet, col, row), vertex];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    *vertices() {\r\n        for (const [_, col] of this.mapping) {\r\n            for (const [_, value] of col) {\r\n                if (value !== undefined) {\r\n                    yield value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { simpleCellAddress } from '../../Cell';\r\n/**\r\n * Mapping from cell addresses to vertices\r\n *\r\n * Uses Array to store addresses, having minimal memory usage for dense sheets and constant set/lookup.\r\n */\r\nexport class DenseStrategy {\r\n    /**\r\n     * @param width - width of the stored sheet\r\n     * @param height - height of the stored sheet\r\n     */\r\n    constructor(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.mapping = new Array(height);\r\n        for (let i = 0; i < height; i++) {\r\n            this.mapping[i] = new Array(width);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    getCell(address) {\r\n        return this.getCellVertex(address.col, address.row);\r\n    }\r\n    /** @inheritDoc */\r\n    setCell(address, newVertex) {\r\n        this.width = Math.max(this.width, address.col + 1);\r\n        this.height = Math.max(this.height, address.row + 1);\r\n        const rowMapping = this.mapping[address.row];\r\n        if (!rowMapping) {\r\n            this.mapping[address.row] = new Array(this.width);\r\n        }\r\n        this.mapping[address.row][address.col] = newVertex;\r\n    }\r\n    /** @inheritDoc */\r\n    has(address) {\r\n        const row = this.mapping[address.row];\r\n        if (!row) {\r\n            return false;\r\n        }\r\n        return !!row[address.col];\r\n    }\r\n    /** @inheritDoc */\r\n    getHeight() {\r\n        return this.height;\r\n    }\r\n    /** @inheritDoc */\r\n    getWidth() {\r\n        return this.width;\r\n    }\r\n    removeCell(address) {\r\n        if (this.mapping[address.row] !== undefined) {\r\n            delete this.mapping[address.row][address.col];\r\n        }\r\n    }\r\n    addRows(row, numberOfRows) {\r\n        const newRows = [];\r\n        for (let i = 0; i < numberOfRows; i++) {\r\n            newRows.push(new Array(this.width));\r\n        }\r\n        this.mapping.splice(row, 0, ...newRows);\r\n        this.height += numberOfRows;\r\n    }\r\n    addColumns(column, numberOfColumns) {\r\n        for (let i = 0; i < this.height; i++) {\r\n            this.mapping[i].splice(column, 0, ...new Array(numberOfColumns));\r\n        }\r\n        this.width += numberOfColumns;\r\n    }\r\n    removeRows(removedRows) {\r\n        this.mapping.splice(removedRows.rowStart, removedRows.numberOfRows);\r\n        const rightmostRowRemoved = Math.min(this.height - 1, removedRows.rowEnd);\r\n        const numberOfRowsRemoved = Math.max(0, rightmostRowRemoved - removedRows.rowStart + 1);\r\n        this.height = Math.max(0, this.height - numberOfRowsRemoved);\r\n    }\r\n    removeColumns(removedColumns) {\r\n        for (let i = 0; i < this.height; i++) {\r\n            this.mapping[i].splice(removedColumns.columnStart, removedColumns.numberOfColumns);\r\n        }\r\n        const rightmostColumnRemoved = Math.min(this.width - 1, removedColumns.columnEnd);\r\n        const numberOfColumnsRemoved = Math.max(0, rightmostColumnRemoved - removedColumns.columnStart + 1);\r\n        this.width = Math.max(0, this.width - numberOfColumnsRemoved);\r\n    }\r\n    *getEntries(sheet) {\r\n        for (let y = 0; y < this.height; ++y) {\r\n            for (let x = 0; x < this.width; ++x) {\r\n                const vertex = this.getCellVertex(x, y);\r\n                if (vertex) {\r\n                    yield [simpleCellAddress(sheet, x, y), vertex];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    *verticesFromColumn(column) {\r\n        for (let y = 0; y < this.height; ++y) {\r\n            const vertex = this.getCellVertex(column, y);\r\n            if (vertex) {\r\n                yield vertex;\r\n            }\r\n        }\r\n    }\r\n    *verticesFromRow(row) {\r\n        for (let x = 0; x < this.width; ++x) {\r\n            const vertex = this.getCellVertex(x, row);\r\n            if (vertex) {\r\n                yield vertex;\r\n            }\r\n        }\r\n    }\r\n    *verticesFromColumnsSpan(columnsSpan) {\r\n        for (let x = columnsSpan.columnStart; x <= columnsSpan.columnEnd; ++x) {\r\n            for (let y = 0; y < this.height; ++y) {\r\n                const vertex = this.getCellVertex(x, y);\r\n                if (vertex) {\r\n                    yield vertex;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    *verticesFromRowsSpan(rowsSpan) {\r\n        for (let x = 0; x < this.width; ++x) {\r\n            for (let y = rowsSpan.rowStart; y <= rowsSpan.rowEnd; ++y) {\r\n                const vertex = this.getCellVertex(x, y);\r\n                if (vertex) {\r\n                    yield vertex;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    *entriesFromRowsSpan(rowsSpan) {\r\n        for (let x = 0; x < this.width; ++x) {\r\n            for (let y = rowsSpan.rowStart; y <= rowsSpan.rowEnd; ++y) {\r\n                const vertex = this.getCellVertex(x, y);\r\n                if (vertex) {\r\n                    yield [simpleCellAddress(rowsSpan.sheet, x, y), vertex];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    *entriesFromColumnsSpan(columnsSpan) {\r\n        for (let y = 0; y < this.height; ++y) {\r\n            for (let x = columnsSpan.columnStart; x <= columnsSpan.columnEnd; ++x) {\r\n                const vertex = this.getCellVertex(x, y);\r\n                if (vertex) {\r\n                    yield [simpleCellAddress(columnsSpan.sheet, x, y), vertex];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    *vertices() {\r\n        for (let y = 0; y < this.height; ++y) {\r\n            for (let x = 0; x < this.width; ++x) {\r\n                const vertex = this.getCellVertex(x, y);\r\n                if (vertex) {\r\n                    yield vertex;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getCellVertex(x, y) {\r\n        var _a;\r\n        return (_a = this.mapping[y]) === null || _a === void 0 ? void 0 : _a[x];\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport class DetailedCellError {\r\n    constructor(error, value, address) {\r\n        var _a;\r\n        this.value = value;\r\n        this.address = address;\r\n        this.type = error.type;\r\n        this.message = (_a = error.message) !== null && _a !== void 0 ? _a : '';\r\n    }\r\n    toString() {\r\n        return this.value;\r\n    }\r\n    valueOf() {\r\n        return this.value;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { configCheckIfParametersNotInConflict, configValueFromParam, configValueFromParamCheck, validateNumberToBeAtLeast, validateNumberToBeAtMost } from './ArgumentSanitization';\r\nimport { defaultParseToDateTime } from './DateTimeDefault';\r\nimport { instanceOfSimpleDate } from './DateTimeHelper';\r\nimport { AlwaysDense } from './DependencyGraph/AddressMapping/ChooseAddressMappingPolicy';\r\nimport { ConfigValueEmpty, ExpectedValueOfTypeError } from './errors';\r\nimport { defaultStringifyDateTime, defaultStringifyDuration } from './format/format';\r\nimport { checkLicenseKeyValidity } from './helpers/licenseKeyValidator';\r\nimport { HyperFormula } from './HyperFormula';\r\nconst privatePool = new WeakMap();\r\nexport class Config {\r\n    constructor(options = {}, showDeprecatedWarns = true) {\r\n        const { accentSensitive, binarySearchThreshold, caseSensitive, caseFirst, chooseAddressMappingPolicy, currencySymbol, dateFormats, decimalSeparator, evaluateNullToZero, functionArgSeparator, functionPlugins, ignorePunctuation, leapYear1900, localeLang, language, ignoreWhiteSpace, licenseKey, matchWholeCell, arrayColumnSeparator, arrayRowSeparator, maxRows, maxColumns, nullYear, nullDate, parseDateTime, precisionEpsilon, precisionRounding, stringifyDateTime, stringifyDuration, smartRounding, timeFormats, thousandSeparator, useArrayArithmetic, useStats, undoLimit, useColumnIndex, useRegularExpressions, useWildcards, } = options;\r\n        if (showDeprecatedWarns) {\r\n            Config.warnDeprecatedOptions(options);\r\n        }\r\n        this.useArrayArithmetic = configValueFromParam(useArrayArithmetic, 'boolean', 'useArrayArithmetic');\r\n        this.accentSensitive = configValueFromParam(accentSensitive, 'boolean', 'accentSensitive');\r\n        this.caseSensitive = configValueFromParam(caseSensitive, 'boolean', 'caseSensitive');\r\n        this.caseFirst = configValueFromParam(caseFirst, ['upper', 'lower', 'false'], 'caseFirst');\r\n        this.ignorePunctuation = configValueFromParam(ignorePunctuation, 'boolean', 'ignorePunctuation');\r\n        this.chooseAddressMappingPolicy = chooseAddressMappingPolicy !== null && chooseAddressMappingPolicy !== void 0 ? chooseAddressMappingPolicy : Config.defaultConfig.chooseAddressMappingPolicy;\r\n        this.dateFormats = [...configValueFromParamCheck(dateFormats, Array.isArray, 'array', 'dateFormats')];\r\n        this.timeFormats = [...configValueFromParamCheck(timeFormats, Array.isArray, 'array', 'timeFormats')];\r\n        this.functionArgSeparator = configValueFromParam(functionArgSeparator, 'string', 'functionArgSeparator');\r\n        this.decimalSeparator = configValueFromParam(decimalSeparator, ['.', ','], 'decimalSeparator');\r\n        this.language = configValueFromParam(language, 'string', 'language');\r\n        this.ignoreWhiteSpace = configValueFromParam(ignoreWhiteSpace, ['standard', 'any'], 'ignoreWhiteSpace');\r\n        this.licenseKey = configValueFromParam(licenseKey, 'string', 'licenseKey');\r\n        this.thousandSeparator = configValueFromParam(thousandSeparator, ['', ',', ' ', '.'], 'thousandSeparator');\r\n        this.arrayColumnSeparator = configValueFromParam(arrayColumnSeparator, [',', ';'], 'arrayColumnSeparator');\r\n        this.arrayRowSeparator = configValueFromParam(arrayRowSeparator, [';', '|'], 'arrayRowSeparator');\r\n        this.localeLang = configValueFromParam(localeLang, 'string', 'localeLang');\r\n        this.functionPlugins = [...(functionPlugins !== null && functionPlugins !== void 0 ? functionPlugins : Config.defaultConfig.functionPlugins)];\r\n        this.smartRounding = configValueFromParam(smartRounding, 'boolean', 'smartRounding');\r\n        this.evaluateNullToZero = configValueFromParam(evaluateNullToZero, 'boolean', 'evaluateNullToZero');\r\n        this.nullYear = configValueFromParam(nullYear, 'number', 'nullYear');\r\n        validateNumberToBeAtLeast(this.nullYear, 'nullYear', 0);\r\n        validateNumberToBeAtMost(this.nullYear, 'nullYear', 100);\r\n        this.precisionRounding = configValueFromParam(precisionRounding, 'number', 'precisionRounding');\r\n        validateNumberToBeAtLeast(this.precisionRounding, 'precisionRounding', 0);\r\n        this.precisionEpsilon = configValueFromParam(precisionEpsilon, 'number', 'precisionEpsilon');\r\n        validateNumberToBeAtLeast(this.precisionEpsilon, 'precisionEpsilon', 0);\r\n        this.useColumnIndex = configValueFromParam(useColumnIndex, 'boolean', 'useColumnIndex');\r\n        this.useStats = configValueFromParam(useStats, 'boolean', 'useStats');\r\n        this.binarySearchThreshold = binarySearchThreshold !== null && binarySearchThreshold !== void 0 ? binarySearchThreshold : Config.defaultConfig.binarySearchThreshold;\r\n        this.parseDateTime = configValueFromParam(parseDateTime, 'function', 'parseDateTime');\r\n        this.stringifyDateTime = configValueFromParam(stringifyDateTime, 'function', 'stringifyDateTime');\r\n        this.stringifyDuration = configValueFromParam(stringifyDuration, 'function', 'stringifyDuration');\r\n        this.translationPackage = HyperFormula.getLanguage(this.language);\r\n        this.errorMapping = this.translationPackage.buildErrorMapping();\r\n        this.nullDate = configValueFromParamCheck(nullDate, instanceOfSimpleDate, 'IDate', 'nullDate');\r\n        this.leapYear1900 = configValueFromParam(leapYear1900, 'boolean', 'leapYear1900');\r\n        this.undoLimit = configValueFromParam(undoLimit, 'number', 'undoLimit');\r\n        this.useRegularExpressions = configValueFromParam(useRegularExpressions, 'boolean', 'useRegularExpressions');\r\n        this.useWildcards = configValueFromParam(useWildcards, 'boolean', 'useWildcards');\r\n        this.matchWholeCell = configValueFromParam(matchWholeCell, 'boolean', 'matchWholeCell');\r\n        validateNumberToBeAtLeast(this.undoLimit, 'undoLimit', 0);\r\n        this.maxRows = configValueFromParam(maxRows, 'number', 'maxRows');\r\n        validateNumberToBeAtLeast(this.maxRows, 'maxRows', 1);\r\n        this.maxColumns = configValueFromParam(maxColumns, 'number', 'maxColumns');\r\n        this.currencySymbol = this.setupCurrencySymbol(currencySymbol);\r\n        validateNumberToBeAtLeast(this.maxColumns, 'maxColumns', 1);\r\n        privatePool.set(this, {\r\n            licenseKeyValidityState: checkLicenseKeyValidity(this.licenseKey)\r\n        });\r\n        configCheckIfParametersNotInConflict({ value: this.decimalSeparator, name: 'decimalSeparator' }, { value: this.functionArgSeparator, name: 'functionArgSeparator' }, { value: this.thousandSeparator, name: 'thousandSeparator' });\r\n        configCheckIfParametersNotInConflict({ value: this.arrayRowSeparator, name: 'arrayRowSeparator' }, { value: this.arrayColumnSeparator, name: 'arrayColumnSeparator' });\r\n    }\r\n    setupCurrencySymbol(currencySymbol) {\r\n        const valueAfterCheck = [...configValueFromParamCheck(currencySymbol, Array.isArray, 'array', 'currencySymbol')];\r\n        valueAfterCheck.forEach((val) => {\r\n            if (typeof val !== 'string') {\r\n                throw new ExpectedValueOfTypeError('string[]', 'currencySymbol');\r\n            }\r\n            if (val === '') {\r\n                throw new ConfigValueEmpty('currencySymbol');\r\n            }\r\n        });\r\n        return valueAfterCheck;\r\n    }\r\n    /**\r\n     * Proxied property to its private counterpart. This makes the property\r\n     * as accessible as the other Config options but without ability to change the value.\r\n     *\r\n     * @internal\r\n     */\r\n    get licenseKeyValidityState() {\r\n        return privatePool.get(this).licenseKeyValidityState;\r\n    }\r\n    getConfig() {\r\n        return getFullConfigFromPartial(this);\r\n    }\r\n    mergeConfig(init) {\r\n        const mergedConfig = Object.assign({}, this.getConfig(), init);\r\n        Config.warnDeprecatedOptions(init);\r\n        return new Config(mergedConfig, false);\r\n    }\r\n    static warnDeprecatedOptions(options) {\r\n        Config.warnDeprecatedIfUsed(options.binarySearchThreshold, 'binarySearchThreshold', '1.1');\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    static warnDeprecatedIfUsed(inputValue, paramName, fromVersion, replacementName) {\r\n        if (inputValue !== undefined) {\r\n            if (replacementName === undefined) {\r\n                console.warn(`${paramName} option is deprecated since ${fromVersion}`);\r\n            }\r\n            else {\r\n                console.warn(`${paramName} option is deprecated since ${fromVersion}, please use ${replacementName}`);\r\n            }\r\n        }\r\n    }\r\n}\r\nConfig.defaultConfig = {\r\n    accentSensitive: false,\r\n    binarySearchThreshold: 20,\r\n    currencySymbol: ['$'],\r\n    caseSensitive: false,\r\n    caseFirst: 'lower',\r\n    chooseAddressMappingPolicy: new AlwaysDense(),\r\n    dateFormats: ['DD/MM/YYYY', 'DD/MM/YY'],\r\n    decimalSeparator: '.',\r\n    evaluateNullToZero: false,\r\n    functionArgSeparator: ',',\r\n    functionPlugins: [],\r\n    ignorePunctuation: false,\r\n    language: 'enGB',\r\n    ignoreWhiteSpace: 'standard',\r\n    licenseKey: '',\r\n    leapYear1900: false,\r\n    localeLang: 'en',\r\n    matchWholeCell: true,\r\n    arrayColumnSeparator: ',',\r\n    arrayRowSeparator: ';',\r\n    maxRows: 40000,\r\n    maxColumns: 18278,\r\n    nullYear: 30,\r\n    nullDate: { year: 1899, month: 12, day: 30 },\r\n    parseDateTime: defaultParseToDateTime,\r\n    precisionEpsilon: 1e-13,\r\n    precisionRounding: 14,\r\n    smartRounding: true,\r\n    stringifyDateTime: defaultStringifyDateTime,\r\n    stringifyDuration: defaultStringifyDuration,\r\n    timeFormats: ['hh:mm', 'hh:mm:ss.sss'],\r\n    thousandSeparator: '',\r\n    undoLimit: 20,\r\n    useRegularExpressions: false,\r\n    useWildcards: true,\r\n    useColumnIndex: false,\r\n    useStats: false,\r\n    useArrayArithmetic: false,\r\n};\r\nfunction getFullConfigFromPartial(partialConfig) {\r\n    var _a;\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const ret = {};\r\n    for (const key in Config.defaultConfig) {\r\n        const val = (_a = partialConfig[key]) !== null && _a !== void 0 ? _a : Config.defaultConfig[key];\r\n        if (Array.isArray(val)) {\r\n            ret[key] = [...val];\r\n        }\r\n        else {\r\n            ret[key] = val;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nexport function getDefaultConfig() {\r\n    return getFullConfigFromPartial({});\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { Config } from './Config';\r\nimport { ConfigValueTooBigError, ConfigValueTooSmallError, ExpectedOneOfValuesError, ExpectedValueOfTypeError } from './errors';\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport function configValueFromParam(inputValue, expectedType, paramName) {\r\n    if (typeof inputValue === 'undefined') {\r\n        return Config.defaultConfig[paramName];\r\n    }\r\n    else if (typeof expectedType === 'string') {\r\n        if (typeof inputValue === expectedType) {\r\n            return inputValue;\r\n        }\r\n        else {\r\n            throw new ExpectedValueOfTypeError(expectedType, paramName);\r\n        }\r\n    }\r\n    else {\r\n        if (expectedType.includes(inputValue)) {\r\n            return inputValue;\r\n        }\r\n        else {\r\n            throw new ExpectedOneOfValuesError(expectedType.map((val) => `'${val}'`).join(' '), paramName);\r\n        }\r\n    }\r\n}\r\nexport function validateNumberToBeAtLeast(value, paramName, minimum) {\r\n    if (value < minimum) {\r\n        throw new ConfigValueTooSmallError(paramName, minimum);\r\n    }\r\n}\r\nexport function validateNumberToBeAtMost(value, paramName, maximum) {\r\n    if (value > maximum) {\r\n        throw new ConfigValueTooBigError(paramName, maximum);\r\n    }\r\n}\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport function configValueFromParamCheck(inputValue, typeCheck, expectedType, paramName) {\r\n    if (typeCheck(inputValue)) {\r\n        return inputValue;\r\n    }\r\n    else if (typeof inputValue === 'undefined') {\r\n        return Config.defaultConfig[paramName];\r\n    }\r\n    else {\r\n        throw new ExpectedValueOfTypeError(expectedType, paramName);\r\n    }\r\n}\r\nexport function configCheckIfParametersNotInConflict(...params) {\r\n    const valuesMap = new Map();\r\n    params.forEach((param) => {\r\n        const names = valuesMap.get(param.value) || [];\r\n        names.push(param.name);\r\n        valuesMap.set(param.value, names);\r\n    });\r\n    const duplicates = [];\r\n    for (const entry of valuesMap.values()) {\r\n        if (entry.length > 1) {\r\n            duplicates.push(entry);\r\n        }\r\n    }\r\n    if (duplicates.length > 0) {\r\n        duplicates.forEach(entry => entry.sort());\r\n        const paramNames = duplicates.map(entry => `[${entry}]`).join('; ');\r\n        throw new Error(`Config initialization failed. Parameters in conflict: ${paramNames}`);\r\n    }\r\n}\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport function validateArgToType(inputValue, expectedType, paramName) {\r\n    if (typeof inputValue !== expectedType) {\r\n        throw new ExpectedValueOfTypeError(expectedType, paramName);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport function defaultParseToDateTime(dateTimeString, dateFormat, timeFormat) {\r\n    dateTimeString = dateTimeString.replace(/\\s\\s+/g, ' ').trim().toLowerCase();\r\n    let ampmtoken = dateTimeString.substring(dateTimeString.length - 2);\r\n    if (ampmtoken === 'am' || ampmtoken === 'pm') {\r\n        dateTimeString = dateTimeString.substring(0, dateTimeString.length - 2).trim();\r\n    }\r\n    else {\r\n        ampmtoken = dateTimeString.substring(dateTimeString.length - 1);\r\n        if (ampmtoken === 'a' || ampmtoken === 'p') {\r\n            dateTimeString = dateTimeString.substring(0, dateTimeString.length - 1).trim();\r\n        }\r\n        else {\r\n            ampmtoken = undefined;\r\n        }\r\n    }\r\n    const dateItems = dateTimeString.split(/[ /.-]/g);\r\n    if (dateItems.length >= 2 && dateItems[dateItems.length - 2].includes(':')) {\r\n        dateItems[dateItems.length - 2] = dateItems[dateItems.length - 2] + '.' + dateItems[dateItems.length - 1];\r\n        dateItems.pop();\r\n    }\r\n    const timeItems = dateItems[dateItems.length - 1].split(':');\r\n    if (ampmtoken !== undefined) {\r\n        timeItems.push(ampmtoken);\r\n    }\r\n    if (dateItems.length === 1) {\r\n        return defaultParseToTime(timeItems, timeFormat);\r\n    }\r\n    if (timeItems.length === 1) {\r\n        return defaultParseToDate(dateItems, dateFormat);\r\n    }\r\n    const parsedDate = defaultParseToDate(dateItems.slice(0, dateItems.length - 1), dateFormat);\r\n    const parsedTime = defaultParseToTime(timeItems, timeFormat);\r\n    if (parsedDate === undefined) {\r\n        return undefined;\r\n    }\r\n    else if (parsedTime === undefined) {\r\n        return undefined;\r\n    }\r\n    else {\r\n        return Object.assign(Object.assign({}, parsedDate), parsedTime);\r\n    }\r\n}\r\nexport const secondsExtendedRegexp = /^ss(\\.(s+|0+))?$/;\r\nfunction defaultParseToTime(timeItems, timeFormat) {\r\n    const precision = 1000;\r\n    if (timeFormat === undefined) {\r\n        return undefined;\r\n    }\r\n    timeFormat = timeFormat.toLowerCase();\r\n    if (timeFormat.endsWith('am/pm')) {\r\n        timeFormat = timeFormat.substring(0, timeFormat.length - 5).trim();\r\n    }\r\n    else if (timeFormat.endsWith('a/p')) {\r\n        timeFormat = timeFormat.substring(0, timeFormat.length - 3).trim();\r\n    }\r\n    const formatItems = timeFormat.split(':');\r\n    let ampm = undefined;\r\n    if (timeItems[timeItems.length - 1] === 'am' || timeItems[timeItems.length - 1] === 'a') {\r\n        ampm = false;\r\n        timeItems.pop();\r\n    }\r\n    else if (timeItems[timeItems.length - 1] === 'pm' || timeItems[timeItems.length - 1] === 'p') {\r\n        ampm = true;\r\n        timeItems.pop();\r\n    }\r\n    if (timeItems.length !== formatItems.length) {\r\n        return undefined;\r\n    }\r\n    const hourIndex = formatItems.indexOf('hh');\r\n    const minuteIndex = formatItems.indexOf('mm');\r\n    const secondIndex = formatItems.findIndex(item => secondsExtendedRegexp.test(item));\r\n    const hourString = hourIndex !== -1 ? timeItems[hourIndex] : '0';\r\n    if (!/^\\d+$/.test(hourString)) {\r\n        return undefined;\r\n    }\r\n    let hours = Number(hourString);\r\n    if (ampm !== undefined) {\r\n        if (hours < 0 || hours > 12) {\r\n            return undefined;\r\n        }\r\n        hours = hours % 12;\r\n        if (ampm) {\r\n            hours = hours + 12;\r\n        }\r\n    }\r\n    const minuteString = minuteIndex !== -1 ? timeItems[minuteIndex] : '0';\r\n    if (!/^\\d+$/.test(minuteString)) {\r\n        return undefined;\r\n    }\r\n    const minutes = Number(minuteString);\r\n    const secondString = secondIndex !== -1 ? timeItems[secondIndex] : '0';\r\n    if (!/^\\d+(\\.\\d+)?$/.test(secondString)) {\r\n        return undefined;\r\n    }\r\n    const seconds = Math.round(Number(secondString) * precision) / precision;\r\n    return { hours, minutes, seconds };\r\n}\r\nfunction defaultParseToDate(dateItems, dateFormat) {\r\n    if (dateFormat === undefined) {\r\n        return undefined;\r\n    }\r\n    const formatItems = dateFormat.toLowerCase().split(/[ /.-]/g);\r\n    if (dateItems.length !== formatItems.length) {\r\n        return undefined;\r\n    }\r\n    const monthIndex = formatItems.indexOf('mm');\r\n    const dayIndex = formatItems.indexOf('dd');\r\n    const yearIndexLong = formatItems.indexOf('yyyy');\r\n    const yearIndexShort = formatItems.indexOf('yy');\r\n    if (!(monthIndex in dateItems) || !(dayIndex in dateItems) ||\r\n        (!(yearIndexLong in dateItems) && !(yearIndexShort in dateItems))) {\r\n        return undefined;\r\n    }\r\n    if (yearIndexLong in dateItems && yearIndexShort in dateItems) {\r\n        return undefined;\r\n    }\r\n    let year;\r\n    if (yearIndexLong in dateItems) {\r\n        const yearString = dateItems[yearIndexLong];\r\n        if (/^\\d+$/.test(yearString)) {\r\n            year = Number(yearString);\r\n            if (year < 1000 || year > 9999) {\r\n                return undefined;\r\n            }\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    else {\r\n        const yearString = dateItems[yearIndexShort];\r\n        if (/^\\d+$/.test(yearString)) {\r\n            year = Number(yearString);\r\n            if (year < 0 || year > 99) {\r\n                return undefined;\r\n            }\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    const monthString = dateItems[monthIndex];\r\n    if (!/^\\d+$/.test(monthString)) {\r\n        return undefined;\r\n    }\r\n    const month = Number(monthString);\r\n    const dayString = dateItems[dayIndex];\r\n    if (!/^\\d+$/.test(dayString)) {\r\n        return undefined;\r\n    }\r\n    const day = Number(dayString);\r\n    return { year, month, day };\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { DateNumber, DateTimeNumber, TimeNumber } from './interpreter/InterpreterValue';\r\nconst numDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\nconst prefSumDays = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\nconst SECONDS_PER_MINUTE = 60;\r\nconst MINUTES_PER_HOUR = 60;\r\nconst HOURS_PER_DAY = 24;\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport function instanceOfSimpleDate(obj) {\r\n    if (obj && (typeof obj === 'object' || typeof obj === 'function')) {\r\n        return 'year' in obj && typeof obj.year === 'number' && 'month' in obj && typeof obj.month === 'number' && 'day' in obj && typeof obj.day === 'number';\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport function instanceOfSimpleTime(obj) {\r\n    if (obj && (typeof obj === 'object' || typeof obj === 'function')) {\r\n        return 'hours' in obj && typeof obj.hours === 'number' && 'minutes' in obj && typeof obj.minutes === 'number' && 'seconds' in obj && typeof obj.seconds === 'number';\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nexport const maxDate = { year: 9999, month: 12, day: 31 };\r\nexport class DateTimeHelper {\r\n    constructor(config) {\r\n        this.config = config;\r\n        this.minDateAbsoluteValue = this.dateToNumberFromZero(config.nullDate);\r\n        this.maxDateValue = this.dateToNumber(maxDate);\r\n        this.leapYear1900 = config.leapYear1900;\r\n        // code below fixes epochYearStart while being leapYear1900 sensitive\r\n        // if nullDate is earlier than fateful 28 Feb 1900 and 1900 is not supposed to be leap year, then we should\r\n        // add two days (this is the config default)\r\n        // otherwise only one day\r\n        if (!this.leapYear1900 && 0 <= this.dateToNumber({ year: 1900, month: 2, day: 28 })) {\r\n            this.epochYearZero = this.numberToSimpleDate(2).year;\r\n        }\r\n        else {\r\n            this.epochYearZero = this.numberToSimpleDate(1).year;\r\n        }\r\n        this.parseDateTime = config.parseDateTime;\r\n    }\r\n    getWithinBounds(dayNumber) {\r\n        return (dayNumber <= this.maxDateValue) && (dayNumber >= 0) ? dayNumber : undefined;\r\n    }\r\n    dateStringToDateNumber(dateTimeString) {\r\n        const { dateTime, dateFormat = '', timeFormat = '' } = this.parseDateTimeFromConfigFormats(dateTimeString);\r\n        if (dateTime === undefined) {\r\n            return undefined;\r\n        }\r\n        if (instanceOfSimpleTime(dateTime)) {\r\n            if (instanceOfSimpleDate(dateTime)) {\r\n                return new DateTimeNumber(timeToNumber(dateTime) + this.dateToNumber(dateTime), dateFormat + ' ' + timeFormat);\r\n            }\r\n            else {\r\n                return new TimeNumber(timeToNumber(dateTime), timeFormat);\r\n            }\r\n        }\r\n        else {\r\n            if (instanceOfSimpleDate(dateTime)) {\r\n                return new DateNumber(this.dateToNumber(dateTime), dateFormat);\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        }\r\n    }\r\n    parseDateTimeFromConfigFormats(dateTimeString) {\r\n        return this.parseDateTimeFromFormats(dateTimeString, this.config.dateFormats, this.config.timeFormats);\r\n    }\r\n    getNullYear() {\r\n        return this.config.nullYear;\r\n    }\r\n    getEpochYearZero() {\r\n        return this.epochYearZero;\r\n    }\r\n    isValidDate(date) {\r\n        if (isNaN(date.year) || isNaN(date.month) || isNaN(date.day)) {\r\n            return false;\r\n        }\r\n        else if (date.day !== Math.round(date.day) || date.month !== Math.round(date.month) || date.year !== Math.round(date.year)) {\r\n            return false;\r\n        }\r\n        else if (date.year < 1582) { // Gregorian calendar start\r\n            return false;\r\n        }\r\n        else if (date.month < 1 || date.month > 12) {\r\n            return false;\r\n        }\r\n        else if (date.day < 1) {\r\n            return false;\r\n        }\r\n        else if (this.isLeapYear(date.year) && date.month === 2) {\r\n            return date.day <= 29;\r\n        }\r\n        else {\r\n            return date.day <= numDays[date.month - 1];\r\n        }\r\n    }\r\n    dateToNumber(date) {\r\n        return this.dateToNumberFromZero(date) - this.minDateAbsoluteValue;\r\n    }\r\n    relativeNumberToAbsoluteNumber(arg) {\r\n        return arg + this.minDateAbsoluteValue - (this.leapYear1900 ? 1 : 0);\r\n    }\r\n    numberToSimpleDate(arg) {\r\n        const dateNumber = Math.floor(arg) + this.minDateAbsoluteValue;\r\n        let year = Math.floor(dateNumber / 365.2425);\r\n        if (this.dateToNumberFromZero({ year: year + 1, month: 1, day: 1 }) <= dateNumber) {\r\n            year++;\r\n        }\r\n        else if (this.dateToNumberFromZero({ year: year - 1, month: 1, day: 1 }) > dateNumber) {\r\n            year--;\r\n        }\r\n        const dayOfYear = dateNumber - this.dateToNumberFromZero({ year, month: 1, day: 1 });\r\n        const month = dayToMonth(dayOfYear - (this.isLeapYear(year) && dayOfYear >= 59 ? 1 : 0));\r\n        const day = dayOfYear - prefSumDays[month] - (this.isLeapYear(year) && month > 1 ? 1 : 0);\r\n        return { year, month: month + 1, day: day + 1 };\r\n    }\r\n    numberToSimpleDateTime(arg) {\r\n        const time = numberToSimpleTime(arg % 1);\r\n        const carryDays = Math.floor(time.hours / HOURS_PER_DAY);\r\n        time.hours = time.hours % HOURS_PER_DAY;\r\n        const date = this.numberToSimpleDate(Math.floor(arg) + carryDays);\r\n        return Object.assign(Object.assign({}, date), time);\r\n    }\r\n    leapYearsCount(year) {\r\n        return Math.floor(year / 4) - Math.floor(year / 100) + Math.floor(year / 400) + (this.config.leapYear1900 && year >= 1900 ? 1 : 0);\r\n    }\r\n    daysInMonth(year, month) {\r\n        if (this.isLeapYear(year) && month === 2) {\r\n            return 29;\r\n        }\r\n        else {\r\n            return numDays[month - 1];\r\n        }\r\n    }\r\n    endOfMonth(date) {\r\n        return { year: date.year, month: date.month, day: this.daysInMonth(date.year, date.month) };\r\n    }\r\n    toBasisUS(start, end) {\r\n        if (start.day === 31) {\r\n            start.day = 30;\r\n        }\r\n        if (start.day === 30 && end.day === 31) {\r\n            end.day = 30;\r\n        }\r\n        if (start.month === 2 && start.day === this.daysInMonth(start.year, start.month)) {\r\n            start.day = 30;\r\n            if (end.month === 2 && end.day === this.daysInMonth(end.year, end.month)) {\r\n                end.day = 30;\r\n            }\r\n        }\r\n        return [start, end];\r\n    }\r\n    yearLengthForBasis(start, end) {\r\n        if (start.year !== end.year) {\r\n            if ((start.year + 1 !== end.year) || (start.month < end.month) || (start.month === end.month && start.day < end.day)) {\r\n                // this is true IFF at least one year of gap between dates\r\n                return (this.leapYearsCount(end.year) - this.leapYearsCount(start.year - 1)) / (end.year - start.year + 1) + 365;\r\n            }\r\n            if (this.countLeapDays(end) !== this.countLeapDays({ year: start.year, month: start.month, day: start.day - 1 })) {\r\n                return 366;\r\n            }\r\n            else {\r\n                return 365;\r\n            }\r\n        }\r\n        if (this.isLeapYear(start.year)) {\r\n            return 366;\r\n        }\r\n        else {\r\n            return 365;\r\n        }\r\n    }\r\n    parseSingleFormat(dateString, dateFormat, timeFormat) {\r\n        const dateTime = this.parseDateTime(dateString, dateFormat, timeFormat);\r\n        if (instanceOfSimpleDate(dateTime)) {\r\n            if (dateTime.year >= 0 && dateTime.year < 100) {\r\n                if (dateTime.year < this.getNullYear()) {\r\n                    dateTime.year += 2000;\r\n                }\r\n                else {\r\n                    dateTime.year += 1900;\r\n                }\r\n            }\r\n            if (!this.isValidDate(dateTime)) {\r\n                return undefined;\r\n            }\r\n        }\r\n        return dateTime;\r\n    }\r\n    parseDateTimeFromFormats(dateTimeString, dateFormats, timeFormats) {\r\n        const dateFormatsIterate = dateFormats.length === 0 ? [undefined] : dateFormats;\r\n        const timeFormatsIterate = timeFormats.length === 0 ? [undefined] : timeFormats;\r\n        for (const dateFormat of dateFormatsIterate) {\r\n            for (const timeFormat of timeFormatsIterate) {\r\n                const dateTime = this.parseSingleFormat(dateTimeString, dateFormat, timeFormat);\r\n                if (dateTime !== undefined) {\r\n                    return { dateTime, timeFormat, dateFormat };\r\n                }\r\n            }\r\n        }\r\n        return {};\r\n    }\r\n    countLeapDays(date) {\r\n        if (date.month > 2 || (date.month === 2 && date.day >= 29)) {\r\n            return this.leapYearsCount(date.year);\r\n        }\r\n        else {\r\n            return this.leapYearsCount(date.year - 1);\r\n        }\r\n    }\r\n    dateToNumberFromZero(date) {\r\n        return 365 * date.year + prefSumDays[date.month - 1] + date.day - 1 + (date.month <= 2 ? this.leapYearsCount(date.year - 1) : this.leapYearsCount(date.year));\r\n    }\r\n    isLeapYear(year) {\r\n        if (year % 4) {\r\n            return false;\r\n        }\r\n        else if (year % 100) {\r\n            return true;\r\n        }\r\n        else if (year % 400) {\r\n            return year === 1900 && this.config.leapYear1900;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\nfunction dayToMonth(dayOfYear) {\r\n    let month = 0;\r\n    if (prefSumDays[month + 6] <= dayOfYear) {\r\n        month += 6;\r\n    }\r\n    if (prefSumDays[month + 3] <= dayOfYear) {\r\n        month += 3;\r\n    }\r\n    if (prefSumDays[month + 2] <= dayOfYear) {\r\n        month += 2;\r\n    }\r\n    else if (prefSumDays[month + 1] <= dayOfYear) {\r\n        month += 1;\r\n    }\r\n    return month;\r\n}\r\nexport function offsetMonth(date, offset) {\r\n    const totalM = 12 * date.year + date.month - 1 + offset;\r\n    return { year: Math.floor(totalM / 12), month: totalM % 12 + 1, day: date.day };\r\n}\r\nexport function truncateDayInMonth(date) {\r\n    return { year: date.year, month: date.month, day: Math.min(date.day, numDays[date.month - 1]) };\r\n}\r\nexport function roundToNearestSecond(arg) {\r\n    return Math.round(arg * 3600 * 24) / (3600 * 24);\r\n}\r\nfunction roundToEpsilon(arg, epsilon = 1) {\r\n    return Math.round(arg * epsilon) / epsilon;\r\n}\r\n// Note: The result of this function might be { hours = 24, minutes = 0, seconds = 0 } if arg < 1 but arg ≈ 1\r\nexport function numberToSimpleTime(arg) {\r\n    const argAsSeconds = arg * HOURS_PER_DAY * MINUTES_PER_HOUR * SECONDS_PER_MINUTE;\r\n    const seconds = roundToEpsilon(argAsSeconds % SECONDS_PER_MINUTE, 100000) % SECONDS_PER_MINUTE;\r\n    const argAsMinutes = (argAsSeconds - seconds) / SECONDS_PER_MINUTE;\r\n    const minutes = Math.round(argAsMinutes % MINUTES_PER_HOUR) % MINUTES_PER_HOUR;\r\n    const argAsHours = (argAsMinutes - minutes) / MINUTES_PER_HOUR;\r\n    const hours = Math.round(argAsHours);\r\n    return { hours, minutes, seconds };\r\n}\r\nexport function timeToNumber(time) {\r\n    return ((time.seconds / 60 + time.minutes) / 60 + time.hours) / 24;\r\n}\r\nexport function toBasisEU(date) {\r\n    return { year: date.year, month: date.month, day: Math.min(30, date.day) };\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { DenseStrategy } from './DenseStrategy';\r\nimport { SparseStrategy } from './SparseStrategy';\r\nexport class DenseSparseChooseBasedOnThreshold {\r\n    constructor(threshold) {\r\n        this.threshold = threshold;\r\n    }\r\n    call(fill) {\r\n        if (fill > this.threshold) {\r\n            return DenseStrategy;\r\n        }\r\n        else {\r\n            return SparseStrategy;\r\n        }\r\n    }\r\n}\r\nexport class AlwaysSparse {\r\n    call() {\r\n        return SparseStrategy;\r\n    }\r\n}\r\nexport class AlwaysDense {\r\n    call() {\r\n        return DenseStrategy;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { secondsExtendedRegexp } from '../DateTimeDefault';\r\nimport { numberToSimpleTime } from '../DateTimeHelper';\r\nimport { parseForDateTimeFormat, parseForNumberFormat, TokenType } from './parser';\r\nexport function format(value, formatArg, config, dateHelper) {\r\n    const tryDateTime = config.stringifyDateTime(dateHelper.numberToSimpleDateTime(value), formatArg); // default points to defaultStringifyDateTime()\r\n    if (tryDateTime !== undefined) {\r\n        return tryDateTime;\r\n    }\r\n    const tryDuration = config.stringifyDuration(numberToSimpleTime(value), formatArg);\r\n    if (tryDuration !== undefined) {\r\n        return tryDuration;\r\n    }\r\n    const expression = parseForNumberFormat(formatArg);\r\n    if (expression !== undefined) {\r\n        return numberFormat(expression.tokens, value);\r\n    }\r\n    return formatArg;\r\n}\r\nexport function padLeft(number, size) {\r\n    let result = number + '';\r\n    while (result.length < size) {\r\n        result = '0' + result;\r\n    }\r\n    return result;\r\n}\r\nexport function padRight(number, size) {\r\n    let result = number + '';\r\n    while (result.length < size) {\r\n        result = result + '0';\r\n    }\r\n    return result;\r\n}\r\nfunction countChars(text, char) {\r\n    return text.split(char).length - 1;\r\n}\r\nfunction numberFormat(tokens, value) {\r\n    let result = '';\r\n    for (let i = 0; i < tokens.length; ++i) {\r\n        const token = tokens[i];\r\n        if (token.type === TokenType.FREE_TEXT) {\r\n            result += token.value;\r\n            continue;\r\n        }\r\n        const tokenParts = token.value.split('.');\r\n        const integerFormat = tokenParts[0];\r\n        const decimalFormat = tokenParts[1] || '';\r\n        const separator = tokenParts[1] ? '.' : '';\r\n        /* get fixed-point number without trailing zeros */\r\n        const valueParts = Number(value.toFixed(decimalFormat.length)).toString().split('.');\r\n        let integerPart = valueParts[0] || '';\r\n        let decimalPart = valueParts[1] || '';\r\n        if (integerFormat.length > integerPart.length) {\r\n            const padSizeInteger = countChars(integerFormat.substr(0, integerFormat.length - integerPart.length), '0');\r\n            integerPart = padLeft(integerPart, padSizeInteger + integerPart.length);\r\n        }\r\n        const padSizeDecimal = countChars(decimalFormat.substr(decimalPart.length, decimalFormat.length - decimalPart.length), '0');\r\n        decimalPart = padRight(decimalPart, padSizeDecimal + decimalPart.length);\r\n        result += integerPart + separator + decimalPart;\r\n    }\r\n    return result;\r\n}\r\nexport function defaultStringifyDuration(time, formatArg) {\r\n    const expression = parseForDateTimeFormat(formatArg);\r\n    if (expression === undefined) {\r\n        return undefined;\r\n    }\r\n    const tokens = expression.tokens;\r\n    let result = '';\r\n    for (const token of tokens) {\r\n        if (token.type === TokenType.FREE_TEXT) {\r\n            result += token.value;\r\n            continue;\r\n        }\r\n        switch (token.value.toLowerCase()) {\r\n            case 'h':\r\n            case 'hh': {\r\n                result += padLeft(time.hours, token.value.length);\r\n                time.hours = 0;\r\n                break;\r\n            }\r\n            case '[hh]': {\r\n                result += padLeft(time.hours, token.value.length - 2);\r\n                time.hours = 0;\r\n                break;\r\n            }\r\n            case 'm':\r\n            case 'mm': {\r\n                result += padLeft(time.minutes, token.value.length);\r\n                time.minutes = 0;\r\n                break;\r\n            }\r\n            case '[mm]': {\r\n                result += padLeft(time.minutes + 60 * time.hours, token.value.length - 2);\r\n                time.minutes = 0;\r\n                time.hours = 0;\r\n                break;\r\n            }\r\n            /* seconds */\r\n            case 's':\r\n            case 'ss': {\r\n                result += padLeft(Math.floor(time.seconds), token.value.length);\r\n                break;\r\n            }\r\n            default: {\r\n                if (secondsExtendedRegexp.test(token.value)) {\r\n                    const fractionOfSecondPrecision = Math.max(token.value.length - 3, 0);\r\n                    result += (time.seconds < 10 ? '0' : '') + Math.floor(time.seconds * Math.pow(10, fractionOfSecondPrecision)) / Math.pow(10, fractionOfSecondPrecision);\r\n                    continue;\r\n                }\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function defaultStringifyDateTime(dateTime, formatArg) {\r\n    const expression = parseForDateTimeFormat(formatArg);\r\n    if (expression === undefined) {\r\n        return undefined;\r\n    }\r\n    const tokens = expression.tokens;\r\n    let result = '';\r\n    let minutes = false;\r\n    const ampm = tokens.some((token) => token.type === TokenType.FORMAT &&\r\n        (token.value === 'a/p' || token.value === 'A/P' || token.value === 'am/pm' || token.value === 'AM/PM'));\r\n    for (let i = 0; i < tokens.length; i++) {\r\n        const token = tokens[i];\r\n        if (token.type === TokenType.FREE_TEXT) {\r\n            result += token.value;\r\n            continue;\r\n        }\r\n        switch (token.value.toLowerCase()) {\r\n            /* hours*/\r\n            case 'h':\r\n            case 'hh': {\r\n                minutes = true;\r\n                result += padLeft(ampm ? (dateTime.hours + 11) % 12 + 1 : dateTime.hours, token.value.length);\r\n                break;\r\n            }\r\n            /* days */\r\n            case 'd':\r\n            case 'dd': {\r\n                result += padLeft(dateTime.day, token.value.length);\r\n                break;\r\n            }\r\n            /* seconds */\r\n            case 's':\r\n            case 'ss': {\r\n                result += padLeft(Math.floor(dateTime.seconds), token.value.length);\r\n                break;\r\n            }\r\n            /* minutes / months */\r\n            case 'm':\r\n            case 'mm': {\r\n                if (i + 1 < tokens.length && tokens[i + 1].value.startsWith(':')) {\r\n                    minutes = true;\r\n                }\r\n                if (minutes) {\r\n                    result += padLeft(dateTime.minutes, token.value.length);\r\n                }\r\n                else {\r\n                    result += padLeft(dateTime.month, token.value.length);\r\n                }\r\n                minutes = true;\r\n                break;\r\n            }\r\n            /* years */\r\n            case 'yy': {\r\n                result += padLeft(dateTime.year % 100, token.value.length);\r\n                break;\r\n            }\r\n            case 'yyyy': {\r\n                result += dateTime.year;\r\n                break;\r\n            }\r\n            /* AM / PM */\r\n            case 'am/pm':\r\n            case 'a/p': {\r\n                const [am, pm] = token.value.split('/');\r\n                result += dateTime.hours < 12 ? am : pm;\r\n                break;\r\n            }\r\n            default: {\r\n                if (secondsExtendedRegexp.test(token.value)) {\r\n                    const fractionOfSecondPrecision = token.value.length - 3;\r\n                    result += (dateTime.seconds < 10 ? '0' : '') + Math.floor(dateTime.seconds * Math.pow(10, fractionOfSecondPrecision)) / Math.pow(10, fractionOfSecondPrecision);\r\n                    continue;\r\n                }\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nconst dateFormatRegex = /(\\\\.|dd|DD|d|D|mm|MM|m|M|YYYY|YY|yyyy|yy|HH|hh|H|h|ss(\\.(0+|s+))?|s|AM\\/PM|am\\/pm|A\\/P|a\\/p|\\[mm]|\\[MM]|\\[hh]|\\[HH])/g;\r\nconst numberFormatRegex = /(\\\\.|[#0]+(\\.[#0]*)?)/g;\r\nexport var TokenType;\r\n(function (TokenType) {\r\n    TokenType[\"FORMAT\"] = \"FORMAT\";\r\n    TokenType[\"FREE_TEXT\"] = \"FREE_TEXT\";\r\n})(TokenType || (TokenType = {}));\r\nexport function formatToken(type, value) {\r\n    return {\r\n        type,\r\n        value,\r\n    };\r\n}\r\nexport var FormatExpressionType;\r\n(function (FormatExpressionType) {\r\n    FormatExpressionType[\"DATE\"] = \"DATE\";\r\n    FormatExpressionType[\"NUMBER\"] = \"NUMBER\";\r\n    FormatExpressionType[\"STRING\"] = \"STRING\";\r\n})(FormatExpressionType || (FormatExpressionType = {}));\r\nfunction matchDateFormat(str) {\r\n    dateFormatRegex.lastIndex = 0;\r\n    const tokens = [];\r\n    let m;\r\n    do {\r\n        m = dateFormatRegex.exec(str);\r\n        if (m !== null) {\r\n            tokens.push(m);\r\n        }\r\n    } while (m);\r\n    return tokens;\r\n}\r\nfunction matchNumberFormat(str) {\r\n    numberFormatRegex.lastIndex = 0;\r\n    const numberFormatToken = numberFormatRegex.exec(str);\r\n    if (numberFormatToken !== null) {\r\n        return [numberFormatToken];\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n}\r\nfunction createTokens(regexTokens, str) {\r\n    const tokens = [];\r\n    let start = 0;\r\n    for (let i = 0; i < regexTokens.length; ++i) {\r\n        const token = regexTokens[i];\r\n        if (token.index !== start) {\r\n            const beforeToken = str.substr(start, token.index - start);\r\n            tokens.push(formatToken(TokenType.FREE_TEXT, beforeToken));\r\n        }\r\n        if (token[0].startsWith('\\\\')) {\r\n            tokens.push(formatToken(TokenType.FREE_TEXT, token[0]));\r\n        }\r\n        else {\r\n            tokens.push(formatToken(TokenType.FORMAT, token[0]));\r\n        }\r\n        start = token.index + token[0].length;\r\n    }\r\n    const lastToken = regexTokens[regexTokens.length - 1];\r\n    if (lastToken.index + lastToken[0].length < str.length) {\r\n        const afterLastToken = str.substr(lastToken.index + lastToken[0].length, str.length);\r\n        tokens.push(formatToken(TokenType.FREE_TEXT, afterLastToken));\r\n    }\r\n    return tokens;\r\n}\r\nexport function parseForDateTimeFormat(str) {\r\n    const dateFormatTokens = matchDateFormat(str);\r\n    if (dateFormatTokens.every((elem) => isEscapeToken(elem))) {\r\n        return undefined;\r\n    }\r\n    else {\r\n        return {\r\n            type: FormatExpressionType.DATE,\r\n            tokens: createTokens(dateFormatTokens, str),\r\n        };\r\n    }\r\n}\r\nexport function parseForNumberFormat(str) {\r\n    const numberFormatTokens = matchNumberFormat(str);\r\n    if (numberFormatTokens.every((elem) => isEscapeToken(elem))) {\r\n        return undefined;\r\n    }\r\n    else {\r\n        return {\r\n            type: FormatExpressionType.NUMBER,\r\n            tokens: createTokens(numberFormatTokens, str),\r\n        };\r\n    }\r\n}\r\nexport function parse(str) {\r\n    var _a, _b;\r\n    return (_b = (_a = parseForDateTimeFormat(str)) !== null && _a !== void 0 ? _a : parseForNumberFormat(str)) !== null && _b !== void 0 ? _b : {\r\n        type: FormatExpressionType.STRING,\r\n        tokens: [{\r\n                type: TokenType.FREE_TEXT,\r\n                value: str,\r\n            }],\r\n    };\r\n}\r\nexport function isEscapeToken(token) {\r\n    return token[0].startsWith('\\\\');\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { checkKeySchema, extractTime } from './licenseKeyHelper';\r\n/**\r\n * List of all not valid messages which may occur.\r\n */\r\nconst consoleMessages = {\r\n    invalid: () => 'The license key for HyperFormula is invalid.',\r\n    expired: ({ keyValidityDate }) => 'The license key for HyperFormula expired' +\r\n        ` on ${keyValidityDate}, and is not valid for the installed version.`,\r\n    missing: () => 'The license key for HyperFormula is missing.',\r\n};\r\nlet _notified = false;\r\n/**\r\n * Checks if the provided license key is grammatically valid or not expired.\r\n *\r\n * @param {string} licenseKey The license key to check.\r\n * @returns {LicenseKeyValidityState} Returns the checking state.\r\n */\r\nexport function checkLicenseKeyValidity(licenseKey) {\r\n    const messageDescriptor = {\r\n        template: \"missing\" /* MISSING */,\r\n        vars: {},\r\n    };\r\n    if (licenseKey === 'gpl-v3' || licenseKey === 'internal-use-in-handsontable') {\r\n        messageDescriptor.template = \"valid\" /* VALID */;\r\n    }\r\n    else if (typeof licenseKey === 'string' && checkKeySchema(licenseKey)) {\r\n        const [day, month, year] = (process.env.HT_RELEASE_DATE || '').split('/');\r\n        const releaseDays = Math.floor(new Date(`${month}/${day}/${year}`).getTime() / 8.64e7);\r\n        const keyValidityDays = extractTime(licenseKey);\r\n        messageDescriptor.vars.keyValidityDate = formatDate(new Date((keyValidityDays + 1) * 8.64e7));\r\n        if (releaseDays > keyValidityDays) {\r\n            messageDescriptor.template = \"expired\" /* EXPIRED */;\r\n        }\r\n        else {\r\n            messageDescriptor.template = \"valid\" /* VALID */;\r\n        }\r\n    }\r\n    else if (licenseKey !== '') {\r\n        messageDescriptor.template = \"invalid\" /* INVALID */;\r\n    }\r\n    if (!_notified && messageDescriptor.template !== \"valid\" /* VALID */) {\r\n        console.warn(consoleMessages[messageDescriptor.template](messageDescriptor.vars));\r\n        _notified = true;\r\n    }\r\n    return messageDescriptor.template;\r\n}\r\n/**\r\n * Formats a Date instance to hard-coded format MMMM DD, YYYY.\r\n *\r\n * @param {Date} date The date to format.\r\n * @returns {string}\r\n */\r\nfunction formatDate(date) {\r\n    const monthNames = ['January', 'February', 'March', 'April', 'May', 'June',\r\n        'July', 'August', 'September', 'October', 'November', 'December'\r\n    ];\r\n    const month = monthNames[date.getMonth()];\r\n    const day = date.getDate();\r\n    const year = date.getFullYear();\r\n    return `${month} ${day}, ${year}`;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\n// @ts-nocheck\r\n/* eslint-disable */\r\nconst _rl = '\\x6C\\x65\\x6E\\x67\\x74\\x68';\r\nconst _hd = (v) => parseInt(v, 16);\r\nconst _pi = (v) => parseInt(v, 10);\r\nconst _nm = (v) => (v + '').replace(/\\-/g, '');\r\nconst _ss = (v, s, l) => v['\\x73\\x75\\x62\\x73\\x74\\x72'](s, l);\r\nconst _cp = (v) => v['\\x63\\x6F\\x64\\x65\\x50\\x6F\\x69\\x6E\\x74\\x41\\x74'](0) - 65;\r\nexport function extractTime(v) {\r\n    return _nm(v)[_rl] === (50 >> 1) ? _hd(_ss(_nm(v), _hd('12'), _cp('\\x46'))) / (_hd(_ss(_nm(v), _cp('C'), _cp('\\x59') >> 4)) || ((~~![][_rl]) << 3) + 1) : 0;\r\n}\r\nexport function checkKeySchema(v) {\r\n    v = (v + '').replace(/\\-/g, '');\r\n    if (v[_rl] !== _cp('\\x5A')) {\r\n        return false;\r\n    }\r\n    let sp = 0;\r\n    return [[0, _cp('\\x47') + 1], [_cp('\\x48'), _cp('\\x48') - 1], [_cp('G') + _cp('H'), _cp('\\x47')]].reduce((e, [a, b], c) => {\r\n        e |= (_pi(`${_pi(_hd(_ss(v, ...[sp + a - (c === (3 >> 2) ? 0 : 2), b + (!c ? 0 : 2)])) + (_hd(_ss(v, ...[sp + a + b, 2])) + []).padStart(2, '0'))}`) % 97 || 2) >> 1;\r\n        sp += 2;\r\n        return e;\r\n    }, _cp('A')) === ([] + 1 >> 1);\r\n}\r\n/* eslint-enable */\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange, isSimpleCellRange } from './AbsoluteCellRange';\r\nimport { validateArgToType } from './ArgumentSanitization';\r\nimport { BuildEngineFactory } from './BuildEngineFactory';\r\nimport { CellType, getCellType, getCellValueDetailedType, getCellValueFormat, getCellValueType, isSimpleCellAddress } from './Cell';\r\nimport { CellContent } from './CellContentParser';\r\nimport { getDefaultConfig } from './Config';\r\nimport { numberToSimpleTime } from './DateTimeHelper';\r\nimport { objectDestroy } from './Destroy';\r\nimport { Emitter, Events } from './Emitter';\r\nimport { EvaluationSuspendedError, ExpectedValueOfTypeError, LanguageAlreadyRegisteredError, LanguageNotRegisteredError, NotAFormulaError, } from './errors';\r\nimport { buildTranslationPackage } from './i18n';\r\nimport { FunctionRegistry } from './interpreter/FunctionRegistry';\r\nimport { normalizeAddedIndexes, normalizeRemovedIndexes } from './Operations';\r\nimport { AstNodeType, simpleCellAddressFromString, simpleCellAddressToString, simpleCellRangeFromString, simpleCellRangeToString, } from './parser';\r\n/**\r\n * This is a class for creating HyperFormula instance, all the following public methods\r\n * ale related to this class.\r\n *\r\n * The instance can be created only by calling one of the static methods\r\n * `buildFromArray`, `buildFromSheets` or `buildEmpty` and should be disposed of with the\r\n * `destroy` method when it's no longer needed to free the resources.\r\n *\r\n * The instance can be seen as a workbook where worksheets can be created and\r\n * manipulated. They are organized within a widely known structure of columns and rows\r\n * which can be manipulated as well. The smallest possible data unit are the cells, which\r\n * may contain simple values or formulas to be calculated.\r\n *\r\n * All CRUD methods are called directly on HyperFormula instance and will trigger\r\n * corresponding lifecycle events. The events are marked accordingly, as well as thrown\r\n * errors, so they can be correctly handled.\r\n */\r\nexport class HyperFormula {\r\n    constructor(_config, _stats, _dependencyGraph, _columnSearch, _parser, _unparser, _cellContentParser, _evaluator, _lazilyTransformingAstService, _crudOperations, _exporter, _namedExpressions, _serialization, _functionRegistry) {\r\n        this._config = _config;\r\n        this._stats = _stats;\r\n        this._dependencyGraph = _dependencyGraph;\r\n        this._columnSearch = _columnSearch;\r\n        this._parser = _parser;\r\n        this._unparser = _unparser;\r\n        this._cellContentParser = _cellContentParser;\r\n        this._evaluator = _evaluator;\r\n        this._lazilyTransformingAstService = _lazilyTransformingAstService;\r\n        this._crudOperations = _crudOperations;\r\n        this._exporter = _exporter;\r\n        this._namedExpressions = _namedExpressions;\r\n        this._serialization = _serialization;\r\n        this._functionRegistry = _functionRegistry;\r\n        this._emitter = new Emitter();\r\n        this._evaluationSuspended = false;\r\n    }\r\n    /**\r\n     * Returns all of HyperFormula's default [configuration options](../../guide/configuration-options.md).\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // returns all default configuration options\r\n     * const defaultConfig = HyperFormula.defaultConfig;\r\n     * ```\r\n     *\r\n     * @category Static Accessors\r\n     */\r\n    static get defaultConfig() {\r\n        return getDefaultConfig();\r\n    }\r\n    /**\r\n     * Calls the `graph` method on the dependency graph.\r\n     * Allows for executing `graph` directly, without a need to refer to `dependencyGraph`.\r\n     *\r\n     * @internal\r\n     */\r\n    get graph() {\r\n        return this.dependencyGraph.graph;\r\n    }\r\n    /**\r\n     * Calls the `rangeMapping` method on the dependency graph.\r\n     * Allows for executing `rangeMapping` directly, without a need to refer to `dependencyGraph`.\r\n     *\r\n     * @internal\r\n     */\r\n    get rangeMapping() {\r\n        return this.dependencyGraph.rangeMapping;\r\n    }\r\n    /**\r\n     * Calls the `arrayMapping` method on the dependency graph.\r\n     * Allows for executing `arrayMapping` directly, without a need to refer to `dependencyGraph`.\r\n     *\r\n     * @internal\r\n     */\r\n    get arrayMapping() {\r\n        return this.dependencyGraph.arrayMapping;\r\n    }\r\n    /**\r\n     * Calls the `sheetMapping` method on the dependency graph.\r\n     * Allows for executing `sheetMapping` directly, without a need to refer to `dependencyGraph`.\r\n     *\r\n     * @internal\r\n     */\r\n    get sheetMapping() {\r\n        return this.dependencyGraph.sheetMapping;\r\n    }\r\n    /**\r\n     * Calls the `addressMapping` method on the dependency graph.\r\n     * Allows for executing `addressMapping` directly, without a need to refer to `dependencyGraph`.\r\n     *\r\n     * @internal\r\n     */\r\n    get addressMapping() {\r\n        return this.dependencyGraph.addressMapping;\r\n    }\r\n    /** @internal */\r\n    get dependencyGraph() {\r\n        return this._dependencyGraph;\r\n    }\r\n    /** @internal */\r\n    get evaluator() {\r\n        return this._evaluator;\r\n    }\r\n    /** @internal */\r\n    get columnSearch() {\r\n        return this._columnSearch;\r\n    }\r\n    /** @internal */\r\n    get lazilyTransformingAstService() {\r\n        return this._lazilyTransformingAstService;\r\n    }\r\n    /**\r\n     * Returns state of the validity of the license key.\r\n     *\r\n     * @internal\r\n     */\r\n    get licenseKeyValidityState() {\r\n        return this._config.licenseKeyValidityState;\r\n    }\r\n    /**\r\n     * Builds the engine for a sheet from a two-dimensional array representation.\r\n     * The engine is created with a single sheet.\r\n     * Can be configured with the optional second parameter that represents a [[ConfigParams]].\r\n     * If not specified, the engine will be built with the default configuration.\r\n     *\r\n     * @param {Sheet} sheet - two-dimensional array representation of sheet\r\n     * @param {Partial<ConfigParams>} configInput - engine configuration\r\n     * @param {SerializedNamedExpression[]} namedExpressions - starting named expressions\r\n     *\r\n     * @throws [[SheetSizeLimitExceededError]] when sheet size exceeds the limits\r\n     * @throws [[InvalidArgumentsError]] when sheet is not an array of arrays\r\n     * @throws [[FunctionPluginValidationError]] when plugin class definition is not consistent with metadata\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // data represented as an array\r\n     * const sheetData = [\r\n     *  ['0', '=SUM(1, 2, 3)', '52'],\r\n     *  ['=SUM(A1:C1)', '', '=A1'],\r\n     *  ['2', '=SUM(A1:C1)', '91'],\r\n     * ];\r\n     *\r\n     * // method with optional config parameter maxColumns\r\n     * const hfInstance = HyperFormula.buildFromArray(sheetData, { maxColumns: 1000 });\r\n     * ```\r\n     *\r\n     * @category Factories\r\n     */\r\n    static buildFromArray(sheet, configInput = {}, namedExpressions = []) {\r\n        return this.buildFromEngineState(BuildEngineFactory.buildFromSheet(sheet, configInput, namedExpressions));\r\n    }\r\n    /**\r\n     * Builds the engine from an object containing multiple sheets with names.\r\n     * The engine is created with one or more sheets.\r\n     * Can be configured with the optional second parameter that represents a [[ConfigParams]].\r\n     * If not specified the engine will be built with the default configuration.\r\n     *\r\n     * @param {Sheet} sheets - object with sheets definition\r\n     * @param {Partial<ConfigParams>} configInput - engine configuration\r\n     * @param {SerializedNamedExpression[]} namedExpressions - starting named expressions\r\n     *\r\n     * @throws [[SheetSizeLimitExceededError]] when sheet size exceeds the limits\r\n     * @throws [[InvalidArgumentsError]] when any sheet is not an array of arrays\r\n     * @throws [[FunctionPluginValidationError]] when plugin class definition is not consistent with metadata\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // data represented as an object with sheets: Sheet1 and Sheet2\r\n     * const sheetData = {\r\n     *  'Sheet1': [\r\n     *    ['1', '', '=Sheet2!$A1'],\r\n     *    ['', '2', '=SUM(1, 2, 3)'],\r\n     *    ['=Sheet2!$A2', '2', ''],\r\n     *   ],\r\n     *  'Sheet2': [\r\n     *    ['', '4', '=Sheet1!$B1'],\r\n     *    ['', '8', '=SUM(9, 3, 3)'],\r\n     *    ['=Sheet1!$B1', '2', ''],\r\n     *   ],\r\n     * };\r\n     *\r\n     * // method with optional config parameter useColumnIndex\r\n     * const hfInstance = HyperFormula.buildFromSheets(sheetData, { useColumnIndex: true });\r\n     * ```\r\n     *\r\n     * @category Factories\r\n     */\r\n    static buildFromSheets(sheets, configInput = {}, namedExpressions = []) {\r\n        return this.buildFromEngineState(BuildEngineFactory.buildFromSheets(sheets, configInput, namedExpressions));\r\n    }\r\n    /**\r\n     * Builds an empty engine instance.\r\n     * Can be configured with the optional parameter that represents a [[ConfigParams]].\r\n     * If not specified the engine will be built with the default configuration.\r\n     *\r\n     * @param {Partial<ConfigParams>} configInput - engine configuration\r\n     * @param {SerializedNamedExpression[]} namedExpressions - starting named expressions\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // build with no initial data and with optional config parameter maxColumns\r\n     * const hfInstance = HyperFormula.buildEmpty({ maxColumns: 1000 });\r\n     * ```\r\n     *\r\n     * @category Factories\r\n     */\r\n    static buildEmpty(configInput = {}, namedExpressions = []) {\r\n        return this.buildFromEngineState(BuildEngineFactory.buildEmpty(configInput, namedExpressions));\r\n    }\r\n    /**\r\n     * Returns registered language from its code string.\r\n     *\r\n     * @param {string} languageCode - code string of the translation package\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[LanguageNotRegisteredError]] when trying to retrieve not registered language\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // return registered language\r\n     * const language = HyperFormula.getLanguage('enGB');\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static getLanguage(languageCode) {\r\n        validateArgToType(languageCode, 'string', 'languageCode');\r\n        const val = this.registeredLanguages.get(languageCode);\r\n        if (val === undefined) {\r\n            throw new LanguageNotRegisteredError();\r\n        }\r\n        else {\r\n            return val;\r\n        }\r\n    }\r\n    /**\r\n     * Registers language under given code string.\r\n     *\r\n     * For more information, see the [Localizing functions guide](/guide/localizing-functions.md).\r\n     *\r\n     * @param {string} languageCode - code string of the translation package\r\n     * @param {RawTranslationPackage} languagePackage - translation package to be registered\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[ProtectedFunctionTranslationError]] when trying to register translation for protected function\r\n     * @throws [[LanguageAlreadyRegisteredError]] when given language is already registered\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // return registered language\r\n     * HyperFormula.registerLanguage('enUS', enUS);\r\n     * const engine = HyperFormula.buildEmpty({language: 'enUS'});\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static registerLanguage(languageCode, languagePackage) {\r\n        validateArgToType(languageCode, 'string', 'languageCode');\r\n        if (this.registeredLanguages.has(languageCode)) {\r\n            throw new LanguageAlreadyRegisteredError();\r\n        }\r\n        else {\r\n            this.registeredLanguages.set(languageCode, buildTranslationPackage(languagePackage));\r\n        }\r\n    }\r\n    /**\r\n     * Unregisters language that is registered under given code string.\r\n     *\r\n     * @param {string} languageCode - code string of the translation package\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[LanguageNotRegisteredError]] when given language is not registered\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // register the language for the instance\r\n     * HyperFormula.registerLanguage('plPL', plPL);\r\n     *\r\n     * // unregister plPL\r\n     * HyperFormula.unregisterLanguage('plPL');\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static unregisterLanguage(languageCode) {\r\n        validateArgToType(languageCode, 'string', 'languageCode');\r\n        if (this.registeredLanguages.has(languageCode)) {\r\n            this.registeredLanguages.delete(languageCode);\r\n        }\r\n        else {\r\n            throw new LanguageNotRegisteredError();\r\n        }\r\n    }\r\n    /**\r\n     * Returns all registered languages codes.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // should return all registered language codes: ['enGB', 'plPL']\r\n     * const registeredLanguages = HyperFormula.getRegisteredLanguagesCodes();\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static getRegisteredLanguagesCodes() {\r\n        return Array.from(this.registeredLanguages.keys());\r\n    }\r\n    /**\r\n     * Registers all functions in a given plugin with optional translations.\r\n     *\r\n     * Note: This method does not affect the existing HyperFormula instances.\r\n     *\r\n     * @param {FunctionPluginDefinition} plugin - plugin class\r\n     * @param {FunctionTranslationsPackage} translations - optional package of function names translations\r\n     *\r\n     * @throws [[FunctionPluginValidationError]] when plugin class definition is not consistent with metadata\r\n     * @throws [[ProtectedFunctionTranslationError]] when trying to register translation for protected function\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // import your own plugin\r\n     * import { MyExamplePlugin } from './file_with_your_plugin';\r\n     *\r\n     * // register the plugin\r\n     * HyperFormula.registerFunctionPlugin(MyExamplePlugin);\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static registerFunctionPlugin(plugin, translations) {\r\n        FunctionRegistry.registerFunctionPlugin(plugin, translations);\r\n    }\r\n    /**\r\n     * Unregisters all functions defined in given plugin.\r\n     *\r\n     * Note: This method does not affect the existing HyperFormula instances.\r\n     *\r\n     * @param {FunctionPluginDefinition} plugin - plugin class\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // get the class of a plugin\r\n     * const registeredPluginClass = HyperFormula.getFunctionPlugin('EXAMPLE');\r\n     *\r\n     * // unregister all functions defined in a plugin of ID 'EXAMPLE'\r\n     * HyperFormula.unregisterFunctionPlugin(registeredPluginClass);\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static unregisterFunctionPlugin(plugin) {\r\n        FunctionRegistry.unregisterFunctionPlugin(plugin);\r\n    }\r\n    /**\r\n     * Registers a function with a given id if such exists in a plugin.\r\n     *\r\n     * Note: This method does not affect the existing HyperFormula instances.\r\n     *\r\n     * @param {string} functionId - function id, e.g. 'SUMIF'\r\n     * @param {FunctionPluginDefinition} plugin - plugin class\r\n     * @param translations\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[FunctionPluginValidationError]] when function with a given id does not exist in plugin or plugin class definition is not consistent with metadata\r\n     * @throws [[ProtectedFunctionTranslationError]] when trying to register translation for protected function\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // import your own plugin\r\n     * import { MyExamplePlugin } from './file_with_your_plugin';\r\n     *\r\n     * // register a function\r\n     * HyperFormula.registerFunction('EXAMPLE', MyExamplePlugin);\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static registerFunction(functionId, plugin, translations) {\r\n        validateArgToType(functionId, 'string', 'functionId');\r\n        FunctionRegistry.registerFunction(functionId, plugin, translations);\r\n    }\r\n    /**\r\n     * Unregisters a function with a given id.\r\n     *\r\n     * Note: This method does not affect the existing HyperFormula instances.\r\n     *\r\n     * @param {string} functionId - function id, e.g. 'SUMIF'\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // import your own plugin\r\n     * import { MyExamplePlugin } from './file_with_your_plugin';\r\n     *\r\n     * // register a function\r\n     * HyperFormula.registerFunction('EXAMPLE', MyExamplePlugin);\r\n     *\r\n     * // unregister a function\r\n     * HyperFormula.unregisterFunction('EXAMPLE');\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static unregisterFunction(functionId) {\r\n        validateArgToType(functionId, 'string', 'functionId');\r\n        FunctionRegistry.unregisterFunction(functionId);\r\n    }\r\n    /**\r\n     * Clears function registry.\r\n     *\r\n     * Note: This method does not affect the existing HyperFormula instances.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * HyperFormula.unregisterAllFunctions();\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static unregisterAllFunctions() {\r\n        FunctionRegistry.unregisterAll();\r\n    }\r\n    /**\r\n     * Returns translated names of all registered functions for a given language\r\n     *\r\n     * @param {string} code - language code\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // return a list of function names registered for enGB\r\n     * const allNames = HyperFormula.getRegisteredFunctionNames('enGB');\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static getRegisteredFunctionNames(code) {\r\n        validateArgToType(code, 'string', 'code');\r\n        const functionIds = FunctionRegistry.getRegisteredFunctionIds();\r\n        const language = this.getLanguage(code);\r\n        return language.getFunctionTranslations(functionIds);\r\n    }\r\n    /**\r\n     * Returns class of a plugin used by function with given id\r\n     *\r\n     * @param {string} functionId - id of a function, e.g. 'SUMIF'\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // import your own plugin\r\n     * import { MyExamplePlugin } from './file_with_your_plugin';\r\n     *\r\n     * // register a plugin\r\n     * HyperFormula.registerFunctionPlugin(MyExamplePlugin);\r\n     *\r\n     * // return the class of a given plugin\r\n     * const myFunctionClass = HyperFormula.getFunctionPlugin('EXAMPLE');\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static getFunctionPlugin(functionId) {\r\n        validateArgToType(functionId, 'string', 'functionId');\r\n        return FunctionRegistry.getFunctionPlugin(functionId);\r\n    }\r\n    /**\r\n     * Returns classes of all plugins registered in HyperFormula.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // return classes of all plugins\r\n     * const allClasses = HyperFormula.getAllFunctionPlugins();\r\n     * ```\r\n     *\r\n     * @category Static Methods\r\n     */\r\n    static getAllFunctionPlugins() {\r\n        return FunctionRegistry.getPlugins();\r\n    }\r\n    static buildFromEngineState(engine) {\r\n        return new HyperFormula(engine.config, engine.stats, engine.dependencyGraph, engine.columnSearch, engine.parser, engine.unparser, engine.cellContentParser, engine.evaluator, engine.lazilyTransformingAstService, engine.crudOperations, engine.exporter, engine.namedExpressions, engine.serialization, engine.functionRegistry);\r\n    }\r\n    /**\r\n     * Returns the cell value of a given address.\r\n     * Applies rounding and post-processing.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] when cellAddress is of incorrect type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(1, 2, 3)', '2'],\r\n     * ]);\r\n     *\r\n     * // get value of A1 cell, should be '6'\r\n     * const A1Value = hfInstance.getCellValue({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // get value of B1 cell, should be '2'\r\n     * const B1Value = hfInstance.getCellValue({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    getCellValue(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        this.ensureEvaluationIsNotSuspended();\r\n        return this._serialization.getCellValue(cellAddress);\r\n    }\r\n    /**\r\n     * Returns a normalized formula string from the cell of a given address or `undefined` for an address that does not exist and empty values.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] when cellAddress is of incorrect type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(1, 2, 3)', '0'],\r\n     * ]);\r\n     *\r\n     * // should return a normalized A1 cell formula: '=SUM(1, 2, 3)'\r\n     * const A1Formula = hfInstance.getCellFormula({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // should return a normalized B1 cell formula: 'undefined'\r\n     * const B1Formula = hfInstance.getCellFormula({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    getCellFormula(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        return this._serialization.getCellFormula(cellAddress);\r\n    }\r\n    /**\r\n     * Returns [[RawCellContent]] with a serialized content of the cell of a given address: either a cell formula, an explicit value, or an error.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     * @throws [[ExpectedValueOfTypeError]] when cellAddress is of incorrect type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(1, 2, 3)', '0'],\r\n     * ]);\r\n     *\r\n     * // should return serialized content of A1 cell: '=SUM(1, 2, 3)'\r\n     * const cellA1Serialized = hfInstance.getCellSerialized({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // should return serialized content of B1 cell: '0'\r\n     * const cellB1Serialized = hfInstance.getCellSerialized({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    getCellSerialized(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        this.ensureEvaluationIsNotSuspended();\r\n        return this._serialization.getCellSerialized(cellAddress);\r\n    }\r\n    /**\r\n     * Returns an array of arrays of [[CellValue]] with values of all cells from [[Sheet]].\r\n     * Applies rounding and post-processing.\r\n     *\r\n     * @param {number} sheetId - sheet ID number\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['0', '=SUM(1, 2, 3)', '=A1'],\r\n     *  ['1', '=TEXT(A2, \"0.0%\")', '=C1'],\r\n     *  ['2', '=SUM(A1:C1)', '=C1'],\r\n     * ]);\r\n     *\r\n     * // should return all values of a sheet: [[0, 6, 0], [1, '1.0%', 0], [2, 6, 0]]\r\n     * const sheetValues = hfInstance.getSheetValues(0);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getSheetValues(sheetId) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this.ensureEvaluationIsNotSuspended();\r\n        return this._serialization.getSheetValues(sheetId);\r\n    }\r\n    /**\r\n     * Returns an array with normalized formula strings from [[Sheet]] or `undefined` for a cells that have no value.\r\n     *\r\n     * @param {SimpleCellAddress} sheetId - sheet ID number\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['0', '=SUM(1, 2, 3)', '=A1'],\r\n     *  ['1', '=TEXT(A2, \"0.0%\")', '=C1'],\r\n     *  ['2', '=SUM(A1:C1)', '=C1'],\r\n     * ]);\r\n     *\r\n     * // should return all formulas of a sheet:\r\n     * // [\r\n     * //  [undefined, '=SUM(1, 2, 3)', '=A1'],\r\n     * //  [undefined, '=TEXT(A2, \"0.0%\")', '=C1'],\r\n     * //  [undefined, '=SUM(A1:C1)', '=C1'],\r\n     * // ];\r\n     * const sheetFormulas = hfInstance.getSheetFormulas(0);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getSheetFormulas(sheetId) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        return this._serialization.getSheetFormulas(sheetId);\r\n    }\r\n    /**\r\n     * Returns an array of arrays of [[RawCellContent]] with serialized content of cells from [[Sheet]], either a cell formula or an explicit value.\r\n     *\r\n     * @param {SimpleCellAddress} sheetId - sheet ID number\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['0', '=SUM(1, 2, 3)', '=A1'],\r\n     *  ['1', '=TEXT(A2, \"0.0%\")', '=C1'],\r\n     *  ['2', '=SUM(A1:C1)', '=C1'],\r\n     * ]);\r\n     *\r\n     * // should return:\r\n     * // [\r\n     * //  ['0', '=SUM(1, 2, 3)', '=A1'],\r\n     * //  ['1', '=TEXT(A2, \"0.0%\")', '=C1'],\r\n     * //  ['2', '=SUM(A1:C1)', '=C1'],\r\n     * // ];\r\n     * const serializedContent = hfInstance.getSheetSerialized(0);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getSheetSerialized(sheetId) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this.ensureEvaluationIsNotSuspended();\r\n        return this._serialization.getSheetSerialized(sheetId);\r\n    }\r\n    /**\r\n     * Returns a map containing dimensions of all sheets for the engine instance represented as a key-value pairs where keys are sheet IDs and dimensions are returned as numbers, width and height respectively.\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *   Sheet1: [\r\n     *    ['1', '2', '=Sheet2!$A1'],\r\n     *   ],\r\n     *   Sheet2: [\r\n     *    ['3'],\r\n     *    ['4'],\r\n     *   ],\r\n     * });\r\n     *\r\n     * // should return the dimensions of all sheets:\r\n     * // { Sheet1: { width: 3, height: 1 }, Sheet2: { width: 1, height: 2 } }\r\n     * const allSheetsDimensions = hfInstance.getAllSheetsDimensions();\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getAllSheetsDimensions() {\r\n        return this._serialization.genericAllSheetsGetter((arg) => this.getSheetDimensions(arg));\r\n    }\r\n    /**\r\n     * Returns dimensions of a specified sheet.\r\n     * The sheet dimensions is represented with numbers: width and height.\r\n     *\r\n     * @param {number} sheetId - sheet ID number\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *    ['1', '2', '=Sheet2!$A1'],\r\n     * ]);\r\n     *\r\n     * // should return provided sheet's dimensions: { width: 3, height: 1 }\r\n     * const sheetDimensions = hfInstance.getSheetDimensions(0);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getSheetDimensions(sheetId) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        return {\r\n            width: this.dependencyGraph.getSheetWidth(sheetId),\r\n            height: this.dependencyGraph.getSheetHeight(sheetId),\r\n        };\r\n    }\r\n    /**\r\n     * Returns values of all sheets in a form of an object which property keys are strings and values are 2D arrays of [[CellValue]].\r\n     *\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '=A1+10', '3'],\r\n     * ]);\r\n     *\r\n     * // should return all sheets values: { Sheet1: [ [ 1, 11, 3 ] ] }\r\n     * const allSheetsValues = hfInstance.getAllSheetsValues();\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getAllSheetsValues() {\r\n        this.ensureEvaluationIsNotSuspended();\r\n        return this._serialization.getAllSheetsValues();\r\n    }\r\n    /**\r\n     * Returns formulas of all sheets in a form of an object which property keys are strings and values are 2D arrays of strings or possibly `undefined` when the call does not contain a formula.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2', '=A1+10'],\r\n     * ]);\r\n     *\r\n     * // should return only formulas: { Sheet1: [ [ undefined, undefined, '=A1+10' ] ] }\r\n     * const allSheetsFormulas = hfInstance.getAllSheetsFormulas();\r\n     * ```\r\n     * @category Sheets\r\n     */\r\n    getAllSheetsFormulas() {\r\n        return this._serialization.getAllSheetsFormulas();\r\n    }\r\n    /**\r\n     * Returns formulas or values of all sheets in a form of an object which property keys are strings and values are 2D arrays of [[RawCellContent]].\r\n     *\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2', '=A1+10'],\r\n     * ]);\r\n     *\r\n     * // should return all sheets serialized content: { Sheet1: [ [ 1, 2, '=A1+10' ] ] }\r\n     * const allSheetsSerialized = hfInstance.getAllSheetsSerialized();\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getAllSheetsSerialized() {\r\n        this.ensureEvaluationIsNotSuspended();\r\n        return this._serialization.getAllSheetsSerialized();\r\n    }\r\n    /**\r\n     * Updates the config with given new metadata.\r\n     *\r\n     * @param {Partial<ConfigParams>} newParams configuration options to be updated or added\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] when some parameters of config are of wrong type (e.g. currencySymbol)\r\n     * @throws [[ConfigValueEmpty]] when some parameters of config are of invalid value (e.g. currencySymbol)\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // add a config param, for example maxColumns,\r\n     * // you can check the configuration with getConfig method\r\n     * hfInstance.updateConfig({ maxColumns: 1000 });\r\n     * ```\r\n     *\r\n     * @category Instance\r\n     */\r\n    updateConfig(newParams) {\r\n        const newConfig = this._config.mergeConfig(newParams);\r\n        const configNewLanguage = this._config.mergeConfig({ language: newParams.language });\r\n        const serializedSheets = this._serialization.withNewConfig(configNewLanguage, this._namedExpressions).getAllSheetsSerialized();\r\n        const serializedNamedExpressions = this._serialization.getAllNamedExpressionsSerialized();\r\n        const newEngine = BuildEngineFactory.rebuildWithConfig(newConfig, serializedSheets, serializedNamedExpressions, this._stats);\r\n        this._config = newEngine.config;\r\n        this._stats = newEngine.stats;\r\n        this._dependencyGraph = newEngine.dependencyGraph;\r\n        this._columnSearch = newEngine.columnSearch;\r\n        this._parser = newEngine.parser;\r\n        this._unparser = newEngine.unparser;\r\n        this._cellContentParser = newEngine.cellContentParser;\r\n        this._evaluator = newEngine.evaluator;\r\n        this._lazilyTransformingAstService = newEngine.lazilyTransformingAstService;\r\n        this._crudOperations = newEngine.crudOperations;\r\n        this._exporter = newEngine.exporter;\r\n        this._namedExpressions = newEngine.namedExpressions;\r\n        this._serialization = newEngine.serialization;\r\n        this._functionRegistry = newEngine.functionRegistry;\r\n    }\r\n    /**\r\n     * Returns current configuration of the engine instance.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // should return all config metadata including default and those which were added\r\n     * const hfConfig = hfInstance.getConfig();\r\n     * ```\r\n     *\r\n     * @category Instance\r\n     */\r\n    getConfig() {\r\n        return this._config.getConfig();\r\n    }\r\n    /**\r\n     * Serializes and deserializes whole engine, effectively reloading it.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * hfInstance.rebuildAndRecalculate();\r\n     * ```\r\n     *\r\n     * @category Instance\r\n     */\r\n    rebuildAndRecalculate() {\r\n        this.updateConfig({});\r\n    }\r\n    /**\r\n     * Returns a snapshot of computation time statistics.\r\n     * It returns a map with key-value pairs where keys are enums for stat type and time (number).\r\n     *\r\n     * @internal\r\n     *\r\n     * @category Instance\r\n     */\r\n    getStats() {\r\n        return this._stats.snapshot();\r\n    }\r\n    /**\r\n     * Undo the previous operation.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[NoOperationToUndoError]] when there is no operation running that can be undone\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2'],\r\n     *  ['3', ''],\r\n     * ]);\r\n     *\r\n     * // perform CRUD operation, for example remove the second row\r\n     * hfInstance.removeRows(0, [1, 1]);\r\n     *\r\n     * // undo the operation, it should return the changes\r\n     * const changes = hfInstance.undo();\r\n     * ```\r\n     *\r\n     * @category Undo and Redo\r\n     */\r\n    undo() {\r\n        this._crudOperations.undo();\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Re-do recently undone operation.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[NoOperationToRedoError]] when there is no operation running that can be re-done\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1'],\r\n     *  ['2'],\r\n     *  ['3'],\r\n     * ]);\r\n     *\r\n     * // perform CRUD operation, for example remove the second row\r\n     * hfInstance.removeRows(0, [1, 1]);\r\n     *\r\n     * // undo the operation, it should return previous values: [['1'], ['2'], ['3']]\r\n     * hfInstance.undo();\r\n     *\r\n     * // do a redo, it should return the values after removing the second row: [['1'], ['3']]\r\n     * const changes = hfInstance.redo();\r\n     * ```\r\n     *\r\n     * @category Undo and Redo\r\n     */\r\n    redo() {\r\n        this._crudOperations.redo();\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Checks if there is at least one operation that can be undone.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1'],\r\n     *  ['2'],\r\n     *  ['3'],\r\n     * ]);\r\n     *\r\n     * // perform CRUD operation, for example remove the second row\r\n     * hfInstance.removeRows(0, [1, 1]);\r\n     *\r\n     * // should return 'true', it is possible to undo last operation\r\n     * // which is removing rows in this example\r\n     * const isSomethingToUndo = hfInstance.isThereSomethingToUndo();\r\n     * ```\r\n     *\r\n     * @category Undo and Redo\r\n     */\r\n    isThereSomethingToUndo() {\r\n        return this._crudOperations.isThereSomethingToUndo();\r\n    }\r\n    /**\r\n     * Checks if there is at least one operation that can be re-done.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * hfInstance.undo();\r\n     *\r\n     * // when there is an action to redo, this returns 'true'\r\n     * const isSomethingToRedo = hfInstance.isThereSomethingToRedo();\r\n     * ```\r\n     *\r\n     * @category Undo and Redo\r\n     */\r\n    isThereSomethingToRedo() {\r\n        return this._crudOperations.isThereSomethingToRedo();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to change the content in a rectangular area bounded by the box.\r\n     * If returns `true`, doing [[setCellContents]] operation won't throw any errors.\r\n     * Returns `false` if the address is invalid or the sheet does not exist.\r\n     *\r\n     * @param {SimpleCellAddress | SimpleCellRange} address - single cell or block of cells to check\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // top left corner\r\n     * const address1 = { col: 0, row: 0, sheet: 0 };\r\n     * // bottom right corner\r\n     * const address2 = { col: 1, row: 0, sheet: 0 };\r\n     *\r\n     * // should return 'true' for this example, it is possible to set content of\r\n     * // width 2, height 1 in the first row and column of sheet 0\r\n     * const isSettable = hfInstance.isItPossibleToSetCellContents({ start: address1, end: address2 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    isItPossibleToSetCellContents(address) {\r\n        let range;\r\n        if (isSimpleCellAddress(address)) {\r\n            range = new AbsoluteCellRange(address, address);\r\n        }\r\n        else if (isSimpleCellRange(address)) {\r\n            range = new AbsoluteCellRange(address.start, address.end);\r\n        }\r\n        else {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress | SimpleCellRange', 'address');\r\n        }\r\n        try {\r\n            this._crudOperations.ensureRangeInSizeLimits(range);\r\n            for (const it of range.addresses(this._dependencyGraph)) {\r\n                this._crudOperations.ensureItIsPossibleToChangeContent(it);\r\n            }\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Sets the content for a block of cells of a given coordinates.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {SimpleCellAddress} topLeftCornerAddress - top left corner of block of cells\r\n     * @param {(RawCellContent[][]|RawCellContent)} cellContents - array with content\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[InvalidArgumentsError]] when the value is not an array of arrays or a raw cell value\r\n     * @throws [[SheetSizeLimitExceededError]] when performing this operation would result in sheet size limits exceeding\r\n     * @throws [[ExpectedValueOfTypeError]] if topLeftCornerAddress argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2', '=A1'],\r\n     * ]);\r\n     *\r\n     * // should set the content, returns:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 3, row: 0 },\r\n     * //   newValue: 2,\r\n     * // }]\r\n     * const changes = hfInstance.setCellContents({ col: 3, row: 0, sheet: 0 }, [['=B1']]);\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    setCellContents(topLeftCornerAddress, cellContents) {\r\n        this._crudOperations.setCellContents(topLeftCornerAddress, cellContents);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Reorders rows of a sheet according to a source-target mapping.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - ID of a sheet to operate on\r\n     * @param {[number, number][]} rowMapping - array mapping original positions to final positions of rows\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[InvalidArgumentsError]] when rowMapping does not define correct row permutation for some subset of rows of the given sheet\r\n     * @throws [[SourceLocationHasArrayError]] when the selected position has array inside\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  [1],\r\n     *  [2],\r\n     *  [4, 5],\r\n     * ]);\r\n     *\r\n     * // should set swap rows 0 and 2 in place, returns:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 0, row: 2 },\r\n     * //   newValue: 1,\r\n     * // },\r\n     * // {\r\n     * //   address: { sheet: 0, col: 1, row: 2 },\r\n     * //   newValue: null,\r\n     * // },\r\n     * // {\r\n     * //   address: { sheet: 0, col: 0, row: 0 },\r\n     * //   newValue: 4,\r\n     * // },\r\n     * // {\r\n     * //   address: { sheet: 0, col: 1, row: 0 },\r\n     * //   newValue: 5,\r\n     * // }]\r\n     * const changes = hfInstance.swapRowIndexes(0, [[0, 2], [2, 0]]);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    swapRowIndexes(sheetId, rowMapping) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this._crudOperations.setRowOrder(sheetId, rowMapping);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Checks if it is possible to reorder rows of a sheet according to a source-target mapping.\r\n     *\r\n     * @param {number} sheetId - ID of a sheet to operate on\r\n     * @param {[number, number][]} rowMapping - array mapping original positions to final positions of rows\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  [1],\r\n     *  [2],\r\n     *  [4, 5],\r\n     * ]);\r\n     *\r\n     * // returns true\r\n     * const isSwappable = hfInstance.isItPossibleToSwapRowIndexes(0, [[0, 2], [2, 0]]);\r\n     *\r\n     * // returns false\r\n     * const isSwappable = hfInstance.isItPossibleToSwapRowIndexes(0, [[0, 1]]);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    isItPossibleToSwapRowIndexes(sheetId, rowMapping) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        try {\r\n            this._crudOperations.validateSwapRowIndexes(sheetId, rowMapping);\r\n            this._crudOperations.testRowOrderForArrays(sheetId, rowMapping);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Reorders rows of a sheet according to a permutation of 0-based indexes.\r\n     * Parameter `newRowOrder` should have a form `[ newPositionForRow0, newPositionForRow1, newPositionForRow2, ... ]`.\r\n     * This method might be used to [sort the rows of a sheet](../../guide/sorting-data.md).\r\n     *\r\n     * Note: This method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - ID of a sheet to operate on\r\n     * @param {number[]} newRowOrder - permutation of rows\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[InvalidArgumentsError]] when rowMapping does not define correct row permutation for some subset of rows of the given sheet\r\n     * @throws [[SourceLocationHasArrayError]] when the selected position has array inside\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['A'],\r\n     *  ['B'],\r\n     *  ['C'],\r\n     *  ['D']\r\n     * ]);\r\n     *\r\n     * const newRowOrder = [0, 3, 2, 1]; // [ newPosForA, newPosForB, newPosForC, newPosForD ]\r\n     *\r\n     * const changes = hfInstance.setRowOrder(0, newRowOrder);\r\n     *\r\n     * // Sheet after this operation: [['A'], ['D'], ['C'], ['B']]\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    setRowOrder(sheetId, newRowOrder) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        const mapping = this._crudOperations.mappingFromOrder(sheetId, newRowOrder, 'row');\r\n        return this.swapRowIndexes(sheetId, mapping);\r\n    }\r\n    /**\r\n     * Checks if it is possible to reorder rows of a sheet according to a permutation.\r\n     *\r\n     * @param {number} sheetId - ID of a sheet to operate on\r\n     * @param {number[]} newRowOrder - permutation of rows\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  [1],\r\n     *  [2],\r\n     *  [4, 5],\r\n     * ]);\r\n     *\r\n     * // returns true\r\n     * hfInstance.isItPossibleToSetRowOrder(0, [2, 1, 0]);\r\n     *\r\n     * // returns false\r\n     * hfInstance.isItPossibleToSetRowOrder(0, [2]);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    isItPossibleToSetRowOrder(sheetId, newRowOrder) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        try {\r\n            const rowMapping = this._crudOperations.mappingFromOrder(sheetId, newRowOrder, 'row');\r\n            this._crudOperations.validateSwapRowIndexes(sheetId, rowMapping);\r\n            this._crudOperations.testRowOrderForArrays(sheetId, rowMapping);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Reorders columns of a sheet according to a source-target mapping.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - ID of a sheet to operate on\r\n     * @param {[number, number][]} columnMapping - array mapping original positions to final positions of columns\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[InvalidArgumentsError]] when columnMapping does not define correct column permutation for some subset of columns of the given sheet\r\n     * @throws [[SourceLocationHasArrayError]] when the selected position has array inside\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  [1, 2, 4],\r\n     *  [5]\r\n     * ]);\r\n     *\r\n     * // should set swap columns 0 and 2 in place, returns:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 2, row: 0 },\r\n     * //   newValue: 1,\r\n     * // },\r\n     * // {\r\n     * //   address: { sheet: 0, col: 2, row: 1 },\r\n     * //   newValue: 5,\r\n     * // },\r\n     * // {\r\n     * //   address: { sheet: 0, col: 0, row: 0 },\r\n     * //   newValue: 4,\r\n     * // },\r\n     * // {\r\n     * //   address: { sheet: 0, col: 0, row: 1 },\r\n     * //   newValue: null,\r\n     * // }]\r\n     * const changes = hfInstance.swapColumnIndexes(0, [[0, 2], [2, 0]]);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    swapColumnIndexes(sheetId, columnMapping) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this._crudOperations.setColumnOrder(sheetId, columnMapping);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Checks if it is possible to reorder columns of a sheet according to a source-target mapping.\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  [1, 2, 4],\r\n     *  [5]\r\n     * ]);\r\n     *\r\n     * // returns true\r\n     * hfInstance.isItPossibleToSwapColumnIndexes(0, [[0, 2], [2, 0]]);\r\n     *\r\n     * // returns false\r\n     * hfInstance.isItPossibleToSwapColumnIndexes(0, [[0, 1]]);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    isItPossibleToSwapColumnIndexes(sheetId, columnMapping) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        try {\r\n            this._crudOperations.validateSwapColumnIndexes(sheetId, columnMapping);\r\n            this._crudOperations.testColumnOrderForArrays(sheetId, columnMapping);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Reorders columns of a sheet according to a permutation of 0-based indexes.\r\n     * Parameter `newColumnOrder` should have a form `[ newPositionForColumn0, newPositionForColumn1, newPositionForColumn2, ... ]`.\r\n     * This method might be used to [sort the columns of a sheet](../../guide/sorting-data.md).\r\n     *\r\n     * Note: This method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - ID of a sheet to operate on\r\n     * @param {number[]} newColumnOrder - permutation of columns\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[InvalidArgumentsError]] when columnMapping does not define correct column permutation for some subset of columns of the given sheet\r\n     * @throws [[SourceLocationHasArrayError]] when the selected position has array inside\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *   ['A', 'B', 'C', 'D']\r\n     * ]);\r\n     *\r\n     * const newColumnOrder = [0, 3, 2, 1]; // [ newPosForA, newPosForB, newPosForC, newPosForD ]\r\n     *\r\n     * const changes = hfInstance.setColumnOrder(0, newColumnOrder);\r\n     *\r\n     * // Sheet after this operation: [['A', 'D', 'C', 'B']]\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    setColumnOrder(sheetId, newColumnOrder) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        const mapping = this._crudOperations.mappingFromOrder(sheetId, newColumnOrder, 'column');\r\n        return this.swapColumnIndexes(sheetId, mapping);\r\n    }\r\n    /**\r\n     * Checks if it is possible to reorder columns of a sheet according to a permutation.\r\n     *\r\n     * @param {number} sheetId - ID of a sheet to operate on\r\n     * @param {number[]} newColumnOrder - permutation of columns\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  [1, 2, 4],\r\n     *  [5]\r\n     * ]);\r\n     *\r\n     * // returns true\r\n     * hfInstance.isItPossibleToSetColumnOrder(0, [2, 1, 0]);\r\n     *\r\n     * // returns false\r\n     * hfInstance.isItPossibleToSetColumnOrder(0, [1]);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    isItPossibleToSetColumnOrder(sheetId, newColumnOrder) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        try {\r\n            const columnMapping = this._crudOperations.mappingFromOrder(sheetId, newColumnOrder, 'column');\r\n            this._crudOperations.validateSwapColumnIndexes(sheetId, columnMapping);\r\n            this._crudOperations.testColumnOrderForArrays(sheetId, columnMapping);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to add rows into a specified position in a given sheet.\r\n     * Checks against particular rules to ascertain that addRows can be called.\r\n     * If returns `true`, doing [[addRows]] operation won't throw any errors.\r\n     * Returns `false` if adding rows would exceed the sheet size limit or given arguments are invalid.\r\n     *\r\n     * @param {number} sheetId - sheet ID in which rows will be added\r\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format [row, amount], where row is a row number above which the rows will be added\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2', '3'],\r\n     * ]);\r\n     *\r\n     * // should return 'true' for this example,\r\n     * // it is possible to add one row in the second row of sheet 0\r\n     * const isAddable = hfInstance.isItPossibleToAddRows(0, [1, 1]);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    isItPossibleToAddRows(sheetId, ...indexes) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        const normalizedIndexes = normalizeAddedIndexes(indexes);\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToAddRows(sheetId, ...normalizedIndexes);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Adds multiple rows into a specified position in a given sheet.\r\n     * Does nothing if rows are outside effective sheet size.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - sheet ID in which rows will be added\r\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format [row, amount], where row is a row number above which the rows will be added\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[SheetSizeLimitExceededError]] when performing this operation would result in sheet size limits exceeding\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1'],\r\n     *  ['2'],\r\n     * ]);\r\n     *\r\n     * // should return a list of cells which values changed after the operation,\r\n     * // their absolute addresses and new values\r\n     * const changes = hfInstance.addRows(0, [0, 1]);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    addRows(sheetId, ...indexes) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this._crudOperations.addRows(sheetId, ...indexes);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to remove rows from a specified position in a given sheet.\r\n     * Checks against particular rules to ascertain that removeRows can be called.\r\n     * If returns `true`, doing [[removeRows]] operation won't throw any errors.\r\n     * Returns `false` if given arguments are invalid.\r\n     *\r\n     * @param {number} sheetId - sheet ID from which rows will be removed\r\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format: [row, amount]\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1'],\r\n     *  ['2'],\r\n     * ]);\r\n     *\r\n     * // should return 'true' for this example\r\n     * // it is possible to remove one row from row 1 of sheet 0\r\n     * const isRemovable = hfInstance.isItPossibleToRemoveRows(0, [1, 1]);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    isItPossibleToRemoveRows(sheetId, ...indexes) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        const normalizedIndexes = normalizeRemovedIndexes(indexes);\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToRemoveRows(sheetId, ...normalizedIndexes);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Removes multiple rows from a specified position in a given sheet.\r\n     * Does nothing if rows are outside the effective sheet size.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - sheet ID from which rows will be removed\r\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format: [row, amount]\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1'],\r\n     *  ['2'],\r\n     * ]);\r\n     *\r\n     * // should return: [{ sheet: 0, col: 1, row: 2, value: null }] for this example\r\n     * const changes = hfInstance.removeRows(0, [1, 1]);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    removeRows(sheetId, ...indexes) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this._crudOperations.removeRows(sheetId, ...indexes);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to add columns into a specified position in a given sheet.\r\n     * Checks against particular rules to ascertain that addColumns can be called.\r\n     * If returns `true`, doing [[addColumns]] operation won't throw any errors.\r\n     * Returns `false` if adding columns would exceed the sheet size limit or given arguments are invalid.\r\n     *\r\n     * @param {number} sheetId - sheet ID in which columns will be added\r\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format: [column, amount], where column is a column number from which new columns will be added\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // should return 'true' for this example,\r\n     * // it is possible to add 1 column in sheet 0, at column 1\r\n     * const isAddable = hfInstance.isItPossibleToAddColumns(0, [1, 1]);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    isItPossibleToAddColumns(sheetId, ...indexes) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        const normalizedIndexes = normalizeAddedIndexes(indexes);\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToAddColumns(sheetId, ...normalizedIndexes);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Adds multiple columns into a specified position in a given sheet.\r\n     * Does nothing if the columns are outside the effective sheet size.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - sheet ID in which columns will be added\r\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format: [column, amount], where column is a column number from which new columns will be added\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\r\n     * @throws [[SheetSizeLimitExceededError]] when performing this operation would result in sheet size limits exceeding\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=RAND()', '42'],\r\n     * ]);\r\n     *\r\n     * // should return a list of cells which values changed after the operation,\r\n     * // their absolute addresses and new values, for this example:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 1, row: 0 },\r\n     * //   newValue: 0.92754862796338,\r\n     * // }]\r\n     * const changes = hfInstance.addColumns(0, [0, 1]);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    addColumns(sheetId, ...indexes) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this._crudOperations.addColumns(sheetId, ...indexes);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to remove columns from a specified position in a given sheet.\r\n     * Checks against particular rules to ascertain that removeColumns can be called.\r\n     * If returns `true`, doing [[removeColumns]] operation won't throw any errors.\r\n     * Returns `false` if given arguments are invalid.\r\n     *\r\n     * @param {number} sheetId - sheet ID from which columns will be removed\r\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format [column, amount]\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // should return 'true' for this example\r\n     * // it is possible to remove one column, in place of the second column of sheet 0\r\n     * const isRemovable = hfInstance.isItPossibleToRemoveColumns(0, [1, 1]);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    isItPossibleToRemoveColumns(sheetId, ...indexes) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        const normalizedIndexes = normalizeRemovedIndexes(indexes);\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToRemoveColumns(sheetId, ...normalizedIndexes);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Removes multiple columns from a specified position in a given sheet.\r\n     * Does nothing if columns are outside the effective sheet size.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - sheet ID from which columns will be removed\r\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format: [column, amount]\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['0', '=SUM(1, 2, 3)', '=A1'],\r\n     * ]);\r\n     *\r\n     * // should return a list of cells which values changed after the operation,\r\n     * // their absolute addresses and new values, in this example it will return:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 1, row: 0 },\r\n     * //   newValue: { error: [CellError], value: '#REF!' },\r\n     * // }]\r\n     * const changes = hfInstance.removeColumns(0, [0, 1]);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    removeColumns(sheetId, ...indexes) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this._crudOperations.removeColumns(sheetId, ...indexes);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to move cells to a specified position in a given sheet.\r\n     * Checks against particular rules to ascertain that moveCells can be called.\r\n     * If returns `true`, doing [[moveCells]] operation won't throw any errors.\r\n     * Returns `false` if the operation might be disrupted and causes side effects by the fact that there is an array inside the selected columns, the target location includes an array or the provided address is invalid.\r\n     *\r\n     * @param {SimpleCellRange} source - range for a moved block\r\n     * @param {SimpleCellAddress} destinationLeftCorner - upper left address of the target cell block\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if destinationLeftCorner, source, or any of basic type arguments are of wrong type\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // choose the coordinates and assign them to variables\r\n     * const source = { sheet: 0, col: 1, row: 0 };\r\n     * const destination = { sheet: 0, col: 3, row: 0 };\r\n     *\r\n     * // should return 'true' for this example\r\n     * // it is possible to move a block of width 1 and height 1\r\n     * // from the corner: column 1 and row 0 of sheet 0\r\n     * // into destination corner: column 3, row 0 of sheet 0\r\n     * const isMovable = hfInstance.isItPossibleToMoveCells({ start: source, end: source }, destination);\r\n     * ```\r\n     * @category Cells\r\n     */\r\n    isItPossibleToMoveCells(source, destinationLeftCorner) {\r\n        if (!isSimpleCellAddress(destinationLeftCorner)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'destinationLeftCorner');\r\n        }\r\n        if (!isSimpleCellRange(source)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'source');\r\n        }\r\n        try {\r\n            const range = new AbsoluteCellRange(source.start, source.end);\r\n            this._crudOperations.operations.ensureItIsPossibleToMoveCells(range.start, range.width(), range.height(), destinationLeftCorner);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Moves the content of a cell block from source to the target location.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {SimpleCellRange} source - range for a moved block\r\n     * @param {SimpleCellAddress} destinationLeftCorner - upper left address of the target cell block\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if destinationLeftCorner or source are of wrong type\r\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\r\n     * @throws [[SheetSizeLimitExceededError]] when performing this operation would result in sheet size limits exceeding\r\n     * @throws [[SourceLocationHasArrayError]] when the source location has array inside - array cannot be moved\r\n     * @throws [[TargetLocationHasArrayError]] when the target location has array inside - cells cannot be replaced by the array\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=RAND()', '42'],\r\n     * ]);\r\n     *\r\n     * // choose the coordinates and assign them to variables\r\n     * const source = { sheet: 0, col: 1, row: 0 };\r\n     * const destination = { sheet: 0, col: 3, row: 0 };\r\n     *\r\n     * // should return a list of cells which values changed after the operation,\r\n     * // their absolute addresses and new values, for this example:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 0, row: 0 },\r\n     * //   newValue: 0.93524248002062,\r\n     * // }]\r\n     * const changes = hfInstance.moveCells({ start: source, end: source }, destination);\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    moveCells(source, destinationLeftCorner) {\r\n        if (!isSimpleCellAddress(destinationLeftCorner)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'destinationLeftCorner');\r\n        }\r\n        if (!isSimpleCellRange(source)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'source');\r\n        }\r\n        const range = new AbsoluteCellRange(source.start, source.end);\r\n        this._crudOperations.moveCells(range.start, range.width(), range.height(), destinationLeftCorner);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to move a particular number of rows to a specified position in a given sheet.\r\n     * Checks against particular rules to ascertain that moveRows can be called.\r\n     * If returns `true`, doing [[moveRows]] operation won't throw any errors.\r\n     * Returns `false` if the operation might be disrupted and causes side effects by the fact that there is an array inside the selected rows, the target location includes an array or the provided address is invalid.\r\n     *\r\n     * @param {number} sheetId - a sheet number in which the operation will be performed\r\n     * @param {number} startRow - number of the first row to move\r\n     * @param {number} numberOfRows - number of rows to move\r\n     * @param {number} targetRow - row number before which rows will be moved\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1'],\r\n     *  ['2'],\r\n     * ]);\r\n     *\r\n     * // should return 'true' for this example\r\n     * // it is possible to move one row from row 0 into row 2\r\n     * const isMovable = hfInstance.isItPossibleToMoveRows(0, 0, 1, 2);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    isItPossibleToMoveRows(sheetId, startRow, numberOfRows, targetRow) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        validateArgToType(startRow, 'number', 'startRow');\r\n        validateArgToType(numberOfRows, 'number', 'numberOfRows');\r\n        validateArgToType(targetRow, 'number', 'targetRow');\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToMoveRows(sheetId, startRow, numberOfRows, targetRow);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Moves a particular number of rows to a specified position in a given sheet.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - a sheet number in which the operation will be performed\r\n     * @param {number} startRow - number of the first row to move\r\n     * @param {number} numberOfRows - number of rows to move\r\n     * @param {number} targetRow - row number before which rows will be moved\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\r\n     * @throws [[SourceLocationHasArrayError]] when the source location has array inside - array cannot be moved\r\n     * @throws [[TargetLocationHasArrayError]] when the target location has array inside - cells cannot be replaced by the array\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1'],\r\n     *  ['2'],\r\n     * ]);\r\n     *\r\n     * // should return a list of cells which values changed after the operation,\r\n     * // their absolute addresses and new values\r\n     * const changes = hfInstance.moveRows(0, 0, 1, 2);\r\n     * ```\r\n     *\r\n     * @category Rows\r\n     */\r\n    moveRows(sheetId, startRow, numberOfRows, targetRow) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        validateArgToType(startRow, 'number', 'startRow');\r\n        validateArgToType(numberOfRows, 'number', 'numberOfRows');\r\n        validateArgToType(targetRow, 'number', 'targetRow');\r\n        this._crudOperations.moveRows(sheetId, startRow, numberOfRows, targetRow);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to move a particular number of columns to a specified position in a given sheet.\r\n     * Checks against particular rules to ascertain that moveColumns can be called.\r\n     * If returns `true`, doing [[moveColumns]] operation won't throw any errors.\r\n     * Returns `false` if the operation might be disrupted and causes side effects by the fact that there is an array inside the selected columns, the target location includes an array or the provided address is invalid.\r\n     *\r\n     * @param {number} sheetId - a sheet number in which the operation will be performed\r\n     * @param {number} startColumn - number of the first column to move\r\n     * @param {number} numberOfColumns - number of columns to move\r\n     * @param {number} targetColumn - column number before which columns will be moved\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // should return 'true' for this example\r\n     * // it is possible to move one column from column 1 into column 2 of sheet 0\r\n     * const isMovable = hfInstance.isItPossibleToMoveColumns(0, 1, 1, 2);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    isItPossibleToMoveColumns(sheetId, startColumn, numberOfColumns, targetColumn) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        validateArgToType(startColumn, 'number', 'startColumn');\r\n        validateArgToType(numberOfColumns, 'number', 'numberOfColumns');\r\n        validateArgToType(targetColumn, 'number', 'targetColumn');\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToMoveColumns(sheetId, startColumn, numberOfColumns, targetColumn);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Moves a particular number of columns to a specified position in a given sheet.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - a sheet number in which the operation will be performed\r\n     * @param {number} startColumn - number of the first column to move\r\n     * @param {number} numberOfColumns - number of columns to move\r\n     * @param {number} targetColumn - column number before which columns will be moved\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\r\n     * @throws [[SourceLocationHasArrayError]] when the source location has array inside - array cannot be moved\r\n     * @throws [[TargetLocationHasArrayError]] when the target location has array inside - cells cannot be replaced by the array\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2', '3', '=RAND()', '=SUM(A1:C1)'],\r\n     * ]);\r\n     *\r\n     * // should return a list of cells which values changed after the operation,\r\n     * // their absolute addresses and new values, for this example:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 1, row: 0 },\r\n     * //   newValue: 0.16210054671639,\r\n     * //  }, {\r\n     * //   address: { sheet: 0, col: 4, row: 0 },\r\n     * //   newValue: 6.16210054671639,\r\n     * // }]\r\n     * const changes = hfInstance.moveColumns(0, 1, 1, 2);\r\n     * ```\r\n     *\r\n     * @category Columns\r\n     */\r\n    moveColumns(sheetId, startColumn, numberOfColumns, targetColumn) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        validateArgToType(startColumn, 'number', 'startColumn');\r\n        validateArgToType(numberOfColumns, 'number', 'numberOfColumns');\r\n        validateArgToType(targetColumn, 'number', 'targetColumn');\r\n        this._crudOperations.moveColumns(sheetId, startColumn, numberOfColumns, targetColumn);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Stores a copy of the cell block in internal clipboard for the further paste.\r\n     * Returns the copied values for use in external clipboard.\r\n     *\r\n     * @param {SimpleCellRange} source - rectangle range to copy\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if source is of wrong type\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *   ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // it copies [ [ 2 ] ]\r\n     * const clipboardContent = hfInstance.copy({\r\n     *   start: { sheet: 0, col: 1, row: 0 },\r\n     *   end: { sheet: 0, col: 1, row: 0 },\r\n     * });\r\n     * ```\r\n     *\r\n     * The usage of the internal clipboard is described thoroughly in the [Clipboard Operations guide](../../guide/clipboard-operations.md).\r\n     *\r\n     * @category Clipboard\r\n     */\r\n    copy(source) {\r\n        if (!isSimpleCellRange(source)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'source');\r\n        }\r\n        const range = new AbsoluteCellRange(source.start, source.end);\r\n        this._crudOperations.copy(range.start, range.width(), range.height());\r\n        return this.getRangeValues(source);\r\n    }\r\n    /**\r\n     * Stores information of the cell block in internal clipboard for further paste.\r\n     * Calling [[paste]] right after this method is equivalent to call [[moveCells]].\r\n     * Almost any CRUD operation called after this method will abort the cut operation.\r\n     * Returns the cut values for use in external clipboard.\r\n     *\r\n     * @param {SimpleCellRange} source - rectangle range to cut\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if source is of wrong type\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *   ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // returns the values that were cut: [ [ 1 ] ]\r\n     * const clipboardContent = hfInstance.cut({\r\n     *   start: { sheet: 0, col: 0, row: 0 },\r\n     *   end: { sheet: 0, col: 0, row: 0 },\r\n     * });\r\n     * ```\r\n     *\r\n     * The usage of the internal clipboard is described thoroughly in the [Clipboard Operations guide](../../guide/clipboard-operations.md).\r\n     *\r\n     * @category Clipboard\r\n     */\r\n    cut(source) {\r\n        if (!isSimpleCellRange(source)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'source');\r\n        }\r\n        const range = new AbsoluteCellRange(source.start, source.end);\r\n        this._crudOperations.cut(range.start, range.width(), range.height());\r\n        return this.getRangeValues(source);\r\n    }\r\n    /**\r\n     * When called after [[copy]] it pastes copied values and formulas into a cell block.\r\n     * When called after [[cut]] it performs [[moveCells]] operation into the cell block.\r\n     * Does nothing if the clipboard is empty.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {SimpleCellAddress} targetLeftCorner - upper left address of the target cell block\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     * @throws [[SheetSizeLimitExceededError]] when performing this operation would result in sheet size limits exceeding\r\n     * @throws [[NothingToPasteError]] when clipboard is empty\r\n     * @throws [[TargetLocationHasArrayError]] when the selected target area has array inside\r\n     * @throws [[ExpectedValueOfTypeError]] if targetLeftCorner is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *   ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // [ [ 2 ] ] was copied\r\n     * const clipboardContent = hfInstance.copy({\r\n     *   start: { sheet: 0, col: 1, row: 0 },\r\n     *   end: { sheet: 0, col: 1, row: 0 },\r\n     * });\r\n     *\r\n     * // returns a list of modified cells: their absolute addresses and new values\r\n     * const changes = hfInstance.paste({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * The usage of the internal clipboard is described thoroughly in the [Clipboard Operations guide](../../guide/clipboard-operations.md).\r\n     *\r\n     * @category Clipboard\r\n     */\r\n    paste(targetLeftCorner) {\r\n        if (!isSimpleCellAddress(targetLeftCorner)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'targetLeftCorner');\r\n        }\r\n        this.ensureEvaluationIsNotSuspended();\r\n        this._crudOperations.paste(targetLeftCorner);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Returns information whether there is something in the clipboard.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // copy desired content\r\n     * const clipboardContent = hfInstance.copy({\r\n     *   start: { sheet: 0, col: 1, row: 0 },\r\n     *   end: { sheet: 0, col: 1, row: 0 },\r\n     * });\r\n     *\r\n     * // returns 'false', there is content in the clipboard\r\n     * const isClipboardEmpty = hfInstance.isClipboardEmpty();\r\n     * ```\r\n     *\r\n     * The usage of the internal clipboard is described thoroughly in the [Clipboard Operations guide](../../guide/clipboard-operations.md).\r\n     *\r\n     * @category Clipboard\r\n     */\r\n    isClipboardEmpty() {\r\n        return this._crudOperations.isClipboardEmpty();\r\n    }\r\n    /**\r\n     * Clears the clipboard content.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // clears the clipboard, isClipboardEmpty() should return true if called afterwards\r\n     * hfInstance.clearClipboard();\r\n     * ```\r\n     *\r\n     * The usage of the internal clipboard is described thoroughly in the [Clipboard Operations guide](../../guide/clipboard-operations.md).\r\n     *\r\n     * @category Clipboard\r\n     */\r\n    clearClipboard() {\r\n        this._crudOperations.clearClipboard();\r\n    }\r\n    /**\r\n     * Clears the redo stack in undoRedo history.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *   ['1', '2', '3'],\r\n     * ]);\r\n     *\r\n     * // do an operation, for example remove columns\r\n     * hfInstance.removeColumns(0, [0, 1]);\r\n     *\r\n     * // undo the operation\r\n     * hfInstance.undo();\r\n     *\r\n     * // redo the operation\r\n     * hfInstance.redo();\r\n     *\r\n     * // clear the redo stack\r\n     * hfInstance.clearRedoStack();\r\n     * ```\r\n     *\r\n     * @category Undo and Redo\r\n     */\r\n    clearRedoStack() {\r\n        this._crudOperations.undoRedo.clearRedoStack();\r\n    }\r\n    /**\r\n     * Clears the undo stack in undoRedo history.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *   ['1', '2', '3'],\r\n     * ]);\r\n     *\r\n     * // do an operation, for example remove columns\r\n     * hfInstance.removeColumns(0, [0, 1]);\r\n     *\r\n     * // undo the operation\r\n     * hfInstance.undo();\r\n     *\r\n     * // clear the undo stack\r\n     * hfInstance.clearUndoStack();\r\n     * ```\r\n     *\r\n     * @category Undo and Redo\r\n     */\r\n    clearUndoStack() {\r\n        this._crudOperations.undoRedo.clearUndoStack();\r\n    }\r\n    /**\r\n     * Returns the cell content of a given range in a [[CellValue]][][] format.\r\n     *\r\n     * @param {SimpleCellRange} source - rectangular range\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if source is of wrong type\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(1, 2)', '2', '10'],\r\n     *  ['5', '6', '7'],\r\n     *  ['40', '30', '20'],\r\n     * ]);\r\n     *\r\n     *\r\n     * // returns calculated cells content: [ [ 3, 2 ], [ 5, 6 ] ]\r\n     * const rangeValues = hfInstance.getRangeValues({ start: { sheet: 0, col: 0, row: 0 }, end: { sheet: 0, col: 1, row: 1 } });\r\n     * ```\r\n     *\r\n     * @category Ranges\r\n     */\r\n    getRangeValues(source) {\r\n        if (!isSimpleCellRange(source)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'source');\r\n        }\r\n        const cellRange = new AbsoluteCellRange(source.start, source.end);\r\n        return cellRange.arrayOfAddressesInRange().map((subarray) => subarray.map((address) => this.getCellValue(address)));\r\n    }\r\n    /**\r\n     * Returns cell formulas in given range.\r\n     *\r\n     * @param {SimpleCellRange} source - rectangular range\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if source is of wrong type\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(1, 2)', '2', '10'],\r\n     *  ['5', '6', '7'],\r\n     *  ['40', '30', '20'],\r\n     * ]);\r\n     *\r\n     * // returns cell formulas of a given range only:\r\n     * // [ [ '=SUM(1, 2)', undefined ], [ undefined, undefined ] ]\r\n     * const rangeFormulas = hfInstance.getRangeFormulas({ start: { sheet: 0, col: 0, row: 0 }, end: { sheet: 0, col: 1, row: 1 } });\r\n     * ```\r\n     *\r\n     * @category Ranges\r\n     */\r\n    getRangeFormulas(source) {\r\n        if (!isSimpleCellRange(source)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'source');\r\n        }\r\n        const cellRange = new AbsoluteCellRange(source.start, source.end);\r\n        return cellRange.arrayOfAddressesInRange().map((subarray) => subarray.map((address) => this.getCellFormula(address)));\r\n    }\r\n    /**\r\n     * Returns serialized cells in given range.\r\n     *\r\n     * @param {SimpleCellRange} source - rectangular range\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if source is of wrong type\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(1, 2)', '2', '10'],\r\n     *  ['5', '6', '7'],\r\n     *  ['40', '30', '20'],\r\n     * ]);\r\n     *\r\n     * // should return serialized cell content for the given range:\r\n     * // [ [ '=SUM(1, 2)', 2 ], [ 5, 6 ] ]\r\n     * const rangeSerialized = hfInstance.getRangeSerialized({ start: { sheet: 0, col: 0, row: 0 }, end: { sheet: 0, col: 1, row: 1 } });\r\n     * ```\r\n     *\r\n     * @category Ranges\r\n     */\r\n    getRangeSerialized(source) {\r\n        if (!isSimpleCellRange(source)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'source');\r\n        }\r\n        const cellRange = new AbsoluteCellRange(source.start, source.end);\r\n        return cellRange.arrayOfAddressesInRange().map((subarray) => subarray.map((address) => this.getCellSerialized(address)));\r\n    }\r\n    /**\r\n     * Returns values to fill target range using source range, with properly extending the range using wrap-around heuristic.\r\n     *\r\n     * @param {SimpleCellRange} source of data\r\n     * @param {SimpleCellRange} target range where data is intended to be put\r\n     * @param {boolean} offsetsFromTarget if true, offsets are computed from target corner, otherwise from source corner\r\n     *\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     * @throws [[ExpectedValueOfTypeError]] if source or target are of wrong type\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([[1, '=A1'], ['=$A$1', '2']]);\r\n     *\r\n     * // should return [['2', '=$A$1', '2'], ['=A3', 1, '=C3'], ['2', '=$A$1', '2']]\r\n     * hfInstance.getFillRangeData( {start: {sheet: 0, row: 0, col: 0}, end: {sheet: 0, row: 1, col: 1}},\r\n     * {start: {sheet: 0, row: 1, col: 1}, end: {sheet: 0, row: 3, col: 3}});\r\n     * ```\r\n     *\r\n     * @category Ranges\r\n     */\r\n    getFillRangeData(source, target, offsetsFromTarget = false) {\r\n        if (!isSimpleCellRange(source)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'source');\r\n        }\r\n        if (!isSimpleCellRange(target)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'target');\r\n        }\r\n        const sourceRange = new AbsoluteCellRange(source.start, source.end);\r\n        const targetRange = new AbsoluteCellRange(target.start, target.end);\r\n        this.ensureEvaluationIsNotSuspended();\r\n        return targetRange.arrayOfAddressesInRange().map((subarray) => subarray.map((address) => {\r\n            const row = ((address.row - (offsetsFromTarget ? target : source).start.row) % sourceRange.height() + sourceRange.height()) % sourceRange.height() + source.start.row;\r\n            const col = ((address.col - (offsetsFromTarget ? target : source).start.col) % sourceRange.width() + sourceRange.width()) % sourceRange.width() + source.start.col;\r\n            return this._serialization.getCellSerialized({ row, col, sheet: sourceRange.sheet }, address);\r\n        }));\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to add a sheet to the engine.\r\n     * Checks against particular rules to ascertain that addSheet can be called.\r\n     * If returns `true`, doing [[addSheet]] operation won't throw any errors, and it is possible to add sheet with provided name.\r\n     * Returns `false` if the chosen name is already used.\r\n     *\r\n     * @param {string} sheetName - sheet name, case-insensitive\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *   MySheet1: [ ['1'] ],\r\n     *   MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return 'false' because 'MySheet2' already exists\r\n     * const isAddable = hfInstance.isItPossibleToAddSheet('MySheet2');\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    isItPossibleToAddSheet(sheetName) {\r\n        validateArgToType(sheetName, 'string', 'sheetName');\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToAddSheet(sheetName);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Adds a new sheet to the HyperFormula instance. Returns given or autogenerated name of a new sheet.\r\n     *\r\n     * @param {string} [sheetName] - if not specified, name is autogenerated\r\n     *\r\n     * @fires [[sheetAdded]] after the sheet was added\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[SheetNameAlreadyTakenError]] when sheet with a given name already exists\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return 'MySheet3'\r\n     * const nameProvided = hfInstance.addSheet('MySheet3');\r\n     *\r\n     * // should return autogenerated 'Sheet4'\r\n     * // because no name was provided and 3 other ones already exist\r\n     * const generatedName = hfInstance.addSheet();\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    addSheet(sheetName) {\r\n        if (sheetName !== undefined) {\r\n            validateArgToType(sheetName, 'string', 'sheetName');\r\n        }\r\n        const addedSheetName = this._crudOperations.addSheet(sheetName);\r\n        this._emitter.emit(Events.SheetAdded, addedSheetName);\r\n        return addedSheetName;\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to remove sheet for the engine.\r\n     * Returns `true` if the provided sheet exists, and therefore it can be removed, doing [[removeSheet]] operation won't throw any errors.\r\n     * Returns `false` otherwise\r\n     *\r\n     * @param {number} sheetId - sheet ID.\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return 'true' because sheet with ID 1 exists and is removable\r\n     * const isRemovable = hfInstance.isItPossibleToRemoveSheet(1);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    isItPossibleToRemoveSheet(sheetId) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        try {\r\n            this._crudOperations.ensureScopeIdIsValid(sheetId);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Removes a sheet\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - sheet ID.\r\n     *\r\n     * @fires [[sheetRemoved]] after the sheet was removed\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['=SUM(MySheet2!A1:A2)'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return a list of cells which values changed after the operation,\r\n     * // their absolute addresses and new values, in this example it will return:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 0, row: 0 },\r\n     * //   newValue: { error: [CellError], value: '#REF!' },\r\n     * // }]\r\n     * const changes = hfInstance.removeSheet(1);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    removeSheet(sheetId) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        const displayName = this.sheetMapping.getDisplayName(sheetId);\r\n        this._crudOperations.removeSheet(sheetId);\r\n        const changes = this.recomputeIfDependencyGraphNeedsIt();\r\n        this._emitter.emit(Events.SheetRemoved, displayName, changes);\r\n        return changes;\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to clear a specified sheet.\r\n     * If returns `true`, doing [[clearSheet]] operation won't throw any errors, provided sheet exists and its content can be cleared.\r\n     * Returns `false` otherwise\r\n     *\r\n     * @param {number} sheetId - sheet ID.\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return 'true' because 'MySheet2' exists and can be cleared\r\n     * const isClearable = hfInstance.isItPossibleToClearSheet(1);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    isItPossibleToClearSheet(sheetId) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        try {\r\n            this._crudOperations.ensureScopeIdIsValid(sheetId);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Clears the sheet content. Double-checks if the sheet exists.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {number} sheetId - sheet ID.\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['=SUM(MySheet2!A1:A2)'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return a list of cells which values changed after the operation,\r\n     * // their absolute addresses and new values, in this example it will return:\r\n     * // [{\r\n     * //   address: { sheet: 0, col: 0, row: 0 },\r\n     * //   newValue: 0,\r\n     * // }]\r\n     * const changes = hfInstance.clearSheet(0);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    clearSheet(sheetId) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this._crudOperations.clearSheet(sheetId);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to replace the sheet content.\r\n     * If returns `true`, doing [[setSheetContent]] operation won't throw any errors, the provided sheet exists and then its content can be replaced.\r\n     * Returns `false` otherwise\r\n     *\r\n     * @param {number} sheetId - sheet ID.\r\n     * @param {RawCellContent[][]} values - array of new values\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return 'true' because sheet of ID 0 exists\r\n     * // and the provided content can be placed in this sheet\r\n     * const isReplaceable = hfInstance.isItPossibleToReplaceSheetContent(0, [['50'], ['60']]);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    isItPossibleToReplaceSheetContent(sheetId, values) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        try {\r\n            this._crudOperations.ensureScopeIdIsValid(sheetId);\r\n            this._crudOperations.ensureItIsPossibleToChangeSheetContents(sheetId, values);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Replaces the sheet content with new values.\r\n     *\r\n     * @param {number} sheetId - sheet ID.\r\n     * @param {RawCellContent[][]} values - array of new values\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[InvalidArgumentsError]] when values argument is not an array of arrays\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return a list of cells which values changed after the operation,\r\n     * // their absolute addresses and new values\r\n     * const changes = hfInstance.setSheetContent(0, [['50'], ['60']]);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    setSheetContent(sheetId, values) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this._crudOperations.setSheetContent(sheetId, values);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Computes simple (absolute) address of a cell address based on its string representation.\r\n     * If sheet name is present in string representation but not present in the engine, returns `undefined`.\r\n     *\r\n     * @param {string} cellAddress - string representation of cell address in A1 notation\r\n     * @param {number} sheetId - context used in case of missing sheet in the first argument\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     * hfInstance.addSheet('Sheet0'); //sheetId = 0\r\n     *\r\n     * // returns { sheet: 0, col: 0, row: 0 }\r\n     * const simpleCellAddress = hfInstance.simpleCellAddressFromString('A1', 0);\r\n     *\r\n     * // returns { sheet: 0, col: 0, row: 5 }\r\n     * const simpleCellAddressTwo = hfInstance.simpleCellAddressFromString('Sheet1!A6');\r\n     *\r\n     * // returns { sheet: 0, col: 0, row: 5 }\r\n     * const simpleCellAddressTwo = hfInstance.simpleCellAddressFromString('Sheet1!$A$6');\r\n     *\r\n     * // returns 'undefined', as there's no 'Sheet 2' in the HyperFormula instance\r\n     * const simpleCellAddressTwo = hfInstance.simpleCellAddressFromString('Sheet2!A6');\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    simpleCellAddressFromString(cellAddress, sheetId) {\r\n        validateArgToType(cellAddress, 'string', 'cellAddress');\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        return simpleCellAddressFromString(this.sheetMapping.get, cellAddress, sheetId);\r\n    }\r\n    /**\r\n     * Computes simple (absolute) address of a cell range based on its string representation.\r\n     * If sheet name is present in string representation but not present in the engine, returns `undefined`.\r\n     *\r\n     * @param {string} cellRange - string representation of cell range in A1 notation\r\n     * @param {number} sheetId - context used in case of missing sheet in the first argument\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     * hfInstance.addSheet('Sheet0'); //sheetId = 0\r\n     *\r\n     * // should return { start: { sheet: 0, col: 0, row: 0 }, end: { sheet: 0, col: 1, row: 0 } }\r\n     * const simpleCellAddress = hfInstance.simpleCellRangeFromString('A1:A2', 0);\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    simpleCellRangeFromString(cellRange, sheetId) {\r\n        validateArgToType(cellRange, 'string', 'cellRange');\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        return simpleCellRangeFromString(this.sheetMapping.get, cellRange, sheetId);\r\n    }\r\n    /**\r\n     * Returns string representation of an absolute address in A1 notation or `undefined` if the sheet index is not present in the engine.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - object representation of an absolute address\r\n     * @param {number} sheetId - context used in case of missing sheet in the first argument\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if its arguments are of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     * hfInstance.addSheet('Sheet0'); //sheetId = 0\r\n     *\r\n     * // should return 'B2'\r\n     * const A1Notation = hfInstance.simpleCellAddressToString({ sheet: 0, col: 1, row: 1 }, 0);\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    simpleCellAddressToString(cellAddress, sheetId) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        return simpleCellAddressToString(this.sheetMapping.fetchDisplayName, cellAddress, sheetId);\r\n    }\r\n    /**\r\n     * Returns string representation of an absolute range in A1 notation or `undefined` if the sheet index is not present in the engine.\r\n     *\r\n     * @param {SimpleCellRange} cellRange - object representation of an absolute range\r\n     * @param {number} sheetId - context used in case of missing sheet in the first argument\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if its arguments are of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     * hfInstance.addSheet('Sheet0'); //sheetId = 0\r\n     * hfInstance.addSheet('Sheet1'); //sheetId = 1\r\n     *\r\n     * // should return 'B2:C2'\r\n     * const A1Notation = hfInstance.simpleCellRangeToString({ start: { sheet: 0, col: 1, row: 1 }, end: { sheet: 0, col: 2, row: 1 } }, 0);\r\n     *\r\n     *  // should return 'Sheet1!B2:C2'\r\n     * const another = hfInstance.simpleCellRangeToString({ start: { sheet: 1, col: 1, row: 1 }, end: { sheet: 1, col: 2, row: 1 } }, 0);\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    simpleCellRangeToString(cellRange, sheetId) {\r\n        if (!isSimpleCellRange(cellRange)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellRange', 'cellRange');\r\n        }\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        return simpleCellRangeToString(this.sheetMapping.fetchDisplayName, cellRange, sheetId);\r\n    }\r\n    /**\r\n     * Returns all the out-neighbors in the [dependency graph](../../guide/dependency-graph.md) for a given cell address or range. Including:\r\n     * - All cells with formulas that contain the given cell address or range\r\n     * - Some of the ranges that contain the given cell address or range\r\n     *\r\n     * The exact result depends on the optimizations applied by the HyperFormula to the dependency graph, some of which are described in the section [\"Optimizations for large ranges\"](../../guide/dependency-graph.md#optimizations-for-large-ranges).\r\n     *\r\n     * @param {SimpleCellAddress | SimpleCellRange} address - object representation of an absolute address or range of addresses\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if address is not [[SimpleCellAddress]] or [[SimpleCellRange]]\r\n     * @throws [[SheetsNotEqual]] if range provided has distinct sheet numbers for start and end\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray( [ ['1', '=A1', '=A1+B1'] ] );\r\n     *\r\n     * hfInstance.getCellDependents({ sheet: 0, col: 0, row: 0});\r\n     * // returns [{ sheet: 0, col: 1, row: 0}, { sheet: 0, col: 2, row: 0}]\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    getCellDependents(address) {\r\n        let vertex;\r\n        if (isSimpleCellAddress(address)) {\r\n            vertex = this._dependencyGraph.addressMapping.getCell(address);\r\n        }\r\n        else if (isSimpleCellRange(address)) {\r\n            vertex = this._dependencyGraph.rangeMapping.getRange(address.start, address.end);\r\n        }\r\n        else {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress | SimpleCellRange', address);\r\n        }\r\n        if (vertex === undefined) {\r\n            return [];\r\n        }\r\n        return this._dependencyGraph.getAdjacentNodesAddresses(vertex);\r\n    }\r\n    /**\r\n     * Returns all the in-neighbors in the [dependency graph](../../guide/dependency-graph.md) for a given cell address or range. In particular:\r\n     * - If the argument is a single cell, `getCellPrecedents()` returns all cells and ranges contained in that cell's formula.\r\n     * - If the argument is a range of cells, `getCellPrecedents()` returns some of the cell addresses and smaller ranges contained in that range (but not all of them). The exact result depends on the optimizations applied by the HyperFormula to the dependency graph, some of which are described in the section [\"Optimizations for large ranges\"](../../guide/dependency-graph.md#optimizations-for-large-ranges).\r\n     *\r\n     * @param {SimpleCellAddress | SimpleCellRange} address - object representation of an absolute address or range of addresses\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if address is of wrong type\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray( [ ['1', '=A1', '=A1+B1'] ] );\r\n     *\r\n     * hfInstance.getCellPrecedents({ sheet: 0, col: 2, row: 0});\r\n     * // returns [{ sheet: 0, col: 0, row: 0}, { sheet: 0, col: 1, row: 0}]\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    getCellPrecedents(address) {\r\n        let vertex;\r\n        if (isSimpleCellAddress(address)) {\r\n            vertex = this._dependencyGraph.addressMapping.getCell(address);\r\n        }\r\n        else if (isSimpleCellRange(address)) {\r\n            vertex = this._dependencyGraph.rangeMapping.getRange(address.start, address.end);\r\n        }\r\n        else {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress | SimpleCellRange', address);\r\n        }\r\n        if (vertex === undefined) {\r\n            return [];\r\n        }\r\n        return this._dependencyGraph.dependencyQueryAddresses(vertex);\r\n    }\r\n    /**\r\n     * Returns a unique sheet name assigned to the sheet of a given ID or `undefined` if the there is no sheet with a given ID.\r\n     *\r\n     * @param {number} sheetId - ID of the sheet, for which we want to retrieve name\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return 'MySheet2' as this sheet is the second one\r\n     * const sheetName = hfInstance.getSheetName(1);\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getSheetName(sheetId) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        return this.sheetMapping.getDisplayName(sheetId);\r\n    }\r\n    /**\r\n     * List all sheet names.\r\n     * Returns an array of sheet names as strings.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return all sheets names: ['MySheet1', 'MySheet2']\r\n     * const sheetNames = hfInstance.getSheetNames();\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getSheetNames() {\r\n        return this.sheetMapping.sheetNames();\r\n    }\r\n    /**\r\n     * Returns a unique sheet ID assigned to the sheet with a given name or `undefined` if the sheet does not exist.\r\n     *\r\n     * @param {string} sheetName - name of the sheet, for which we want to retrieve ID, case-insensitive.\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *   MySheet1: [ ['1'] ],\r\n     *   MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return '0' because 'MySheet1' is of ID '0'\r\n     * const sheetID = hfInstance.getSheetId('MySheet1');\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    getSheetId(sheetName) {\r\n        validateArgToType(sheetName, 'string', 'sheetName');\r\n        return this.sheetMapping.get(sheetName);\r\n    }\r\n    /**\r\n     * Returns `true` whether sheet with a given name exists. The method accepts sheet name to be checked.\r\n     *\r\n     * @param {string} sheetName - name of the sheet, case-insensitive.\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *   MySheet1: [ ['1'] ],\r\n     *   MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // should return 'true' since 'MySheet1' exists\r\n     * const sheetExist = hfInstance.doesSheetExist('MySheet1');\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    doesSheetExist(sheetName) {\r\n        validateArgToType(sheetName, 'string', 'sheetName');\r\n        return this.sheetMapping.hasSheetWithName(sheetName);\r\n    }\r\n    /**\r\n     * Returns the type of a cell at a given address.\r\n     * The method accepts cell coordinates as object with column, row and sheet numbers.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if cellAddress is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(A2:A3)', '2'],\r\n     * ]);\r\n     *\r\n     * // should return 'FORMULA', the cell of given coordinates is of this type\r\n     * const cellA1Type = hfInstance.getCellType({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // should return 'VALUE', the cell of given coordinates is of this type\r\n     * const cellB1Type = hfInstance.getCellType({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    getCellType(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        const vertex = this.dependencyGraph.getCell(cellAddress);\r\n        return getCellType(vertex, cellAddress);\r\n    }\r\n    /**\r\n     * Returns `true` if the specified cell contains a simple value.\r\n     * The method accepts cell coordinates as object with column, row and sheet numbers.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if cellAddress is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(A2:A3)', '2'],\r\n     * ]);\r\n     *\r\n     * // should return 'true' since the selected cell contains a simple value\r\n     * const isA1Simple = hfInstance.doesCellHaveSimpleValue({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // should return 'false' since the selected cell does not contain a simple value\r\n     * const isB1Simple = hfInstance.doesCellHaveSimpleValue({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    doesCellHaveSimpleValue(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        return this.getCellType(cellAddress) === CellType.VALUE;\r\n    }\r\n    /**\r\n     * Returns `true` if the specified cell contains a formula.\r\n     * The method accepts cell coordinates as object with column, row and sheet numbers.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if cellAddress is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(A2:A3)', '2'],\r\n     * ]);\r\n     *\r\n     * // should return 'true' since the A1 cell contains a formula\r\n     * const A1Formula = hfInstance.doesCellHaveFormula({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // should return 'false' since the B1 cell does not contain a formula\r\n     * const B1NoFormula = hfInstance.doesCellHaveFormula({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    doesCellHaveFormula(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        const cellType = this.getCellType(cellAddress);\r\n        return cellType === CellType.FORMULA || cellType === CellType.ARRAYFORMULA;\r\n    }\r\n    /**\r\n     * Returns`true` if the specified cell is empty.\r\n     * The method accepts cell coordinates as object with column, row and sheet numbers.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if cellAddress is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *   [null, '1'],\r\n     * ]);\r\n     *\r\n     * // should return 'true', cell of provided coordinates is empty\r\n     * const isEmpty = hfInstance.isCellEmpty({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // should return 'false', cell of provided coordinates is not empty\r\n     * const isNotEmpty = hfInstance.isCellEmpty({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    isCellEmpty(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        return this.getCellType(cellAddress) === CellType.EMPTY;\r\n    }\r\n    /**\r\n     * Returns `true` if a given cell is a part of an array.\r\n     * The method accepts cell coordinates as object with column, row and sheet numbers.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[ExpectedValueOfTypeError]] if cellAddress is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *    ['{=TRANSPOSE(B1:B1)}'],\r\n     * ]);\r\n     *\r\n     * // should return 'true', cell of provided coordinates is a part of an array\r\n     * const isPartOfArray = hfInstance.isCellPartOfArray({ sheet: 0, col: 0, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    isCellPartOfArray(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        const cellType = this.getCellType(cellAddress);\r\n        return cellType === CellType.ARRAY || cellType === CellType.ARRAYFORMULA;\r\n    }\r\n    /**\r\n     * Returns type of the cell value of a given address.\r\n     * The method accepts cell coordinates as object with column, row and sheet numbers.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     * @throws [[ExpectedValueOfTypeError]] if cellAddress is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['=SUM(1, 2, 3)', '2'],\r\n     * ]);\r\n     *\r\n     * // should return 'NUMBER', cell value type of provided coordinates is a number\r\n     * const cellValue = hfInstance.getCellValueType({ sheet: 0, col: 1, row: 0 });\r\n     *\r\n     * // should return 'NUMBER', cell value type of provided coordinates is a number\r\n     * const cellValue = hfInstance.getCellValueType({ sheet: 0, col: 0, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    getCellValueType(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        this.ensureEvaluationIsNotSuspended();\r\n        const value = this.dependencyGraph.getCellValue(cellAddress);\r\n        return getCellValueType(value);\r\n    }\r\n    /**\r\n     * Returns detailed type of the cell value of a given address.\r\n     * The method accepts cell coordinates as object with column, row and sheet numbers.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     * @throws [[ExpectedValueOfTypeError]] if cellAddress is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1%', '1$'],\r\n     * ]);\r\n     *\r\n     * // should return 'NUMBER_PERCENT', cell value type of provided coordinates is a number with a format inference percent.\r\n     * const cellType = hfInstance.getCellValueDetailedType({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // should return 'NUMBER_CURRENCY', cell value type of provided coordinates is a number with a format inference currency.\r\n     * const cellType = hfInstance.getCellValueDetailedType({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    getCellValueDetailedType(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        this.ensureEvaluationIsNotSuspended();\r\n        const value = this.dependencyGraph.getCellValue(cellAddress);\r\n        return getCellValueDetailedType(value);\r\n    }\r\n    /**\r\n     * Returns auxiliary format information of the cell value of a given address.\r\n     * The method accepts cell coordinates as object with column, row and sheet numbers.\r\n     *\r\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\r\n     *\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\r\n     * @throws [[ExpectedValueOfTypeError]] if cellAddress is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1$', '1'],\r\n     * ]);\r\n     *\r\n     * // should return '$', cell value type of provided coordinates is a number with a format inference currency, parsed as using '$' as currency.\r\n     * const cellFormat = hfInstance.getCellValueFormat({ sheet: 0, col: 0, row: 0 });\r\n     *\r\n     * // should return undefined, cell value type of provided coordinates is a number with no format information.\r\n     * const cellFormat = hfInstance.getCellValueFormat({ sheet: 0, col: 1, row: 0 });\r\n     * ```\r\n     *\r\n     * @category Cells\r\n     */\r\n    getCellValueFormat(cellAddress) {\r\n        if (!isSimpleCellAddress(cellAddress)) {\r\n            throw new ExpectedValueOfTypeError('SimpleCellAddress', 'cellAddress');\r\n        }\r\n        this.ensureEvaluationIsNotSuspended();\r\n        const value = this.dependencyGraph.getCellValue(cellAddress);\r\n        return getCellValueFormat(value);\r\n    }\r\n    /**\r\n     * Returns the number of existing sheets.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['1', '2'],\r\n     * ]);\r\n     *\r\n     * // should return the number of sheets which is '1'\r\n     * const sheetsCount = hfInstance.countSheets();\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    countSheets() {\r\n        return this.sheetMapping.numberOfSheets();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to rename sheet.\r\n     * Returns `true` if the sheet with provided id exists and new name is available\r\n     * Returns `false` if sheet cannot be renamed\r\n     *\r\n     * @param {number} sheetId - a sheet number\r\n     * @param {string} newName - a name of the sheet to be given\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *   MySheet1: [ ['1'] ],\r\n     *   MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // returns true\r\n     * hfInstance.isItPossibleToRenameSheet(0, 'MySheet0');\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    isItPossibleToRenameSheet(sheetId, newName) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        validateArgToType(newName, 'string', 'newName');\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToRenameSheet(sheetId, newName);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Renames a specified sheet.\r\n     *\r\n     * @param {number} sheetId - a sheet ID\r\n     * @param {string} newName - a name of the sheet to be given, if is the same as the old one the method does nothing\r\n     *\r\n     * @fires [[sheetRenamed]] after the sheet was renamed\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\r\n     * @throws [[SheetNameAlreadyTakenError]] when the provided sheet name already exists\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *   MySheet1: [ ['1'] ],\r\n     *   MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // renames the sheet 'MySheet1'\r\n     * hfInstance.renameSheet(0, 'MySheet0');\r\n     * ```\r\n     *\r\n     * @category Sheets\r\n     */\r\n    renameSheet(sheetId, newName) {\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        validateArgToType(newName, 'string', 'newName');\r\n        const oldName = this._crudOperations.renameSheet(sheetId, newName);\r\n        if (oldName !== undefined) {\r\n            this._emitter.emit(Events.SheetRenamed, oldName, newName);\r\n        }\r\n    }\r\n    /**\r\n     * Runs multiple operations and recomputes formulas at the end.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {() => void} batchOperations\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     * @fires [[evaluationSuspended]] always\r\n     * @fires [[evaluationResumed]] after the recomputation of necessary values\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // multiple operations in a single callback will trigger evaluation only once\r\n     * // and only one set of changes is returned as a combined result of all\r\n     * // the operations that were triggered within the callback\r\n     * const changes = hfInstance.batch(() => {\r\n     *  hfInstance.setCellContents({ col: 3, row: 0, sheet: 0 }, [['=B1']]);\r\n     *  hfInstance.setCellContents({ col: 4, row: 0, sheet: 0 }, [['=A1']]);\r\n     * });\r\n     * ```\r\n     *\r\n     * @category Batch\r\n     */\r\n    batch(batchOperations) {\r\n        this.suspendEvaluation();\r\n        this._crudOperations.beginUndoRedoBatchMode();\r\n        try {\r\n            batchOperations();\r\n        }\r\n        catch (e) {\r\n            this._crudOperations.commitUndoRedoBatchMode();\r\n            this.resumeEvaluation();\r\n            throw (e);\r\n        }\r\n        this._crudOperations.commitUndoRedoBatchMode();\r\n        return this.resumeEvaluation();\r\n    }\r\n    /**\r\n     * Suspends the dependency graph recalculation.\r\n     * It allows optimizing the performance.\r\n     * With this method, multiple CRUD operations can be done without triggering recalculation after every operation.\r\n     * Suspending evaluation should result in an overall faster calculation compared to recalculating after each operation separately.\r\n     * To resume the evaluation use [[resumeEvaluation]].\r\n     *\r\n     * @fires [[evaluationSuspended]] always\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // similar to batch() but operations are not within a callback,\r\n     * // one method suspends the recalculation\r\n     * // the second will resume calculations and return the changes\r\n     *\r\n     * // suspend the evaluation with this method\r\n     * hfInstance.suspendEvaluation();\r\n     *\r\n     * // perform operations\r\n     * hfInstance.setCellContents({ col: 3, row: 0, sheet: 0 }, [['=B1']]);\r\n     * hfInstance.setSheetContent(1, [['50'], ['60']]);\r\n     *\r\n     * // use resumeEvaluation to resume\r\n     * const changes = hfInstance.resumeEvaluation();\r\n     * ```\r\n     *\r\n     * @category Batch\r\n     */\r\n    suspendEvaluation() {\r\n        this._evaluationSuspended = true;\r\n        this._emitter.emit(Events.EvaluationSuspended);\r\n    }\r\n    /**\r\n     * Resumes the dependency graph recalculation that was suspended with [[suspendEvaluation]].\r\n     * It also triggers the recalculation and returns changes that are a result of all batched operations.\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     * @fires [[evaluationResumed]] after the recomputation of necessary values\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  MySheet1: [ ['1'] ],\r\n     *  MySheet2: [ ['10'] ],\r\n     * });\r\n     *\r\n     * // similar to batch() but operations are not within a callback,\r\n     * // one method suspends the recalculation\r\n     * // the second will resume calculations and return the changes\r\n     *\r\n     * // first, suspend the evaluation\r\n     * hfInstance.suspendEvaluation();\r\n     *\r\n     * // perform operations\r\n     * hfInstance.setCellContents({ col: 3, row: 0, sheet: 0 }, [['=B1']]);\r\n     * hfInstance.setSheetContent(1, [['50'], ['60']]);\r\n     *\r\n     * // resume the evaluation\r\n     * const changes = hfInstance.resumeEvaluation();\r\n     * ```\r\n     *\r\n     * @category Batch\r\n     */\r\n    resumeEvaluation() {\r\n        this._evaluationSuspended = false;\r\n        const changes = this.recomputeIfDependencyGraphNeedsIt();\r\n        this._emitter.emit(Events.EvaluationResumed, changes);\r\n        return changes;\r\n    }\r\n    /**\r\n     * Checks if the dependency graph recalculation process is suspended or not.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // suspend the evaluation\r\n     * hfInstance.suspendEvaluation();\r\n     *\r\n     * // between suspendEvaluation() and resumeEvaluation()\r\n     * // or inside batch() callback it will return 'true', otherwise 'false'\r\n     * const isEvaluationSuspended = hfInstance.isEvaluationSuspended();\r\n     *\r\n     * const changes = hfInstance.resumeEvaluation();\r\n     * ```\r\n     *\r\n     * @category Batch\r\n     */\r\n    isEvaluationSuspended() {\r\n        return this._evaluationSuspended;\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to add named expression into a specific scope.\r\n     * Checks against particular rules to ascertain that addNamedExpression can be called.\r\n     * If returns `true`, doing [[addNamedExpression]] operation won't throw any errors.\r\n     * Returns `false` if the operation might be disrupted.\r\n     *\r\n     * @param {string} expressionName - a name of the expression to be added\r\n     * @param {RawCellContent} expression - the expression\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     * ]);\r\n     *\r\n     * // should return 'true' for this example,\r\n     * // it is possible to add named expression to global scope\r\n     * const isAddable = hfInstance.isItPossibleToAddNamedExpression('prettyName', '=Sheet1!$A$1+100');\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    isItPossibleToAddNamedExpression(expressionName, expression, scope) {\r\n        validateArgToType(expressionName, 'string', 'expressionName');\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToAddNamedExpression(expressionName, expression, scope);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Adds a specified named expression.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {string} expressionName - a name of the expression to be added\r\n     * @param {RawCellContent} expression - the expression\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     * @param {NamedExpressionOptions?} options - additional metadata related to named expression\r\n     *\r\n     * @fires [[namedExpressionAdded]] always, unless [[batch]] mode is used\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NamedExpressionNameIsAlreadyTakenError]] when the named expression name is not available.\r\n     * @throws [[NamedExpressionNameIsInvalidError]] when the named expression name is not valid\r\n     * @throws [[NoRelativeAddressesAllowedError]] when the named expression formula contains relative references\r\n     * @throws [[NoSheetWithIdError]] if no sheet with given sheetId exists\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     * ]);\r\n     *\r\n     * // add own expression, scope limited to 'Sheet1' (sheetId=0), the method should return a list of cells which values\r\n     * // changed after the operation, their absolute addresses and new values\r\n     * // for this example:\r\n     * // [{\r\n     * //   name: 'prettyName',\r\n     * //   newValue: 142,\r\n     * // }]\r\n     * const changes = hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 0);\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    addNamedExpression(expressionName, expression, scope, options) {\r\n        validateArgToType(expressionName, 'string', 'expressionName');\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        this._crudOperations.addNamedExpression(expressionName, expression, scope, options);\r\n        const changes = this.recomputeIfDependencyGraphNeedsIt();\r\n        this._emitter.emit(Events.NamedExpressionAdded, expressionName, changes);\r\n        return changes;\r\n    }\r\n    /**\r\n     * Gets specified named expression value.\r\n     * Returns a [[CellValue]] or undefined if the given named expression does not exist.\r\n     *\r\n     * @param {string} expressionName - expression name, case-insensitive.\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] if no sheet with given sheetId exists\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     * ]);\r\n     *\r\n     * // add a named expression, only 'Sheet1' (sheetId=0) considered as it is the scope\r\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 'Sheet1');\r\n     *\r\n     * // returns the calculated value of a passed named expression, '142' for this example\r\n     * const myFormula = hfInstance.getNamedExpressionValue('prettyName', 'Sheet1');\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    getNamedExpressionValue(expressionName, scope) {\r\n        validateArgToType(expressionName, 'string', 'expressionName');\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        this.ensureEvaluationIsNotSuspended();\r\n        this._crudOperations.ensureScopeIdIsValid(scope);\r\n        const namedExpression = this._namedExpressions.namedExpressionForScope(expressionName, scope);\r\n        if (namedExpression) {\r\n            return this._serialization.getCellValue(namedExpression.address);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    /**\r\n     * Returns a normalized formula string for given named expression, or `undefined` for a named expression that does not exist or does not hold a formula.\r\n     *\r\n     * @param {string} expressionName - expression name, case-insensitive.\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] if no sheet with given sheetId exists\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     * ]);\r\n     *\r\n     * // add a named expression in 'Sheet1' (sheetId=0)\r\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 0);\r\n     *\r\n     * // returns a normalized formula string corresponding to the passed name from 'Sheet1' (sheetId=0),\r\n     * // '=Sheet1!A1+100' for this example\r\n     * const myFormula = hfInstance.getNamedExpressionFormula('prettyName', 0);\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    getNamedExpressionFormula(expressionName, scope) {\r\n        validateArgToType(expressionName, 'string', 'expressionName');\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        this._crudOperations.ensureScopeIdIsValid(scope);\r\n        const namedExpression = this._namedExpressions.namedExpressionForScope(expressionName, scope);\r\n        if (namedExpression === undefined) {\r\n            return undefined;\r\n        }\r\n        else {\r\n            return this._serialization.getCellFormula(namedExpression.address);\r\n        }\r\n    }\r\n    /**\r\n     * Returns a named expression, or `undefined` for a named expression that does not exist or does not hold a formula.\r\n     *\r\n     * @param {string} expressionName - expression name, case-insensitive.\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] if no sheet with given sheetId exists\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     * ]);\r\n     *\r\n     * // add a named expression in 'Sheet1' (sheetId=0)\r\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 0);\r\n     *\r\n     * // returns a named expression that corresponds to the passed name from 'Sheet1' (sheetId=0)\r\n     * // for this example, returns:\r\n     * // {name: 'prettyName', expression: '=Sheet1!$A$1+100', options: undefined, scope: 0}\r\n     * const myFormula = hfInstance.getNamedExpression('prettyName', 0);\r\n     *\r\n     * // for a named expression that doesn't exist, returns 'undefined':\r\n     * const myFormulaTwo = hfInstance.getNamedExpression('uglyName', 0);\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    getNamedExpression(expressionName, scope) {\r\n        validateArgToType(expressionName, 'string', 'expressionName');\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        const namedExpression = this._namedExpressions.namedExpressionForScope(expressionName, scope);\r\n        if (namedExpression === undefined) {\r\n            return undefined;\r\n        }\r\n        const expression = this._serialization.getCellFormula(namedExpression.address);\r\n        return {\r\n            name: expressionName,\r\n            scope: scope,\r\n            expression: expression,\r\n            options: namedExpression.options\r\n        };\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to change named expression in a specific scope.\r\n     * Checks against particular rules to ascertain that changeNamedExpression can be called.\r\n     * If returns `true`, doing [[changeNamedExpression]] operation won't throw any errors.\r\n     * Returns `false` if the operation might be disrupted.\r\n     *\r\n     * @param {string} expressionName - an expression name, case-insensitive.\r\n     * @param {RawCellContent} newExpression - a new expression\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     * ]);\r\n     *\r\n     * // add a named expression\r\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100');\r\n     *\r\n     * // should return 'true' for this example,\r\n     * // it is possible to change named expression\r\n     * const isAddable = hfInstance.isItPossibleToChangeNamedExpression('prettyName', '=Sheet1!$A$1+100');\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    isItPossibleToChangeNamedExpression(expressionName, newExpression, scope) {\r\n        validateArgToType(expressionName, 'string', 'expressionName');\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        try {\r\n            this._crudOperations.ensureItIsPossibleToChangeNamedExpression(expressionName, newExpression, scope);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Changes a given named expression to a specified formula.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {string} expressionName - an expression name, case-insensitive.\r\n     * @param {RawCellContent} newExpression - a new expression\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     * @param {NamedExpressionOptions?} options - additional metadata related to named expression\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NamedExpressionDoesNotExistError]] when the given expression does not exist.\r\n     * @throws [[NoSheetWithIdError]] if no sheet with given sheetId exists\r\n     * @throws [[ArrayFormulasNotSupportedError]] when the named expression formula is an array formula\r\n     * @throws [[NoRelativeAddressesAllowedError]] when the named expression formula contains relative references\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     * ]);\r\n     *\r\n     * // add a named expression, scope limited to 'Sheet1' (sheetId=0)\r\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 0);\r\n     *\r\n     * // change the named expression\r\n     * const changes = hfInstance.changeNamedExpression('prettyName', '=Sheet1!$A$1+200');\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    changeNamedExpression(expressionName, newExpression, scope, options) {\r\n        validateArgToType(expressionName, 'string', 'expressionName');\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        this._crudOperations.changeNamedExpressionExpression(expressionName, scope, newExpression, options);\r\n        return this.recomputeIfDependencyGraphNeedsIt();\r\n    }\r\n    /**\r\n     * Returns information whether it is possible to remove named expression from a specific scope.\r\n     * Checks against particular rules to ascertain that removeNamedExpression can be called.\r\n     * If returns `true`, doing [[removeNamedExpression]] operation won't throw any errors.\r\n     * Returns `false` if the operation might be disrupted.\r\n     *\r\n     * @param {string} expressionName - an expression name, case-insensitive.\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     * ]);\r\n     *\r\n     * // add a named expression\r\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100');\r\n     *\r\n     * // should return 'true' for this example,\r\n     * // it is possible to change named expression\r\n     * const isAddable = hfInstance.isItPossibleToRemoveNamedExpression('prettyName');\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    isItPossibleToRemoveNamedExpression(expressionName, scope) {\r\n        validateArgToType(expressionName, 'string', 'expressionName');\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        try {\r\n            this._crudOperations.isItPossibleToRemoveNamedExpression(expressionName, scope);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Removes a named expression.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @param {string} expressionName - expression name, case-insensitive.\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     *\r\n     * @fires [[namedExpressionRemoved]] after the expression was removed\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NamedExpressionDoesNotExistError]] when the given expression does not exist.\r\n     * @throws [[NoSheetWithIdError]] if no sheet with given sheetId exists\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     * ]);\r\n     *\r\n     * // add a named expression\r\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 0);\r\n     *\r\n     * // remove the named expression\r\n     * const changes = hfInstance.removeNamedExpression('prettyName', 0);\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    removeNamedExpression(expressionName, scope) {\r\n        validateArgToType(expressionName, 'string', 'expressionName');\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        const removedNamedExpression = this._crudOperations.removeNamedExpression(expressionName, scope);\r\n        if (removedNamedExpression) {\r\n            const changes = this.recomputeIfDependencyGraphNeedsIt();\r\n            this._emitter.emit(Events.NamedExpressionRemoved, removedNamedExpression.displayName, changes);\r\n            return changes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n    /**\r\n     * Lists all named expressions.\r\n     * Returns an array of expression names defined in a scope, as strings.\r\n     *\r\n     * @param {number?} scope - scope definition, `sheetId` for local scope or `undefined` for global scope\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NoSheetWithIdError]] if no sheet with given sheetId exists\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     *  ['50'],\r\n     *  ['60'],\r\n     * ]);\r\n     *\r\n     * // add two named expressions and one scoped\r\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100');\r\n     * hfInstance.addNamedExpression('anotherPrettyName', '=Sheet1!$A$2+100');\r\n     * hfInstance.addNamedExpression('alsoPrettyName', '=Sheet1!$A$3+100', 0);\r\n     *\r\n     * // list the expressions, should return: ['prettyName', 'anotherPrettyName'] for this example\r\n     * const listOfExpressions = hfInstance.listNamedExpressions();\r\n     *\r\n     *  // list the expressions, should return: ['alsoPrettyName'] for this example\r\n     * const listOfExpressions = hfInstance.listNamedExpressions(0);\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    listNamedExpressions(scope) {\r\n        if (scope !== undefined) {\r\n            validateArgToType(scope, 'number', 'scope');\r\n        }\r\n        this._crudOperations.ensureScopeIdIsValid(scope);\r\n        return this._namedExpressions.getAllNamedExpressionsNamesInScope(scope);\r\n    }\r\n    /**\r\n     * Returns all named expressions serialized.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     *  ['50'],\r\n     *  ['60'],\r\n     * ]);\r\n     *\r\n     * // add two named expressions and one scoped\r\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100');\r\n     * hfInstance.addNamedExpression('anotherPrettyName', '=Sheet1!$A$2+100');\r\n     * hfInstance.addNamedExpression('prettyName3', '=Sheet1!$A$3+100', 0);\r\n     *\r\n     * // get all expressions serialized\r\n     * // should return:\r\n     * // [\r\n     * // {name: 'prettyName', expression: '=Sheet1!$A$1+100', options: undefined, scope: undefined},\r\n     * // {name: 'anotherPrettyName', expression: '=Sheet1!$A$2+100', options: undefined, scope: undefined},\r\n     * // {name: 'alsoPrettyName', expression: '=Sheet1!$A$3+100', options: undefined, scope: 0}\r\n     * // ]\r\n     * const allExpressions = hfInstance.getAllNamedExpressionsSerialized();\r\n     * ```\r\n     *\r\n     * @category Named Expressions\r\n     */\r\n    getAllNamedExpressionsSerialized() {\r\n        return this._serialization.getAllNamedExpressionsSerialized();\r\n    }\r\n    /**\r\n     * Parses and then unparses a formula.\r\n     * Returns a normalized formula (e.g. restores the original capitalization of sheet names, function names, cell addresses, and named expressions).\r\n     *\r\n     * @param {string} formulaString - a formula in a proper format - it must start with \"=\"\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     * @throws [[NotAFormulaError]] when the provided string is not a valid formula, i.e. does not start with \"=\"\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromArray([\r\n     *  ['42'],\r\n     *  ['50'],\r\n     * ]);\r\n     *\r\n     * // returns '=Sheet1!$A$1+10'\r\n     * const normalizedFormula = hfInstance.normalizeFormula('=SHEET1!$A$1+10');\r\n     *\r\n     * // returns '=3*$A$1'\r\n     * const normalizedFormula = hfInstance.normalizeFormula('=3*$a$1');\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    normalizeFormula(formulaString) {\r\n        validateArgToType(formulaString, 'string', 'formulaString');\r\n        const { ast, address } = this.extractTemporaryFormula(formulaString);\r\n        if (ast === undefined) {\r\n            throw new NotAFormulaError();\r\n        }\r\n        return this._unparser.unparse(ast, address);\r\n    }\r\n    /**\r\n     * Calculates fire-and-forget formula, returns the calculated value.\r\n     *\r\n     * @param {string} formulaString - A formula in a proper format, starting with `=`.\r\n     * @param {number} sheetId - The ID of a sheet in context of which the formula gets evaluated.\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type arguments is of wrong type.\r\n     * @throws [[NotAFormulaError]] when the provided string is not a valid formula (i.e. doesn't start with `=`).\r\n     * @throws [[NoSheetWithIdError]] when the provided `sheetID` doesn't exist.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildFromSheets({\r\n     *  Sheet1: [['58']],\r\n     *  Sheet2: [['1', '2', '3'], ['4', '5', '6']]\r\n     * });\r\n     *\r\n     * // returns the calculated formula's value\r\n     * // for this example, returns `68`\r\n     * const calculatedFormula = hfInstance.calculateFormula('=A1+10', 0);\r\n     *\r\n     * // for this example, returns [['11', '12', '13'], ['14', '15', '16']]\r\n     * const calculatedFormula = hfInstance.calculateFormula('=A1:B3+10', 1);\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    calculateFormula(formulaString, sheetId) {\r\n        validateArgToType(formulaString, 'string', 'formulaString');\r\n        validateArgToType(sheetId, 'number', 'sheetId');\r\n        this._crudOperations.ensureScopeIdIsValid(sheetId);\r\n        const { ast, address, dependencies } = this.extractTemporaryFormula(formulaString, sheetId);\r\n        if (ast === undefined) {\r\n            throw new NotAFormulaError();\r\n        }\r\n        const internalCellValue = this.evaluator.runAndForget(ast, address, dependencies);\r\n        return this._exporter.exportScalarOrRange(internalCellValue);\r\n    }\r\n    /**\r\n     * Validates the formula.\r\n     * If the provided string starts with \"=\" and is a parsable formula, the method returns `true`.\r\n     * The validation is purely grammatical: the method doesn't verify if the formula can be calculated or not.\r\n     *\r\n     * @param {string} formulaString -  a formula in a proper format - it must start with \"=\"\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // checks if the given string is a valid formula, should return 'true' for this example\r\n     * const isFormula = hfInstance.validateFormula('=SUM(1, 2)');\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    validateFormula(formulaString) {\r\n        validateArgToType(formulaString, 'string', 'formulaString');\r\n        const { ast } = this.extractTemporaryFormula(formulaString);\r\n        if (ast === undefined) {\r\n            return false;\r\n        }\r\n        if (ast.type === AstNodeType.ERROR && !ast.error) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Returns translated names of all functions registered in this instance of HyperFormula\r\n     * according to the language set in the configuration\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // return translated names of all functions, assign to a variable\r\n     * const allNames = hfInstance.getRegisteredFunctionNames();\r\n     * ```\r\n     *\r\n     * @category Custom Functions\r\n     */\r\n    getRegisteredFunctionNames() {\r\n        const language = HyperFormula.getLanguage(this._config.language);\r\n        return language.getFunctionTranslations(this._functionRegistry.getRegisteredFunctionIds());\r\n    }\r\n    /**\r\n     * Returns class of a plugin used by function with given id\r\n     *\r\n     * @param {string} functionId - id of a function, e.g. 'SUMIF'\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // import your own plugin\r\n     * import { MyExamplePlugin } from './file_with_your_plugin';\r\n     *\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // register a plugin\r\n     * HyperFormula.registerFunctionPlugin(MyExamplePlugin);\r\n     *\r\n     * // get the plugin\r\n     * const myPlugin = hfInstance.getFunctionPlugin('EXAMPLE');\r\n     * ```\r\n     *\r\n     * @category Custom Functions\r\n     */\r\n    getFunctionPlugin(functionId) {\r\n        validateArgToType(functionId, 'string', 'functionId');\r\n        return this._functionRegistry.getFunctionPlugin(functionId);\r\n    }\r\n    /**\r\n     * Returns classes of all plugins registered in this instance of HyperFormula\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // return classes of all plugins registered, assign to a variable\r\n     * const allNames = hfInstance.getAllFunctionPlugins();\r\n     * ```\r\n     *\r\n     * @category Custom Functions\r\n     */\r\n    getAllFunctionPlugins() {\r\n        return this._functionRegistry.getPlugins();\r\n    }\r\n    /**\r\n     * Interprets number as a date + time.\r\n     *\r\n     * @param {number} inputNumber - number of days since nullDate, should be non-negative, fractions are interpreted as hours/minutes/seconds.\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // pass the number of days since nullDate\r\n     * // the method should return formatted date and time, for this example:\r\n     * // {year: 2020, month: 1, day: 15, hours: 2, minutes: 24, seconds: 0}\r\n     * const dateTimeFromNumber = hfInstance.numberToDateTime(43845.1);\r\n     *\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    numberToDateTime(inputNumber) {\r\n        validateArgToType(inputNumber, 'number', 'val');\r\n        return this._evaluator.interpreter.dateTimeHelper.numberToSimpleDateTime(inputNumber);\r\n    }\r\n    /**\r\n     * Interprets number as a date.\r\n     *\r\n     * @param {number} inputNumber - number of days since nullDate, should be non-negative, fractions are ignored.\r\n  \r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n  \r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // pass the number of days since nullDate\r\n     * // the method should return formatted date, for this example:\r\n     * // {year: 2020, month: 1, day: 15}\r\n     * const dateFromNumber = hfInstance.numberToDate(43845);\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    numberToDate(inputNumber) {\r\n        validateArgToType(inputNumber, 'number', 'val');\r\n        return this._evaluator.interpreter.dateTimeHelper.numberToSimpleDate(inputNumber);\r\n    }\r\n    /**\r\n     * Interprets number as a time (hours/minutes/seconds).\r\n     *\r\n     * @param {number} inputNumber - time in 24h units.\r\n     *\r\n     * @throws [[ExpectedValueOfTypeError]] if any of its basic type argument is of wrong type\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // pass a number to be interpreted as a time\r\n     * // should return {hours: 26, minutes: 24} for this example\r\n     * const timeFromNumber = hfInstance.numberToTime(1.1);\r\n     * ```\r\n     *\r\n     * @category Helpers\r\n     */\r\n    numberToTime(inputNumber) {\r\n        validateArgToType(inputNumber, 'number', 'val');\r\n        return numberToSimpleTime(inputNumber);\r\n    }\r\n    /**\r\n     * Subscribes to an event.\r\n     * For the list of all available events, see [[Listeners]].\r\n     *\r\n     * @param {Event} event the name of the event to subscribe to\r\n     * @param {Listener} listener to be called when event is emitted\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // subscribe to a 'sheetAdded', pass a simple handler\r\n     * hfInstance.on('sheetAdded', ( ) => { console.log('foo') });\r\n     *\r\n     * // add a sheet to trigger an event,\r\n     * // console should print 'foo' after each time sheet is added in this example\r\n     * hfInstance.addSheet('FooBar');\r\n     * ```\r\n     *\r\n     * @category Events\r\n     */\r\n    on(event, listener) {\r\n        this._emitter.on(event, listener);\r\n    }\r\n    /**\r\n     * Subscribes to an event once.\r\n     * For the list of all available events, see [[Listeners]].\r\n     *\r\n     * @param {Event} event the name of the event to subscribe to\r\n     * @param {Listener} listener to be called when event is emitted\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // subscribe to a 'sheetAdded', pass a simple handler\r\n     * hfInstance.once('sheetAdded', ( ) => { console.log('foo') });\r\n     *\r\n     * // call addSheet twice,\r\n     * // console should print 'foo' only once when the sheet is added in this example\r\n     * hfInstance.addSheet('FooBar');\r\n     * hfInstance.addSheet('FooBaz');\r\n     * ```\r\n     *\r\n     * @category Events\r\n     */\r\n    once(event, listener) {\r\n        this._emitter.once(event, listener);\r\n    }\r\n    /**\r\n     * Unsubscribes from an event or from all events.\r\n     * For the list of all available events, see [[Listeners]].\r\n     *\r\n     * @param {Event} event the name of the event to subscribe to\r\n     * @param {Listener} listener to be called when event is emitted\r\n     *\r\n     * @example\r\n     * ```js\r\n     * const hfInstance = HyperFormula.buildEmpty();\r\n     *\r\n     * // define a simple function to be called upon emitting an event\r\n     * const handler = ( ) => { console.log('baz') }\r\n     *\r\n     * // subscribe to a 'sheetAdded', pass the handler\r\n     * hfInstance.on('sheetAdded', handler);\r\n     *\r\n     * // add a sheet to trigger an event,\r\n     * // console should print 'baz' each time a sheet is added\r\n     * hfInstance.addSheet('FooBar');\r\n     *\r\n     * // unsubscribe from a 'sheetAdded'\r\n     * hfInstance.off('sheetAdded', handler);\r\n     *\r\n     * // add a sheet, the console should not print anything\r\n     * hfInstance.addSheet('FooBaz');\r\n     * ```\r\n     *\r\n     * @category Events\r\n     */\r\n    off(event, listener) {\r\n        this._emitter.off(event, listener);\r\n    }\r\n    /**\r\n     * Destroys instance of HyperFormula.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * // destroys the instance\r\n     * hfInstance.destroy();\r\n     * ```\r\n     *\r\n     * @category Instance\r\n     */\r\n    destroy() {\r\n        objectDestroy(this);\r\n    }\r\n    ensureEvaluationIsNotSuspended() {\r\n        if (this._evaluationSuspended) {\r\n            throw new EvaluationSuspendedError();\r\n        }\r\n    }\r\n    extractTemporaryFormula(formulaString, sheetId = 1) {\r\n        const parsedCellContent = this._cellContentParser.parse(formulaString);\r\n        const address = { sheet: sheetId, col: 0, row: 0 };\r\n        if (!(parsedCellContent instanceof CellContent.Formula)) {\r\n            return { address, dependencies: [] };\r\n        }\r\n        const { ast, errors, dependencies } = this._parser.parse(parsedCellContent.formula, address);\r\n        if (errors.length > 0) {\r\n            return { address, dependencies: [] };\r\n        }\r\n        return { ast, address, dependencies };\r\n    }\r\n    /**\r\n     * Runs a recomputation starting from recently changed vertices.\r\n     *\r\n     * Note that this method may trigger dependency graph recalculation.\r\n     *\r\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\r\n     */\r\n    recomputeIfDependencyGraphNeedsIt() {\r\n        if (!this._evaluationSuspended) {\r\n            const changes = this._crudOperations.getAndClearContentChanges();\r\n            const verticesToRecomputeFrom = Array.from(this.dependencyGraph.verticesToRecompute());\r\n            this.dependencyGraph.clearRecentlyChangedVertices();\r\n            if (verticesToRecomputeFrom.length > 0) {\r\n                changes.addAll(this.evaluator.partialRun(verticesToRecomputeFrom));\r\n            }\r\n            const exportedChanges = changes.exportChanges(this._exporter);\r\n            if (!changes.isEmpty()) {\r\n                this._emitter.emit(Events.ValuesUpdated, exportedChanges);\r\n            }\r\n            return exportedChanges;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n}\r\n/**\r\n * Version of the HyperFormula.\r\n *\r\n * @category Static Properties\r\n */\r\nHyperFormula.version = process.env.HT_VERSION;\r\n/**\r\n * Latest build date.\r\n *\r\n * @category Static Properties\r\n */\r\nHyperFormula.buildDate = process.env.HT_BUILD_DATE;\r\n/**\r\n * A release date.\r\n *\r\n * @category Static Properties\r\n */\r\nHyperFormula.releaseDate = process.env.HT_RELEASE_DATE;\r\n/**\r\n * Contains all available languages to use in registerLanguage.\r\n *\r\n * @category Static Properties\r\n */\r\nHyperFormula.languages = {};\r\nHyperFormula.registeredLanguages = new Map();\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArraySizePredictor } from './ArraySize';\r\nimport { CellContentParser } from './CellContentParser';\r\nimport { ClipboardOperations } from './ClipboardOperations';\r\nimport { Config } from './Config';\r\nimport { CrudOperations } from './CrudOperations';\r\nimport { DateTimeHelper } from './DateTimeHelper';\r\nimport { DependencyGraph } from './DependencyGraph';\r\nimport { SheetSizeLimitExceededError } from './errors';\r\nimport { Evaluator } from './Evaluator';\r\nimport { Exporter } from './Exporter';\r\nimport { GraphBuilder } from './GraphBuilder';\r\nimport { UIElement } from './i18n';\r\nimport { ArithmeticHelper } from './interpreter/ArithmeticHelper';\r\nimport { FunctionRegistry } from './interpreter/FunctionRegistry';\r\nimport { Interpreter } from './interpreter/Interpreter';\r\nimport { LazilyTransformingAstService } from './LazilyTransformingAstService';\r\nimport { buildColumnSearchStrategy } from './Lookup/SearchStrategy';\r\nimport { NamedExpressions } from './NamedExpressions';\r\nimport { NumberLiteralHelper } from './NumberLiteralHelper';\r\nimport { Operations } from './Operations';\r\nimport { buildLexerConfig, ParserWithCaching, Unparser } from './parser';\r\nimport { Serialization } from './Serialization';\r\nimport { findBoundaries, validateAsSheet } from './Sheet';\r\nimport { EmptyStatistics, Statistics, StatType } from './statistics';\r\nimport { UndoRedo } from './UndoRedo';\r\nexport class BuildEngineFactory {\r\n    static buildFromSheets(sheets, configInput = {}, namedExpressions = []) {\r\n        const config = new Config(configInput);\r\n        return this.buildEngine(config, sheets, namedExpressions);\r\n    }\r\n    static buildFromSheet(sheet, configInput = {}, namedExpressions = []) {\r\n        const config = new Config(configInput);\r\n        const newsheetprefix = config.translationPackage.getUITranslation(UIElement.NEW_SHEET_PREFIX) + '1';\r\n        return this.buildEngine(config, { [newsheetprefix]: sheet }, namedExpressions);\r\n    }\r\n    static buildEmpty(configInput = {}, namedExpressions = []) {\r\n        return this.buildEngine(new Config(configInput), {}, namedExpressions);\r\n    }\r\n    static rebuildWithConfig(config, sheets, namedExpressions, stats) {\r\n        return this.buildEngine(config, sheets, namedExpressions, stats);\r\n    }\r\n    static buildEngine(config, sheets = {}, inputNamedExpressions = [], stats = config.useStats ? new Statistics() : new EmptyStatistics()) {\r\n        stats.start(StatType.BUILD_ENGINE_TOTAL);\r\n        const namedExpressions = new NamedExpressions();\r\n        const functionRegistry = new FunctionRegistry(config);\r\n        const lazilyTransformingAstService = new LazilyTransformingAstService(stats);\r\n        const dependencyGraph = DependencyGraph.buildEmpty(lazilyTransformingAstService, config, functionRegistry, namedExpressions, stats);\r\n        const columnSearch = buildColumnSearchStrategy(dependencyGraph, config, stats);\r\n        const sheetMapping = dependencyGraph.sheetMapping;\r\n        const addressMapping = dependencyGraph.addressMapping;\r\n        for (const sheetName in sheets) {\r\n            if (Object.prototype.hasOwnProperty.call(sheets, sheetName)) {\r\n                const sheet = sheets[sheetName];\r\n                validateAsSheet(sheet);\r\n                const boundaries = findBoundaries(sheet);\r\n                if (boundaries.height > config.maxRows || boundaries.width > config.maxColumns) {\r\n                    throw new SheetSizeLimitExceededError();\r\n                }\r\n                const sheetId = sheetMapping.addSheet(sheetName);\r\n                addressMapping.autoAddSheet(sheetId, sheet, boundaries);\r\n            }\r\n        }\r\n        const parser = new ParserWithCaching(config, functionRegistry, sheetMapping.get);\r\n        lazilyTransformingAstService.parser = parser;\r\n        const unparser = new Unparser(config, buildLexerConfig(config), sheetMapping.fetchDisplayName, namedExpressions);\r\n        const dateTimeHelper = new DateTimeHelper(config);\r\n        const numberLiteralHelper = new NumberLiteralHelper(config);\r\n        const arithmeticHelper = new ArithmeticHelper(config, dateTimeHelper, numberLiteralHelper);\r\n        const cellContentParser = new CellContentParser(config, dateTimeHelper, numberLiteralHelper);\r\n        const arraySizePredictor = new ArraySizePredictor(config, functionRegistry);\r\n        const operations = new Operations(config, dependencyGraph, columnSearch, cellContentParser, parser, stats, lazilyTransformingAstService, namedExpressions, arraySizePredictor);\r\n        const undoRedo = new UndoRedo(config, operations);\r\n        lazilyTransformingAstService.undoRedo = undoRedo;\r\n        const clipboardOperations = new ClipboardOperations(config, dependencyGraph, operations);\r\n        const crudOperations = new CrudOperations(config, operations, undoRedo, clipboardOperations, dependencyGraph, columnSearch, parser, cellContentParser, lazilyTransformingAstService, namedExpressions);\r\n        inputNamedExpressions.forEach((entry) => {\r\n            crudOperations.ensureItIsPossibleToAddNamedExpression(entry.name, entry.expression, entry.scope);\r\n            crudOperations.operations.addNamedExpression(entry.name, entry.expression, entry.scope, entry.options);\r\n        });\r\n        const exporter = new Exporter(config, namedExpressions, sheetMapping.fetchDisplayName, lazilyTransformingAstService);\r\n        const serialization = new Serialization(dependencyGraph, unparser, exporter);\r\n        const interpreter = new Interpreter(config, dependencyGraph, columnSearch, stats, arithmeticHelper, functionRegistry, namedExpressions, serialization, arraySizePredictor, dateTimeHelper);\r\n        stats.measure(StatType.GRAPH_BUILD, () => {\r\n            const graphBuilder = new GraphBuilder(dependencyGraph, columnSearch, parser, cellContentParser, stats, arraySizePredictor);\r\n            graphBuilder.buildGraph(sheets, stats);\r\n        });\r\n        const evaluator = new Evaluator(config, stats, interpreter, lazilyTransformingAstService, dependencyGraph, columnSearch);\r\n        evaluator.run();\r\n        stats.end(StatType.BUILD_ENGINE_TOTAL);\r\n        return {\r\n            config,\r\n            stats,\r\n            dependencyGraph,\r\n            columnSearch,\r\n            parser,\r\n            unparser,\r\n            cellContentParser,\r\n            evaluator,\r\n            lazilyTransformingAstService,\r\n            crudOperations,\r\n            exporter,\r\n            namedExpressions,\r\n            serialization,\r\n            functionRegistry,\r\n        };\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from './Cell';\r\nimport { timeToNumber } from './DateTimeHelper';\r\nimport { ErrorMessage } from './error-message';\r\nimport { UnableToParseError } from './errors';\r\nimport { fixNegativeZero, isNumberOverflow } from './interpreter/ArithmeticHelper';\r\nimport { cloneNumber, CurrencyNumber, DateNumber, DateTimeNumber, getRawValue, PercentNumber, TimeNumber } from './interpreter/InterpreterValue';\r\nexport var CellContent;\r\n(function (CellContent) {\r\n    class Number {\r\n        constructor(value) {\r\n            this.value = value;\r\n            this.value = cloneNumber(this.value, fixNegativeZero(getRawValue(this.value)));\r\n        }\r\n    }\r\n    CellContent.Number = Number;\r\n    class String {\r\n        constructor(value) {\r\n            this.value = value;\r\n        }\r\n    }\r\n    CellContent.String = String;\r\n    class Boolean {\r\n        constructor(value) {\r\n            this.value = value;\r\n        }\r\n    }\r\n    CellContent.Boolean = Boolean;\r\n    class Empty {\r\n        static getSingletonInstance() {\r\n            if (!Empty.instance) {\r\n                Empty.instance = new Empty();\r\n            }\r\n            return Empty.instance;\r\n        }\r\n    }\r\n    CellContent.Empty = Empty;\r\n    class Formula {\r\n        constructor(formula) {\r\n            this.formula = formula;\r\n        }\r\n    }\r\n    CellContent.Formula = Formula;\r\n    class Error {\r\n        constructor(errorType, message) {\r\n            this.value = new CellError(errorType, message);\r\n        }\r\n    }\r\n    CellContent.Error = Error;\r\n})(CellContent || (CellContent = {}));\r\n/**\r\n * Checks whether string looks like formula or not.\r\n *\r\n * @param text - formula\r\n */\r\nexport function isFormula(text) {\r\n    return text.startsWith('=');\r\n}\r\nexport function isBoolean(text) {\r\n    const tl = text.toLowerCase();\r\n    return tl === 'true' || tl === 'false';\r\n}\r\nexport function isError(text, errorMapping) {\r\n    const upperCased = text.toUpperCase();\r\n    const errorRegex = /#[A-Za-z0-9\\/]+[?!]?/;\r\n    return errorRegex.test(upperCased) && Object.prototype.hasOwnProperty.call(errorMapping, upperCased);\r\n}\r\nexport class CellContentParser {\r\n    constructor(config, dateHelper, numberLiteralsHelper) {\r\n        this.config = config;\r\n        this.dateHelper = dateHelper;\r\n        this.numberLiteralsHelper = numberLiteralsHelper;\r\n    }\r\n    parse(content) {\r\n        if (content === undefined || content === null) {\r\n            return CellContent.Empty.getSingletonInstance();\r\n        }\r\n        else if (typeof content === 'number') {\r\n            if (isNumberOverflow(content)) {\r\n                return new CellContent.Error(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            else {\r\n                return new CellContent.Number(content);\r\n            }\r\n        }\r\n        else if (typeof content === 'boolean') {\r\n            return new CellContent.Boolean(content);\r\n        }\r\n        else if (content instanceof Date) {\r\n            const dateVal = this.dateHelper.dateToNumber({\r\n                day: content.getDate(),\r\n                month: content.getMonth() + 1,\r\n                year: content.getFullYear()\r\n            });\r\n            const timeVal = timeToNumber({\r\n                hours: content.getHours(),\r\n                minutes: content.getMinutes(),\r\n                seconds: content.getSeconds() + content.getMilliseconds() / 1000\r\n            });\r\n            const val = dateVal + timeVal;\r\n            if (val < 0) {\r\n                return new CellContent.Error(ErrorType.NUM, ErrorMessage.DateBounds);\r\n            }\r\n            if (val % 1 === 0) {\r\n                return new CellContent.Number(new DateNumber(val, 'Date()'));\r\n            }\r\n            else if (val < 1) {\r\n                return new CellContent.Number(new TimeNumber(val, 'Date()'));\r\n            }\r\n            else {\r\n                return new CellContent.Number(new DateTimeNumber(val, 'Date()'));\r\n            }\r\n        }\r\n        else if (typeof content === 'string') {\r\n            if (isBoolean(content)) {\r\n                return new CellContent.Boolean(content.toLowerCase() === 'true');\r\n            }\r\n            else if (isFormula(content)) {\r\n                return new CellContent.Formula(content);\r\n            }\r\n            else if (isError(content, this.config.errorMapping)) {\r\n                return new CellContent.Error(this.config.errorMapping[content.toUpperCase()]);\r\n            }\r\n            else {\r\n                let trimmedContent = content.trim();\r\n                let mode = 0;\r\n                let currency;\r\n                if (trimmedContent.endsWith('%')) {\r\n                    mode = 1;\r\n                    trimmedContent = trimmedContent.slice(0, trimmedContent.length - 1);\r\n                }\r\n                else {\r\n                    const res = this.currencyMatcher(trimmedContent);\r\n                    if (res !== undefined) {\r\n                        mode = 2;\r\n                        [currency, trimmedContent] = res;\r\n                    }\r\n                }\r\n                const val = this.numberLiteralsHelper.numericStringToMaybeNumber(trimmedContent);\r\n                if (val !== undefined) {\r\n                    let parseAsNum;\r\n                    if (mode === 1) {\r\n                        parseAsNum = new PercentNumber(val / 100);\r\n                    }\r\n                    else if (mode === 2) {\r\n                        parseAsNum = new CurrencyNumber(val, currency);\r\n                    }\r\n                    else {\r\n                        parseAsNum = val;\r\n                    }\r\n                    return new CellContent.Number(parseAsNum);\r\n                }\r\n                const parsedDateNumber = this.dateHelper.dateStringToDateNumber(trimmedContent);\r\n                if (parsedDateNumber !== undefined) {\r\n                    return new CellContent.Number(parsedDateNumber);\r\n                }\r\n                else {\r\n                    return new CellContent.String(content.startsWith('\\'') ? content.slice(1) : content);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            throw new UnableToParseError(content);\r\n        }\r\n    }\r\n    currencyMatcher(token) {\r\n        for (const currency of this.config.currencySymbol) {\r\n            if (token.startsWith(currency)) {\r\n                return [currency, token.slice(currency.length)];\r\n            }\r\n            if (token.endsWith(currency)) {\r\n                return [currency, token.slice(0, token.length - currency.length)];\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\r\nimport { invalidSimpleCellAddress, simpleCellAddress } from './Cell';\r\nimport { InvalidArgumentsError, SheetSizeLimitExceededError } from './errors';\r\nvar ClipboardOperationType;\r\n(function (ClipboardOperationType) {\r\n    ClipboardOperationType[ClipboardOperationType[\"COPY\"] = 0] = \"COPY\";\r\n    ClipboardOperationType[ClipboardOperationType[\"CUT\"] = 1] = \"CUT\";\r\n})(ClipboardOperationType || (ClipboardOperationType = {}));\r\nexport var ClipboardCellType;\r\n(function (ClipboardCellType) {\r\n    ClipboardCellType[ClipboardCellType[\"VALUE\"] = 0] = \"VALUE\";\r\n    ClipboardCellType[ClipboardCellType[\"EMPTY\"] = 1] = \"EMPTY\";\r\n    ClipboardCellType[ClipboardCellType[\"FORMULA\"] = 2] = \"FORMULA\";\r\n    ClipboardCellType[ClipboardCellType[\"PARSING_ERROR\"] = 3] = \"PARSING_ERROR\";\r\n})(ClipboardCellType || (ClipboardCellType = {}));\r\nclass Clipboard {\r\n    constructor(sourceLeftCorner, width, height, type, content) {\r\n        this.sourceLeftCorner = sourceLeftCorner;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.type = type;\r\n        this.content = content;\r\n    }\r\n    *getContent(leftCorner) {\r\n        if (this.content === undefined) {\r\n            return;\r\n        }\r\n        else {\r\n            for (let y = 0; y < this.height; ++y) {\r\n                for (let x = 0; x < this.width; ++x) {\r\n                    yield [simpleCellAddress(leftCorner.sheet, leftCorner.col + x, leftCorner.row + y), this.content[y][x]];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexport class ClipboardOperations {\r\n    constructor(config, dependencyGraph, operations) {\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.operations = operations;\r\n        this.maxRows = config.maxRows;\r\n        this.maxColumns = config.maxColumns;\r\n    }\r\n    cut(leftCorner, width, height) {\r\n        this.clipboard = new Clipboard(leftCorner, width, height, ClipboardOperationType.CUT);\r\n    }\r\n    copy(leftCorner, width, height) {\r\n        const content = [];\r\n        for (let y = 0; y < height; ++y) {\r\n            content[y] = [];\r\n            for (let x = 0; x < width; ++x) {\r\n                const clipboardCell = this.operations.getClipboardCell(simpleCellAddress(leftCorner.sheet, leftCorner.col + x, leftCorner.row + y));\r\n                content[y].push(clipboardCell);\r\n            }\r\n        }\r\n        this.clipboard = new Clipboard(leftCorner, width, height, ClipboardOperationType.COPY, content);\r\n    }\r\n    abortCut() {\r\n        if (this.clipboard && this.clipboard.type === ClipboardOperationType.CUT) {\r\n            this.clear();\r\n        }\r\n    }\r\n    clear() {\r\n        this.clipboard = undefined;\r\n    }\r\n    ensureItIsPossibleToCopyPaste(destinationLeftCorner) {\r\n        if (this.clipboard === undefined) {\r\n            return;\r\n        }\r\n        if (invalidSimpleCellAddress(destinationLeftCorner) ||\r\n            !this.dependencyGraph.sheetMapping.hasSheetWithId(destinationLeftCorner.sheet)) {\r\n            throw new InvalidArgumentsError('a valid target address.');\r\n        }\r\n        const targetRange = AbsoluteCellRange.spanFrom(destinationLeftCorner, this.clipboard.width, this.clipboard.height);\r\n        if (targetRange.exceedsSheetSizeLimits(this.maxColumns, this.maxRows)) {\r\n            throw new SheetSizeLimitExceededError();\r\n        }\r\n        if (this.dependencyGraph.arrayMapping.isFormulaArrayInRange(targetRange)) {\r\n            throw new Error('It is not possible to paste onto an array');\r\n        }\r\n    }\r\n    isCutClipboard() {\r\n        return this.clipboard !== undefined && this.clipboard.type === ClipboardOperationType.CUT;\r\n    }\r\n    isCopyClipboard() {\r\n        return this.clipboard !== undefined && this.clipboard.type === ClipboardOperationType.COPY;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\r\nimport { invalidSimpleCellAddress, simpleCellAddress } from './Cell';\r\nimport { CellContent } from './CellContentParser';\r\nimport { InvalidAddressError, InvalidArgumentsError, NamedExpressionDoesNotExistError, NamedExpressionNameIsAlreadyTakenError, NamedExpressionNameIsInvalidError, NoOperationToRedoError, NoOperationToUndoError, NoRelativeAddressesAllowedError, NoSheetWithIdError, NothingToPasteError, SheetNameAlreadyTakenError, SheetSizeLimitExceededError, SourceLocationHasArrayError, TargetLocationHasArrayError } from './errors';\r\nimport { doesContainRelativeReferences } from './NamedExpressions';\r\nimport { AddColumnsCommand, AddRowsCommand, RemoveColumnsCommand, RemoveRowsCommand } from './Operations';\r\nimport { findBoundaries, validateAsSheet } from './Sheet';\r\nimport { ColumnsSpan, RowsSpan } from './Span';\r\nimport { AddColumnsUndoEntry, AddNamedExpressionUndoEntry, AddRowsUndoEntry, AddSheetUndoEntry, ChangeNamedExpressionUndoEntry, ClearSheetUndoEntry, MoveCellsUndoEntry, MoveColumnsUndoEntry, MoveRowsUndoEntry, PasteUndoEntry, RemoveColumnsUndoEntry, RemoveNamedExpressionUndoEntry, RemoveRowsUndoEntry, RemoveSheetUndoEntry, RenameSheetUndoEntry, SetCellContentsUndoEntry, SetColumnOrderUndoEntry, SetRowOrderUndoEntry, SetSheetContentUndoEntry } from './UndoRedo';\r\nexport class CrudOperations {\r\n    constructor(config, operations, undoRedo, clipboardOperations, dependencyGraph, columnSearch, parser, cellContentParser, lazilyTransformingAstService, namedExpressions) {\r\n        this.operations = operations;\r\n        this.undoRedo = undoRedo;\r\n        this.clipboardOperations = clipboardOperations;\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.columnSearch = columnSearch;\r\n        this.parser = parser;\r\n        this.cellContentParser = cellContentParser;\r\n        this.lazilyTransformingAstService = lazilyTransformingAstService;\r\n        this.namedExpressions = namedExpressions;\r\n        this.maxRows = config.maxRows;\r\n        this.maxColumns = config.maxColumns;\r\n    }\r\n    get sheetMapping() {\r\n        return this.dependencyGraph.sheetMapping;\r\n    }\r\n    addRows(sheet, ...indexes) {\r\n        const addRowsCommand = new AddRowsCommand(sheet, indexes);\r\n        this.ensureItIsPossibleToAddRows(sheet, ...indexes);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        this.operations.addRows(addRowsCommand);\r\n        this.undoRedo.saveOperation(new AddRowsUndoEntry(addRowsCommand));\r\n    }\r\n    removeRows(sheet, ...indexes) {\r\n        const removeRowsCommand = new RemoveRowsCommand(sheet, indexes);\r\n        this.ensureItIsPossibleToRemoveRows(sheet, ...indexes);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        const rowsRemovals = this.operations.removeRows(removeRowsCommand);\r\n        this.undoRedo.saveOperation(new RemoveRowsUndoEntry(removeRowsCommand, rowsRemovals));\r\n    }\r\n    addColumns(sheet, ...indexes) {\r\n        const addColumnsCommand = new AddColumnsCommand(sheet, indexes);\r\n        this.ensureItIsPossibleToAddColumns(sheet, ...indexes);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        this.operations.addColumns(addColumnsCommand);\r\n        this.undoRedo.saveOperation(new AddColumnsUndoEntry(addColumnsCommand));\r\n    }\r\n    removeColumns(sheet, ...indexes) {\r\n        const removeColumnsCommand = new RemoveColumnsCommand(sheet, indexes);\r\n        this.ensureItIsPossibleToRemoveColumns(sheet, ...indexes);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        const columnsRemovals = this.operations.removeColumns(removeColumnsCommand);\r\n        this.undoRedo.saveOperation(new RemoveColumnsUndoEntry(removeColumnsCommand, columnsRemovals));\r\n    }\r\n    moveCells(sourceLeftCorner, width, height, destinationLeftCorner) {\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        const { version, overwrittenCellsData, addedGlobalNamedExpressions } = this.operations.moveCells(sourceLeftCorner, width, height, destinationLeftCorner);\r\n        this.undoRedo.saveOperation(new MoveCellsUndoEntry(sourceLeftCorner, width, height, destinationLeftCorner, overwrittenCellsData, addedGlobalNamedExpressions, version));\r\n    }\r\n    moveRows(sheet, startRow, numberOfRows, targetRow) {\r\n        this.ensureItIsPossibleToMoveRows(sheet, startRow, numberOfRows, targetRow);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        const version = this.operations.moveRows(sheet, startRow, numberOfRows, targetRow);\r\n        this.undoRedo.saveOperation(new MoveRowsUndoEntry(sheet, startRow, numberOfRows, targetRow, version));\r\n    }\r\n    moveColumns(sheet, startColumn, numberOfColumns, targetColumn) {\r\n        this.ensureItIsPossibleToMoveColumns(sheet, startColumn, numberOfColumns, targetColumn);\r\n        this.undoRedo.clearRedoStack();\r\n        const version = this.operations.moveColumns(sheet, startColumn, numberOfColumns, targetColumn);\r\n        this.undoRedo.saveOperation(new MoveColumnsUndoEntry(sheet, startColumn, numberOfColumns, targetColumn, version));\r\n    }\r\n    cut(sourceLeftCorner, width, height) {\r\n        this.clipboardOperations.cut(sourceLeftCorner, width, height);\r\n    }\r\n    ensureItIsPossibleToCopy(sourceLeftCorner, width, height) {\r\n        if (!isPositiveInteger(width)) {\r\n            throw new InvalidArgumentsError('width to be positive integer.');\r\n        }\r\n        if (!isPositiveInteger(height)) {\r\n            throw new InvalidArgumentsError('height to be positive integer.');\r\n        }\r\n    }\r\n    copy(sourceLeftCorner, width, height) {\r\n        this.ensureItIsPossibleToCopy(sourceLeftCorner, width, height);\r\n        this.clipboardOperations.copy(sourceLeftCorner, width, height);\r\n    }\r\n    paste(targetLeftCorner) {\r\n        const clipboard = this.clipboardOperations.clipboard;\r\n        if (clipboard === undefined) {\r\n            throw new NothingToPasteError();\r\n        }\r\n        else if (this.clipboardOperations.isCutClipboard()) {\r\n            this.moveCells(clipboard.sourceLeftCorner, clipboard.width, clipboard.height, targetLeftCorner);\r\n        }\r\n        else if (this.clipboardOperations.isCopyClipboard()) {\r\n            this.clipboardOperations.ensureItIsPossibleToCopyPaste(targetLeftCorner);\r\n            const targetRange = AbsoluteCellRange.spanFrom(targetLeftCorner, clipboard.width, clipboard.height);\r\n            const oldContent = this.operations.getRangeClipboardCells(targetRange);\r\n            this.undoRedo.clearRedoStack();\r\n            const addedGlobalNamedExpressions = this.operations.restoreClipboardCells(clipboard.sourceLeftCorner.sheet, clipboard.getContent(targetLeftCorner));\r\n            this.undoRedo.saveOperation(new PasteUndoEntry(targetLeftCorner, oldContent, clipboard.content, addedGlobalNamedExpressions));\r\n        }\r\n    }\r\n    beginUndoRedoBatchMode() {\r\n        this.undoRedo.beginBatchMode();\r\n    }\r\n    commitUndoRedoBatchMode() {\r\n        this.undoRedo.commitBatchMode();\r\n    }\r\n    isClipboardEmpty() {\r\n        return this.clipboardOperations.clipboard === undefined;\r\n    }\r\n    clearClipboard() {\r\n        this.clipboardOperations.clear();\r\n    }\r\n    addSheet(name) {\r\n        if (name !== undefined) {\r\n            this.ensureItIsPossibleToAddSheet(name);\r\n        }\r\n        this.undoRedo.clearRedoStack();\r\n        const addedSheetName = this.operations.addSheet(name);\r\n        this.undoRedo.saveOperation(new AddSheetUndoEntry(addedSheetName));\r\n        return addedSheetName;\r\n    }\r\n    removeSheet(sheetId) {\r\n        this.ensureScopeIdIsValid(sheetId);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        const originalName = this.sheetMapping.fetchDisplayName(sheetId);\r\n        const oldSheetContent = this.operations.getSheetClipboardCells(sheetId);\r\n        const { version, scopedNamedExpressions } = this.operations.removeSheet(sheetId);\r\n        this.undoRedo.saveOperation(new RemoveSheetUndoEntry(originalName, sheetId, oldSheetContent, scopedNamedExpressions, version));\r\n    }\r\n    renameSheet(sheetId, newName) {\r\n        this.ensureItIsPossibleToRenameSheet(sheetId, newName);\r\n        const oldName = this.operations.renameSheet(sheetId, newName);\r\n        if (oldName !== undefined) {\r\n            this.undoRedo.clearRedoStack();\r\n            this.undoRedo.saveOperation(new RenameSheetUndoEntry(sheetId, oldName, newName));\r\n        }\r\n        return oldName;\r\n    }\r\n    clearSheet(sheetId) {\r\n        this.ensureScopeIdIsValid(sheetId);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        const oldSheetContent = this.operations.getSheetClipboardCells(sheetId);\r\n        this.operations.clearSheet(sheetId);\r\n        this.undoRedo.saveOperation(new ClearSheetUndoEntry(sheetId, oldSheetContent));\r\n    }\r\n    setCellContents(topLeftCornerAddress, cellContents) {\r\n        if (!(cellContents instanceof Array)) {\r\n            cellContents = [[cellContents]];\r\n        }\r\n        else {\r\n            for (let i = 0; i < cellContents.length; i++) {\r\n                if (!(cellContents[i] instanceof Array)) {\r\n                    throw new InvalidArgumentsError('an array of arrays or a raw cell value.');\r\n                }\r\n            }\r\n        }\r\n        this.ensureItIsPossibleToChangeCellContents(topLeftCornerAddress, cellContents);\r\n        this.undoRedo.clearRedoStack();\r\n        const oldContents = [];\r\n        for (let i = 0; i < cellContents.length; i++) {\r\n            for (let j = 0; j < cellContents[i].length; j++) {\r\n                const address = {\r\n                    sheet: topLeftCornerAddress.sheet,\r\n                    row: topLeftCornerAddress.row + i,\r\n                    col: topLeftCornerAddress.col + j,\r\n                };\r\n                const newContent = cellContents[i][j];\r\n                this.clipboardOperations.abortCut();\r\n                const oldContent = this.operations.setCellContent(address, newContent);\r\n                oldContents.push({ address, newContent, oldContent });\r\n            }\r\n        }\r\n        this.undoRedo.saveOperation(new SetCellContentsUndoEntry(oldContents));\r\n    }\r\n    setSheetContent(sheetId, values) {\r\n        this.ensureScopeIdIsValid(sheetId);\r\n        this.ensureItIsPossibleToChangeSheetContents(sheetId, values);\r\n        validateAsSheet(values);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        const oldSheetContent = this.operations.getSheetClipboardCells(sheetId);\r\n        this.operations.setSheetContent(sheetId, values);\r\n        this.undoRedo.saveOperation(new SetSheetContentUndoEntry(sheetId, oldSheetContent, values));\r\n    }\r\n    setRowOrder(sheetId, rowMapping) {\r\n        this.validateSwapRowIndexes(sheetId, rowMapping);\r\n        this.testRowOrderForArrays(sheetId, rowMapping);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        const oldContent = this.operations.setRowOrder(sheetId, rowMapping);\r\n        this.undoRedo.saveOperation(new SetRowOrderUndoEntry(sheetId, rowMapping, oldContent));\r\n    }\r\n    validateSwapRowIndexes(sheetId, rowMapping) {\r\n        if (!this.sheetMapping.hasSheetWithId(sheetId)) {\r\n            throw new NoSheetWithIdError(sheetId);\r\n        }\r\n        this.validateRowOrColumnMapping(sheetId, rowMapping, 'row');\r\n    }\r\n    testColumnOrderForArrays(sheetId, columnMapping) {\r\n        for (const [source, target] of columnMapping) {\r\n            if (source !== target) {\r\n                const rowRange = AbsoluteCellRange.spanFrom({ sheet: sheetId, col: source, row: 0 }, 1, Infinity);\r\n                if (this.dependencyGraph.arrayMapping.isFormulaArrayInRange(rowRange)) {\r\n                    throw new SourceLocationHasArrayError();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    setColumnOrder(sheetId, columnMapping) {\r\n        this.validateSwapColumnIndexes(sheetId, columnMapping);\r\n        this.testColumnOrderForArrays(sheetId, columnMapping);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        const oldContent = this.operations.setColumnOrder(sheetId, columnMapping);\r\n        this.undoRedo.saveOperation(new SetColumnOrderUndoEntry(sheetId, columnMapping, oldContent));\r\n    }\r\n    validateSwapColumnIndexes(sheetId, columnMapping) {\r\n        if (!this.sheetMapping.hasSheetWithId(sheetId)) {\r\n            throw new NoSheetWithIdError(sheetId);\r\n        }\r\n        this.validateRowOrColumnMapping(sheetId, columnMapping, 'column');\r\n    }\r\n    testRowOrderForArrays(sheetId, rowMapping) {\r\n        for (const [source, target] of rowMapping) {\r\n            if (source !== target) {\r\n                const rowRange = AbsoluteCellRange.spanFrom({ sheet: sheetId, col: 0, row: source }, Infinity, 1);\r\n                if (this.dependencyGraph.arrayMapping.isFormulaArrayInRange(rowRange)) {\r\n                    throw new SourceLocationHasArrayError();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    mappingFromOrder(sheetId, newOrder, rowOrColumn) {\r\n        if (!this.sheetMapping.hasSheetWithId(sheetId)) {\r\n            throw new NoSheetWithIdError(sheetId);\r\n        }\r\n        const limit = rowOrColumn === 'row' ? this.dependencyGraph.getSheetHeight(sheetId) : this.dependencyGraph.getSheetWidth(sheetId);\r\n        if (newOrder.length !== limit) {\r\n            throw new InvalidArgumentsError(`number of ${rowOrColumn}s provided to be sheet ${rowOrColumn === 'row' ? 'height' : 'width'}.`);\r\n        }\r\n        const ret = [];\r\n        for (let i = 0; i < limit; i++) {\r\n            if (newOrder[i] !== i) {\r\n                ret.push([i, newOrder[i]]);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    undo() {\r\n        if (this.undoRedo.isUndoStackEmpty()) {\r\n            throw new NoOperationToUndoError();\r\n        }\r\n        this.clipboardOperations.abortCut();\r\n        this.undoRedo.undo();\r\n    }\r\n    redo() {\r\n        if (this.undoRedo.isRedoStackEmpty()) {\r\n            throw new NoOperationToRedoError();\r\n        }\r\n        this.clipboardOperations.abortCut();\r\n        this.undoRedo.redo();\r\n    }\r\n    addNamedExpression(expressionName, expression, sheetId, options) {\r\n        this.ensureItIsPossibleToAddNamedExpression(expressionName, expression, sheetId);\r\n        this.operations.addNamedExpression(expressionName, expression, sheetId, options);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        this.undoRedo.saveOperation(new AddNamedExpressionUndoEntry(expressionName, expression, sheetId, options));\r\n    }\r\n    changeNamedExpressionExpression(expressionName, sheetId, newExpression, options) {\r\n        this.ensureItIsPossibleToChangeNamedExpression(expressionName, newExpression, sheetId);\r\n        const [oldNamedExpression, content] = this.operations.changeNamedExpressionExpression(expressionName, newExpression, sheetId, options);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        this.undoRedo.saveOperation(new ChangeNamedExpressionUndoEntry(oldNamedExpression, newExpression, content, sheetId, options));\r\n    }\r\n    removeNamedExpression(expressionName, sheetId) {\r\n        this.ensureScopeIdIsValid(sheetId);\r\n        const [namedExpression, content] = this.operations.removeNamedExpression(expressionName, sheetId);\r\n        this.undoRedo.clearRedoStack();\r\n        this.clipboardOperations.abortCut();\r\n        this.undoRedo.saveOperation(new RemoveNamedExpressionUndoEntry(namedExpression, content, sheetId));\r\n        return namedExpression;\r\n    }\r\n    ensureItIsPossibleToAddNamedExpression(expressionName, expression, sheetId) {\r\n        this.ensureScopeIdIsValid(sheetId);\r\n        this.ensureNamedExpressionNameIsValid(expressionName, sheetId);\r\n        this.ensureNamedExpressionIsValid(expression);\r\n    }\r\n    ensureItIsPossibleToChangeNamedExpression(expressionName, expression, sheetId) {\r\n        this.ensureScopeIdIsValid(sheetId);\r\n        if (this.namedExpressions.namedExpressionForScope(expressionName, sheetId) === undefined) {\r\n            throw new NamedExpressionDoesNotExistError(expressionName);\r\n        }\r\n        this.ensureNamedExpressionIsValid(expression);\r\n    }\r\n    isItPossibleToRemoveNamedExpression(expressionName, sheetId) {\r\n        this.ensureScopeIdIsValid(sheetId);\r\n        if (this.namedExpressions.namedExpressionForScope(expressionName, sheetId) === undefined) {\r\n            throw new NamedExpressionDoesNotExistError(expressionName);\r\n        }\r\n    }\r\n    ensureItIsPossibleToAddRows(sheet, ...indexes) {\r\n        if (!this.sheetMapping.hasSheetWithId(sheet)) {\r\n            throw new NoSheetWithIdError(sheet);\r\n        }\r\n        const sheetHeight = this.dependencyGraph.getSheetHeight(sheet);\r\n        const newRowsCount = indexes.map(index => index[1]).reduce((a, b) => a + b, 0);\r\n        if (sheetHeight + newRowsCount > this.maxRows) {\r\n            throw new SheetSizeLimitExceededError();\r\n        }\r\n        for (const [row, numberOfRowsToAdd] of indexes) {\r\n            if (!isNonnegativeInteger(row) || !isPositiveInteger(numberOfRowsToAdd)) {\r\n                throw new InvalidArgumentsError('row number to be nonnegative and number of rows to add to be positive.');\r\n            }\r\n        }\r\n    }\r\n    ensureItIsPossibleToRemoveRows(sheet, ...indexes) {\r\n        for (const [rowStart, numberOfRows] of indexes) {\r\n            const rowEnd = rowStart + numberOfRows - 1;\r\n            if (!isNonnegativeInteger(rowStart) || !isNonnegativeInteger(rowEnd)) {\r\n                throw new InvalidArgumentsError('starting and ending row to be nonnegative.');\r\n            }\r\n            if (rowEnd < rowStart) {\r\n                throw new InvalidArgumentsError('starting row to be smaller than the ending row.');\r\n            }\r\n            if (!this.sheetMapping.hasSheetWithId(sheet)) {\r\n                throw new NoSheetWithIdError(sheet);\r\n            }\r\n        }\r\n    }\r\n    ensureItIsPossibleToAddColumns(sheet, ...indexes) {\r\n        if (!this.sheetMapping.hasSheetWithId(sheet)) {\r\n            throw new NoSheetWithIdError(sheet);\r\n        }\r\n        const sheetWidth = this.dependencyGraph.getSheetWidth(sheet);\r\n        const newColumnsCount = indexes.map(index => index[1]).reduce((a, b) => a + b, 0);\r\n        if (sheetWidth + newColumnsCount > this.maxColumns) {\r\n            throw new SheetSizeLimitExceededError();\r\n        }\r\n        for (const [column, numberOfColumnsToAdd] of indexes) {\r\n            if (!isNonnegativeInteger(column) || !isPositiveInteger(numberOfColumnsToAdd)) {\r\n                throw new InvalidArgumentsError('column number to be nonnegative and number of columns to add to be positive.');\r\n            }\r\n        }\r\n    }\r\n    ensureItIsPossibleToRemoveColumns(sheet, ...indexes) {\r\n        for (const [columnStart, numberOfColumns] of indexes) {\r\n            const columnEnd = columnStart + numberOfColumns - 1;\r\n            if (!isNonnegativeInteger(columnStart) || !isNonnegativeInteger(columnEnd)) {\r\n                throw new InvalidArgumentsError('starting and ending column to be nonnegative.');\r\n            }\r\n            if (columnEnd < columnStart) {\r\n                throw new InvalidArgumentsError('starting column to be smaller than the ending column.');\r\n            }\r\n            if (!this.sheetMapping.hasSheetWithId(sheet)) {\r\n                throw new NoSheetWithIdError(sheet);\r\n            }\r\n        }\r\n    }\r\n    ensureItIsPossibleToMoveRows(sheet, startRow, numberOfRows, targetRow) {\r\n        this.ensureItIsPossibleToAddRows(sheet, [targetRow, numberOfRows]);\r\n        const sourceStart = simpleCellAddress(sheet, 0, startRow);\r\n        const targetStart = simpleCellAddress(sheet, 0, targetRow);\r\n        if (!this.sheetMapping.hasSheetWithId(sheet)\r\n            || invalidSimpleCellAddress(sourceStart)\r\n            || invalidSimpleCellAddress(targetStart)\r\n            || !isPositiveInteger(numberOfRows)\r\n            || (targetRow <= startRow + numberOfRows && targetRow >= startRow)) {\r\n            throw new InvalidArgumentsError('a valid range of rows to move.');\r\n        }\r\n        const width = this.dependencyGraph.getSheetWidth(sheet);\r\n        const sourceRange = AbsoluteCellRange.spanFrom(sourceStart, width, numberOfRows);\r\n        if (this.dependencyGraph.arrayMapping.isFormulaArrayInRange(sourceRange)) {\r\n            throw new SourceLocationHasArrayError();\r\n        }\r\n        if (targetRow > 0 && this.dependencyGraph.arrayMapping.isFormulaArrayInAllRows(RowsSpan.fromNumberOfRows(sheet, targetRow - 1, 2))) {\r\n            throw new TargetLocationHasArrayError();\r\n        }\r\n    }\r\n    ensureItIsPossibleToMoveColumns(sheet, startColumn, numberOfColumns, targetColumn) {\r\n        this.ensureItIsPossibleToAddColumns(sheet, [targetColumn, numberOfColumns]);\r\n        const sourceStart = simpleCellAddress(sheet, startColumn, 0);\r\n        const targetStart = simpleCellAddress(sheet, targetColumn, 0);\r\n        if (!this.sheetMapping.hasSheetWithId(sheet)\r\n            || invalidSimpleCellAddress(sourceStart)\r\n            || invalidSimpleCellAddress(targetStart)\r\n            || !isPositiveInteger(numberOfColumns)\r\n            || (targetColumn <= startColumn + numberOfColumns && targetColumn >= startColumn)) {\r\n            throw new InvalidArgumentsError('a valid range of columns to move.');\r\n        }\r\n        const sheetHeight = this.dependencyGraph.getSheetHeight(sheet);\r\n        const sourceRange = AbsoluteCellRange.spanFrom(sourceStart, numberOfColumns, sheetHeight);\r\n        if (this.dependencyGraph.arrayMapping.isFormulaArrayInRange(sourceRange)) {\r\n            throw new SourceLocationHasArrayError();\r\n        }\r\n        if (targetColumn > 0 && this.dependencyGraph.arrayMapping.isFormulaArrayInAllColumns(ColumnsSpan.fromNumberOfColumns(sheet, targetColumn - 1, 2))) {\r\n            throw new TargetLocationHasArrayError();\r\n        }\r\n    }\r\n    ensureItIsPossibleToAddSheet(name) {\r\n        if (this.sheetMapping.hasSheetWithName(name)) {\r\n            throw new SheetNameAlreadyTakenError(name);\r\n        }\r\n    }\r\n    ensureItIsPossibleToRenameSheet(sheetId, name) {\r\n        if (!this.sheetMapping.hasSheetWithId(sheetId)) {\r\n            throw new NoSheetWithIdError(sheetId);\r\n        }\r\n        const existingSheetId = this.sheetMapping.get(name);\r\n        if (existingSheetId !== undefined && existingSheetId !== sheetId) {\r\n            throw new SheetNameAlreadyTakenError(name);\r\n        }\r\n    }\r\n    ensureItIsPossibleToChangeContent(address) {\r\n        if (invalidSimpleCellAddress(address)) {\r\n            throw new InvalidAddressError(address);\r\n        }\r\n        if (!this.sheetMapping.hasSheetWithId(address.sheet)) {\r\n            throw new NoSheetWithIdError(address.sheet);\r\n        }\r\n    }\r\n    ensureItIsPossibleToChangeCellContents(inputAddress, content) {\r\n        const boundaries = findBoundaries(content);\r\n        const targetRange = AbsoluteCellRange.spanFrom(inputAddress, boundaries.width, boundaries.height);\r\n        this.ensureRangeInSizeLimits(targetRange);\r\n        for (const address of targetRange.addresses(this.dependencyGraph)) {\r\n            this.ensureItIsPossibleToChangeContent(address);\r\n        }\r\n    }\r\n    ensureItIsPossibleToChangeSheetContents(sheetId, content) {\r\n        const boundaries = findBoundaries(content);\r\n        const targetRange = AbsoluteCellRange.spanFrom(simpleCellAddress(sheetId, 0, 0), boundaries.width, boundaries.height);\r\n        this.ensureRangeInSizeLimits(targetRange);\r\n    }\r\n    ensureRangeInSizeLimits(range) {\r\n        if (range.exceedsSheetSizeLimits(this.maxColumns, this.maxRows)) {\r\n            throw new SheetSizeLimitExceededError();\r\n        }\r\n    }\r\n    isThereSomethingToUndo() {\r\n        return !this.undoRedo.isUndoStackEmpty();\r\n    }\r\n    isThereSomethingToRedo() {\r\n        return !this.undoRedo.isRedoStackEmpty();\r\n    }\r\n    getAndClearContentChanges() {\r\n        return this.operations.getAndClearContentChanges();\r\n    }\r\n    ensureScopeIdIsValid(scopeId) {\r\n        if (scopeId !== undefined && !this.sheetMapping.hasSheetWithId(scopeId)) {\r\n            throw new NoSheetWithIdError(scopeId);\r\n        }\r\n    }\r\n    validateRowOrColumnMapping(sheetId, rowMapping, rowOrColumn) {\r\n        const limit = rowOrColumn === 'row' ? this.dependencyGraph.getSheetHeight(sheetId) : this.dependencyGraph.getSheetWidth(sheetId);\r\n        const sources = rowMapping.map(([a, _]) => a).sort((a, b) => a - b);\r\n        const targets = rowMapping.map(([_, b]) => b).sort((a, b) => a - b);\r\n        for (let i = 0; i < sources.length; i++) {\r\n            if (!isNonnegativeInteger(sources[i]) || sources[i] >= limit) {\r\n                throw new InvalidArgumentsError(`${rowOrColumn} numbers to be nonnegative integers and less than sheet ${rowOrColumn === 'row' ? 'height' : 'width'}.`);\r\n            }\r\n            if (sources[i] === sources[i + 1]) {\r\n                throw new InvalidArgumentsError(`source ${rowOrColumn} numbers to be unique.`);\r\n            }\r\n            if (sources[i] !== targets[i]) {\r\n                throw new InvalidArgumentsError(`target ${rowOrColumn} numbers to be permutation of source ${rowOrColumn} numbers.`);\r\n            }\r\n        }\r\n    }\r\n    ensureNamedExpressionNameIsValid(expressionName, sheetId) {\r\n        if (!this.namedExpressions.isNameValid(expressionName)) {\r\n            throw new NamedExpressionNameIsInvalidError(expressionName);\r\n        }\r\n        if (!this.namedExpressions.isNameAvailable(expressionName, sheetId)) {\r\n            throw new NamedExpressionNameIsAlreadyTakenError(expressionName);\r\n        }\r\n    }\r\n    ensureNamedExpressionIsValid(expression) {\r\n        const parsedExpression = this.cellContentParser.parse(expression);\r\n        if (parsedExpression instanceof CellContent.Formula) {\r\n            const parsingResult = this.parser.parse(parsedExpression.formula, simpleCellAddress(-1, 0, 0));\r\n            if (doesContainRelativeReferences(parsingResult.ast)) {\r\n                throw new NoRelativeAddressesAllowedError();\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction isPositiveInteger(x) {\r\n    return Number.isInteger(x) && x > 0;\r\n}\r\nfunction isNonnegativeInteger(x) {\r\n    return Number.isInteger(x) && x >= 0;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { simpleCellAddress } from './Cell';\r\nimport { AstNodeType } from './parser';\r\nexport class InternalNamedExpression {\r\n    constructor(displayName, address, added, options) {\r\n        this.displayName = displayName;\r\n        this.address = address;\r\n        this.added = added;\r\n        this.options = options;\r\n    }\r\n    normalizeExpressionName() {\r\n        return this.displayName.toLowerCase();\r\n    }\r\n    copy() {\r\n        return new InternalNamedExpression(this.displayName, this.address, this.added, this.options);\r\n    }\r\n}\r\nclass WorkbookStore {\r\n    constructor() {\r\n        this.mapping = new Map();\r\n    }\r\n    has(expressionName) {\r\n        return this.mapping.has(this.normalizeExpressionName(expressionName));\r\n    }\r\n    isNameAvailable(expressionName) {\r\n        const normalizedExpressionName = this.normalizeExpressionName(expressionName);\r\n        const namedExpression = this.mapping.get(normalizedExpressionName);\r\n        return !(namedExpression && namedExpression.added);\r\n    }\r\n    add(namedExpression) {\r\n        this.mapping.set(namedExpression.normalizeExpressionName(), namedExpression);\r\n    }\r\n    get(expressionName) {\r\n        return this.mapping.get(this.normalizeExpressionName(expressionName));\r\n    }\r\n    getExisting(expressionName) {\r\n        const namedExpression = this.mapping.get(this.normalizeExpressionName(expressionName));\r\n        if (namedExpression && namedExpression.added) {\r\n            return namedExpression;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    remove(expressionName) {\r\n        const normalizedExpressionName = this.normalizeExpressionName(expressionName);\r\n        const namedExpression = this.mapping.get(normalizedExpressionName);\r\n        if (namedExpression) {\r\n            namedExpression.added = false;\r\n        }\r\n    }\r\n    getAllNamedExpressions() {\r\n        return Array.from(this.mapping.values()).filter((ne) => ne.added);\r\n    }\r\n    normalizeExpressionName(expressionName) {\r\n        return expressionName.toLowerCase();\r\n    }\r\n}\r\nclass WorksheetStore {\r\n    constructor() {\r\n        this.mapping = new Map();\r\n    }\r\n    add(namedExpression) {\r\n        this.mapping.set(this.normalizeExpressionName(namedExpression.displayName), namedExpression);\r\n    }\r\n    get(expressionName) {\r\n        return this.mapping.get(this.normalizeExpressionName(expressionName));\r\n    }\r\n    has(expressionName) {\r\n        return this.mapping.has(this.normalizeExpressionName(expressionName));\r\n    }\r\n    getAllNamedExpressions() {\r\n        return Array.from(this.mapping.values()).filter((ne) => ne.added);\r\n    }\r\n    isNameAvailable(expressionName) {\r\n        const normalizedExpressionName = this.normalizeExpressionName(expressionName);\r\n        return !this.mapping.has(normalizedExpressionName);\r\n    }\r\n    remove(expressionName) {\r\n        const normalizedExpressionName = this.normalizeExpressionName(expressionName);\r\n        const namedExpression = this.mapping.get(normalizedExpressionName);\r\n        if (namedExpression) {\r\n            this.mapping.delete(normalizedExpressionName);\r\n        }\r\n    }\r\n    normalizeExpressionName(expressionName) {\r\n        return expressionName.toLowerCase();\r\n    }\r\n}\r\nexport class NamedExpressions {\r\n    constructor() {\r\n        this.nextNamedExpressionRow = 0;\r\n        this.workbookStore = new WorkbookStore();\r\n        this.worksheetStores = new Map();\r\n        this.addressCache = new Map();\r\n    }\r\n    isNameAvailable(expressionName, sheetId) {\r\n        var _a, _b;\r\n        if (sheetId === undefined) {\r\n            return this.workbookStore.isNameAvailable(expressionName);\r\n        }\r\n        else {\r\n            return (_b = (_a = this.worksheetStore(sheetId)) === null || _a === void 0 ? void 0 : _a.isNameAvailable(expressionName)) !== null && _b !== void 0 ? _b : true;\r\n        }\r\n    }\r\n    namedExpressionInAddress(row) {\r\n        const namedExpression = this.addressCache.get(row);\r\n        if (namedExpression && namedExpression.added) {\r\n            return namedExpression;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    namedExpressionForScope(expressionName, sheetId) {\r\n        var _a;\r\n        if (sheetId === undefined) {\r\n            return this.workbookStore.getExisting(expressionName);\r\n        }\r\n        else {\r\n            return (_a = this.worksheetStore(sheetId)) === null || _a === void 0 ? void 0 : _a.get(expressionName);\r\n        }\r\n    }\r\n    nearestNamedExpression(expressionName, sheetId) {\r\n        var _a, _b;\r\n        return (_b = (_a = this.worksheetStore(sheetId)) === null || _a === void 0 ? void 0 : _a.get(expressionName)) !== null && _b !== void 0 ? _b : this.workbookStore.getExisting(expressionName);\r\n    }\r\n    isExpressionInScope(expressionName, sheetId) {\r\n        var _a, _b;\r\n        return (_b = (_a = this.worksheetStore(sheetId)) === null || _a === void 0 ? void 0 : _a.has(expressionName)) !== null && _b !== void 0 ? _b : false;\r\n    }\r\n    isNameValid(expressionName) {\r\n        if (/^[A-Za-z]+[0-9]+$/.test(expressionName)) {\r\n            return false;\r\n        }\r\n        return /^[A-Za-z\\u00C0-\\u02AF_][A-Za-z0-9\\u00C0-\\u02AF._]*$/.test(expressionName);\r\n    }\r\n    addNamedExpression(expressionName, sheetId, options) {\r\n        const store = sheetId === undefined ? this.workbookStore : this.worksheetStoreOrCreate(sheetId);\r\n        let namedExpression = store.get(expressionName);\r\n        if (namedExpression !== undefined) {\r\n            namedExpression.added = true;\r\n            namedExpression.displayName = expressionName;\r\n            namedExpression.options = options;\r\n        }\r\n        else {\r\n            namedExpression = new InternalNamedExpression(expressionName, this.nextAddress(), true, options);\r\n            store.add(namedExpression);\r\n        }\r\n        this.addressCache.set(namedExpression.address.row, namedExpression);\r\n        return namedExpression;\r\n    }\r\n    restoreNamedExpression(namedExpression, sheetId) {\r\n        const store = sheetId === undefined ? this.workbookStore : this.worksheetStoreOrCreate(sheetId);\r\n        namedExpression.added = true;\r\n        store.add(namedExpression);\r\n        this.addressCache.set(namedExpression.address.row, namedExpression);\r\n        return namedExpression;\r\n    }\r\n    namedExpressionOrPlaceholder(expressionName, sheetId) {\r\n        var _a;\r\n        return (_a = this.worksheetStoreOrCreate(sheetId).get(expressionName)) !== null && _a !== void 0 ? _a : this.workbookNamedExpressionOrPlaceholder(expressionName);\r\n    }\r\n    workbookNamedExpressionOrPlaceholder(expressionName) {\r\n        let namedExpression = this.workbookStore.get(expressionName);\r\n        if (namedExpression === undefined) {\r\n            namedExpression = new InternalNamedExpression(expressionName, this.nextAddress(), false);\r\n            this.workbookStore.add(namedExpression);\r\n        }\r\n        return namedExpression;\r\n    }\r\n    remove(expressionName, sheetId) {\r\n        let store;\r\n        if (sheetId === undefined) {\r\n            store = this.workbookStore;\r\n        }\r\n        else {\r\n            store = this.worksheetStore(sheetId);\r\n        }\r\n        const namedExpression = store === null || store === void 0 ? void 0 : store.get(expressionName);\r\n        if (store === undefined || namedExpression === undefined || !namedExpression.added) {\r\n            throw 'Named expression does not exist';\r\n        }\r\n        store.remove(expressionName);\r\n        if (store instanceof WorksheetStore && store.mapping.size === 0) {\r\n            this.worksheetStores.delete(sheetId);\r\n        }\r\n        this.addressCache.delete(namedExpression.address.row);\r\n    }\r\n    getAllNamedExpressionsNamesInScope(sheetId) {\r\n        return this.getAllNamedExpressions().filter(({ scope }) => scope === sheetId).map((ne) => ne.expression.displayName);\r\n    }\r\n    getAllNamedExpressionsNames() {\r\n        return this.getAllNamedExpressions().map((ne) => ne.expression.displayName);\r\n    }\r\n    getAllNamedExpressions() {\r\n        const storedNamedExpressions = [];\r\n        this.workbookStore.getAllNamedExpressions().forEach(expr => {\r\n            storedNamedExpressions.push({\r\n                expression: expr,\r\n                scope: undefined\r\n            });\r\n        });\r\n        this.worksheetStores.forEach((store, sheetNum) => {\r\n            store.getAllNamedExpressions().forEach(expr => {\r\n                storedNamedExpressions.push({\r\n                    expression: expr,\r\n                    scope: sheetNum\r\n                });\r\n            });\r\n        });\r\n        return storedNamedExpressions;\r\n    }\r\n    getAllNamedExpressionsForScope(scope) {\r\n        var _a, _b;\r\n        if (scope === undefined) {\r\n            return this.workbookStore.getAllNamedExpressions();\r\n        }\r\n        else {\r\n            return (_b = (_a = this.worksheetStores.get(scope)) === null || _a === void 0 ? void 0 : _a.getAllNamedExpressions()) !== null && _b !== void 0 ? _b : [];\r\n        }\r\n    }\r\n    worksheetStoreOrCreate(sheetId) {\r\n        let store = this.worksheetStores.get(sheetId);\r\n        if (!store) {\r\n            store = new WorksheetStore();\r\n            this.worksheetStores.set(sheetId, store);\r\n        }\r\n        return store;\r\n    }\r\n    worksheetStore(sheetId) {\r\n        return this.worksheetStores.get(sheetId);\r\n    }\r\n    nextAddress() {\r\n        return simpleCellAddress(NamedExpressions.SHEET_FOR_WORKBOOK_EXPRESSIONS, 0, this.nextNamedExpressionRow++);\r\n    }\r\n}\r\nNamedExpressions.SHEET_FOR_WORKBOOK_EXPRESSIONS = -1;\r\nexport const doesContainRelativeReferences = (ast) => {\r\n    switch (ast.type) {\r\n        case AstNodeType.EMPTY:\r\n        case AstNodeType.NUMBER:\r\n        case AstNodeType.STRING:\r\n        case AstNodeType.ERROR:\r\n        case AstNodeType.ERROR_WITH_RAW_INPUT:\r\n            return false;\r\n        case AstNodeType.CELL_REFERENCE:\r\n            return !ast.reference.isAbsolute();\r\n        case AstNodeType.CELL_RANGE:\r\n        case AstNodeType.COLUMN_RANGE:\r\n        case AstNodeType.ROW_RANGE:\r\n            return !ast.start.isAbsolute();\r\n        case AstNodeType.NAMED_EXPRESSION:\r\n            return false;\r\n        case AstNodeType.PERCENT_OP:\r\n        case AstNodeType.PLUS_UNARY_OP:\r\n        case AstNodeType.MINUS_UNARY_OP: {\r\n            return doesContainRelativeReferences(ast.value);\r\n        }\r\n        case AstNodeType.CONCATENATE_OP:\r\n        case AstNodeType.EQUALS_OP:\r\n        case AstNodeType.NOT_EQUAL_OP:\r\n        case AstNodeType.LESS_THAN_OP:\r\n        case AstNodeType.GREATER_THAN_OP:\r\n        case AstNodeType.LESS_THAN_OR_EQUAL_OP:\r\n        case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\r\n        case AstNodeType.MINUS_OP:\r\n        case AstNodeType.PLUS_OP:\r\n        case AstNodeType.TIMES_OP:\r\n        case AstNodeType.DIV_OP:\r\n        case AstNodeType.POWER_OP:\r\n            return doesContainRelativeReferences(ast.left) || doesContainRelativeReferences(ast.right);\r\n        case AstNodeType.PARENTHESIS:\r\n            return doesContainRelativeReferences(ast.expression);\r\n        case AstNodeType.FUNCTION_CALL: {\r\n            return ast.args.some((arg) => doesContainRelativeReferences(arg));\r\n        }\r\n        case AstNodeType.ARRAY: {\r\n            return ast.args.some(row => row.some(arg => doesContainRelativeReferences(arg)));\r\n        }\r\n    }\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\r\nimport { absolutizeDependencies, filterDependenciesOutOfScope } from './absolutizeDependencies';\r\nimport { ArraySize } from './ArraySize';\r\nimport { equalSimpleCellAddress, invalidSimpleCellAddress, simpleCellAddress } from './Cell';\r\nimport { CellContent } from './CellContentParser';\r\nimport { ClipboardCellType } from './ClipboardOperations';\r\nimport { ContentChanges } from './ContentChanges';\r\nimport { ArrayVertex, EmptyCellVertex, FormulaCellVertex, ParsingErrorVertex, SparseStrategy, ValueCellVertex } from './DependencyGraph';\r\nimport { FormulaVertex } from './DependencyGraph/FormulaCellVertex';\r\nimport { AddColumnsTransformer } from './dependencyTransformers/AddColumnsTransformer';\r\nimport { AddRowsTransformer } from './dependencyTransformers/AddRowsTransformer';\r\nimport { CleanOutOfScopeDependenciesTransformer } from './dependencyTransformers/CleanOutOfScopeDependenciesTransformer';\r\nimport { MoveCellsTransformer } from './dependencyTransformers/MoveCellsTransformer';\r\nimport { RemoveColumnsTransformer } from './dependencyTransformers/RemoveColumnsTransformer';\r\nimport { RemoveRowsTransformer } from './dependencyTransformers/RemoveRowsTransformer';\r\nimport { RemoveSheetTransformer } from './dependencyTransformers/RemoveSheetTransformer';\r\nimport { InvalidArgumentsError, NamedExpressionDoesNotExistError, NoRelativeAddressesAllowedError, SheetSizeLimitExceededError, SourceLocationHasArrayError, TargetLocationHasArrayError } from './errors';\r\nimport { EmptyValue, getRawValue } from './interpreter/InterpreterValue';\r\nimport { doesContainRelativeReferences, NamedExpressions } from './NamedExpressions';\r\nimport { NamedExpressionDependency } from './parser';\r\nimport { findBoundaries } from './Sheet';\r\nimport { ColumnsSpan, RowsSpan } from './Span';\r\nimport { StatType } from './statistics';\r\nexport class RemoveRowsCommand {\r\n    constructor(sheet, indexes) {\r\n        this.sheet = sheet;\r\n        this.indexes = indexes;\r\n    }\r\n    normalizedIndexes() {\r\n        return normalizeRemovedIndexes(this.indexes);\r\n    }\r\n    rowsSpans() {\r\n        return this.normalizedIndexes().map(normalizedIndex => RowsSpan.fromNumberOfRows(this.sheet, normalizedIndex[0], normalizedIndex[1]));\r\n    }\r\n}\r\nexport class AddRowsCommand {\r\n    constructor(sheet, indexes) {\r\n        this.sheet = sheet;\r\n        this.indexes = indexes;\r\n    }\r\n    normalizedIndexes() {\r\n        return normalizeAddedIndexes(this.indexes);\r\n    }\r\n    rowsSpans() {\r\n        return this.normalizedIndexes().map(normalizedIndex => RowsSpan.fromNumberOfRows(this.sheet, normalizedIndex[0], normalizedIndex[1]));\r\n    }\r\n}\r\nexport class AddColumnsCommand {\r\n    constructor(sheet, indexes) {\r\n        this.sheet = sheet;\r\n        this.indexes = indexes;\r\n    }\r\n    normalizedIndexes() {\r\n        return normalizeAddedIndexes(this.indexes);\r\n    }\r\n    columnsSpans() {\r\n        return this.normalizedIndexes().map(normalizedIndex => ColumnsSpan.fromNumberOfColumns(this.sheet, normalizedIndex[0], normalizedIndex[1]));\r\n    }\r\n}\r\nexport class RemoveColumnsCommand {\r\n    constructor(sheet, indexes) {\r\n        this.sheet = sheet;\r\n        this.indexes = indexes;\r\n    }\r\n    normalizedIndexes() {\r\n        return normalizeRemovedIndexes(this.indexes);\r\n    }\r\n    columnsSpans() {\r\n        return this.normalizedIndexes().map(normalizedIndex => ColumnsSpan.fromNumberOfColumns(this.sheet, normalizedIndex[0], normalizedIndex[1]));\r\n    }\r\n}\r\nexport class Operations {\r\n    constructor(config, dependencyGraph, columnSearch, cellContentParser, parser, stats, lazilyTransformingAstService, namedExpressions, arraySizePredictor) {\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.columnSearch = columnSearch;\r\n        this.cellContentParser = cellContentParser;\r\n        this.parser = parser;\r\n        this.stats = stats;\r\n        this.lazilyTransformingAstService = lazilyTransformingAstService;\r\n        this.namedExpressions = namedExpressions;\r\n        this.arraySizePredictor = arraySizePredictor;\r\n        this.changes = ContentChanges.empty();\r\n        this.allocateNamedExpressionAddressSpace();\r\n        this.maxColumns = config.maxColumns;\r\n        this.maxRows = config.maxRows;\r\n    }\r\n    get sheetMapping() {\r\n        return this.dependencyGraph.sheetMapping;\r\n    }\r\n    get addressMapping() {\r\n        return this.dependencyGraph.addressMapping;\r\n    }\r\n    removeRows(cmd) {\r\n        const rowsRemovals = [];\r\n        for (const rowsToRemove of cmd.rowsSpans()) {\r\n            const rowsRemoval = this.doRemoveRows(rowsToRemove);\r\n            if (rowsRemoval) {\r\n                rowsRemovals.push(rowsRemoval);\r\n            }\r\n        }\r\n        return rowsRemovals;\r\n    }\r\n    addRows(cmd) {\r\n        for (const addedRows of cmd.rowsSpans()) {\r\n            this.doAddRows(addedRows);\r\n        }\r\n    }\r\n    addColumns(cmd) {\r\n        for (const addedColumns of cmd.columnsSpans()) {\r\n            this.doAddColumns(addedColumns);\r\n        }\r\n    }\r\n    removeColumns(cmd) {\r\n        const columnsRemovals = [];\r\n        for (const columnsToRemove of cmd.columnsSpans()) {\r\n            const columnsRemoval = this.doRemoveColumns(columnsToRemove);\r\n            if (columnsRemoval) {\r\n                columnsRemovals.push(columnsRemoval);\r\n            }\r\n        }\r\n        return columnsRemovals;\r\n    }\r\n    removeSheet(sheetId) {\r\n        this.dependencyGraph.removeSheet(sheetId);\r\n        let version;\r\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\r\n            const transformation = new RemoveSheetTransformer(sheetId);\r\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\r\n            version = this.lazilyTransformingAstService.addTransformation(transformation);\r\n        });\r\n        this.sheetMapping.removeSheet(sheetId);\r\n        this.columnSearch.removeSheet(sheetId);\r\n        const scopedNamedExpressions = this.namedExpressions.getAllNamedExpressionsForScope(sheetId).map((namedexpression) => this.removeNamedExpression(namedexpression.normalizeExpressionName(), sheetId));\r\n        return { version: version, scopedNamedExpressions };\r\n    }\r\n    removeSheetByName(sheetName) {\r\n        const sheetId = this.sheetMapping.fetch(sheetName);\r\n        return this.removeSheet(sheetId);\r\n    }\r\n    clearSheet(sheetId) {\r\n        this.dependencyGraph.clearSheet(sheetId);\r\n        this.columnSearch.removeSheet(sheetId);\r\n    }\r\n    addSheet(name) {\r\n        const sheetId = this.sheetMapping.addSheet(name);\r\n        const sheet = [];\r\n        this.dependencyGraph.addressMapping.autoAddSheet(sheetId, sheet, findBoundaries(sheet));\r\n        return this.sheetMapping.fetchDisplayName(sheetId);\r\n    }\r\n    renameSheet(sheetId, newName) {\r\n        return this.sheetMapping.renameSheet(sheetId, newName);\r\n    }\r\n    moveRows(sheet, startRow, numberOfRows, targetRow) {\r\n        const rowsToAdd = RowsSpan.fromNumberOfRows(sheet, targetRow, numberOfRows);\r\n        this.lazilyTransformingAstService.beginCombinedMode(sheet);\r\n        this.doAddRows(rowsToAdd);\r\n        if (targetRow < startRow) {\r\n            startRow += numberOfRows;\r\n        }\r\n        const startAddress = simpleCellAddress(sheet, 0, startRow);\r\n        const targetAddress = simpleCellAddress(sheet, 0, targetRow);\r\n        this.moveCells(startAddress, Number.POSITIVE_INFINITY, numberOfRows, targetAddress);\r\n        const rowsToRemove = RowsSpan.fromNumberOfRows(sheet, startRow, numberOfRows);\r\n        this.doRemoveRows(rowsToRemove);\r\n        return this.lazilyTransformingAstService.commitCombinedMode();\r\n    }\r\n    moveColumns(sheet, startColumn, numberOfColumns, targetColumn) {\r\n        const columnsToAdd = ColumnsSpan.fromNumberOfColumns(sheet, targetColumn, numberOfColumns);\r\n        this.lazilyTransformingAstService.beginCombinedMode(sheet);\r\n        this.doAddColumns(columnsToAdd);\r\n        if (targetColumn < startColumn) {\r\n            startColumn += numberOfColumns;\r\n        }\r\n        const startAddress = simpleCellAddress(sheet, startColumn, 0);\r\n        const targetAddress = simpleCellAddress(sheet, targetColumn, 0);\r\n        this.moveCells(startAddress, numberOfColumns, Number.POSITIVE_INFINITY, targetAddress);\r\n        const columnsToRemove = ColumnsSpan.fromNumberOfColumns(sheet, startColumn, numberOfColumns);\r\n        this.doRemoveColumns(columnsToRemove);\r\n        return this.lazilyTransformingAstService.commitCombinedMode();\r\n    }\r\n    moveCells(sourceLeftCorner, width, height, destinationLeftCorner) {\r\n        this.ensureItIsPossibleToMoveCells(sourceLeftCorner, width, height, destinationLeftCorner);\r\n        const sourceRange = AbsoluteCellRange.spanFrom(sourceLeftCorner, width, height);\r\n        const targetRange = AbsoluteCellRange.spanFrom(destinationLeftCorner, width, height);\r\n        const toRight = destinationLeftCorner.col - sourceLeftCorner.col;\r\n        const toBottom = destinationLeftCorner.row - sourceLeftCorner.row;\r\n        const toSheet = destinationLeftCorner.sheet;\r\n        const currentDataAtTarget = this.getRangeClipboardCells(targetRange);\r\n        const valuesToRemove = this.dependencyGraph.rawValuesFromRange(targetRange);\r\n        this.columnSearch.removeValues(valuesToRemove);\r\n        const valuesToMove = this.dependencyGraph.rawValuesFromRange(sourceRange);\r\n        this.columnSearch.moveValues(valuesToMove, toRight, toBottom, toSheet);\r\n        let version;\r\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\r\n            const transformation = new MoveCellsTransformer(sourceRange, toRight, toBottom, toSheet);\r\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\r\n            version = this.lazilyTransformingAstService.addTransformation(transformation);\r\n        });\r\n        this.dependencyGraph.moveCells(sourceRange, toRight, toBottom, toSheet);\r\n        const addedGlobalNamedExpressions = this.updateNamedExpressionsForMovedCells(sourceLeftCorner, width, height, destinationLeftCorner);\r\n        return {\r\n            version: version,\r\n            overwrittenCellsData: currentDataAtTarget,\r\n            addedGlobalNamedExpressions: addedGlobalNamedExpressions\r\n        };\r\n    }\r\n    setRowOrder(sheetId, rowMapping) {\r\n        const buffer = [];\r\n        let oldContent = [];\r\n        for (const [source, target] of rowMapping) {\r\n            if (source !== target) {\r\n                const rowRange = AbsoluteCellRange.spanFrom({ sheet: sheetId, col: 0, row: source }, Infinity, 1);\r\n                const row = this.getRangeClipboardCells(rowRange);\r\n                oldContent = oldContent.concat(row);\r\n                buffer.push(row.map(([{ sheet, col }, cell]) => [{ sheet, col, row: target }, cell]));\r\n            }\r\n        }\r\n        buffer.forEach(row => this.restoreClipboardCells(sheetId, row.values()));\r\n        return oldContent;\r\n    }\r\n    setColumnOrder(sheetId, columnMapping) {\r\n        const buffer = [];\r\n        let oldContent = [];\r\n        for (const [source, target] of columnMapping) {\r\n            if (source !== target) {\r\n                const rowRange = AbsoluteCellRange.spanFrom({ sheet: sheetId, col: source, row: 0 }, 1, Infinity);\r\n                const column = this.getRangeClipboardCells(rowRange);\r\n                oldContent = oldContent.concat(column);\r\n                buffer.push(column.map(([{ sheet, col: _col, row }, cell]) => [{ sheet, col: target, row }, cell]));\r\n            }\r\n        }\r\n        buffer.forEach(column => this.restoreClipboardCells(sheetId, column.values()));\r\n        return oldContent;\r\n    }\r\n    addNamedExpression(expressionName, expression, sheetId, options) {\r\n        const namedExpression = this.namedExpressions.addNamedExpression(expressionName, sheetId, options);\r\n        this.storeNamedExpressionInCell(namedExpression.address, expression);\r\n        this.adjustNamedExpressionEdges(namedExpression, expressionName, sheetId);\r\n    }\r\n    restoreNamedExpression(namedExpression, content, sheetId) {\r\n        const expressionName = namedExpression.displayName;\r\n        this.restoreCell(namedExpression.address, content);\r\n        const restoredNamedExpression = this.namedExpressions.restoreNamedExpression(namedExpression, sheetId);\r\n        this.adjustNamedExpressionEdges(restoredNamedExpression, expressionName, sheetId);\r\n    }\r\n    changeNamedExpressionExpression(expressionName, newExpression, sheetId, options) {\r\n        const namedExpression = this.namedExpressions.namedExpressionForScope(expressionName, sheetId);\r\n        if (!namedExpression) {\r\n            throw new NamedExpressionDoesNotExistError(expressionName);\r\n        }\r\n        const oldNamedExpression = namedExpression.copy();\r\n        namedExpression.options = options;\r\n        const content = this.getClipboardCell(namedExpression.address);\r\n        this.storeNamedExpressionInCell(namedExpression.address, newExpression);\r\n        return [oldNamedExpression, content];\r\n    }\r\n    removeNamedExpression(expressionName, sheetId) {\r\n        const namedExpression = this.namedExpressions.namedExpressionForScope(expressionName, sheetId);\r\n        if (!namedExpression) {\r\n            throw new NamedExpressionDoesNotExistError(expressionName);\r\n        }\r\n        this.namedExpressions.remove(namedExpression.displayName, sheetId);\r\n        const content = this.getClipboardCell(namedExpression.address);\r\n        if (sheetId !== undefined) {\r\n            const globalNamedExpression = this.namedExpressions.workbookNamedExpressionOrPlaceholder(expressionName);\r\n            this.dependencyGraph.exchangeNode(namedExpression.address, globalNamedExpression.address);\r\n        }\r\n        else {\r\n            this.dependencyGraph.setCellEmpty(namedExpression.address);\r\n        }\r\n        return [\r\n            namedExpression,\r\n            content\r\n        ];\r\n    }\r\n    ensureItIsPossibleToMoveCells(sourceLeftCorner, width, height, destinationLeftCorner) {\r\n        if (invalidSimpleCellAddress(sourceLeftCorner) ||\r\n            !((isPositiveInteger(width) && isPositiveInteger(height)) || isRowOrColumnRange(sourceLeftCorner, width, height)) ||\r\n            invalidSimpleCellAddress(destinationLeftCorner) ||\r\n            !this.sheetMapping.hasSheetWithId(sourceLeftCorner.sheet) ||\r\n            !this.sheetMapping.hasSheetWithId(destinationLeftCorner.sheet)) {\r\n            throw new InvalidArgumentsError('a valid range of cells to move.');\r\n        }\r\n        const sourceRange = AbsoluteCellRange.spanFrom(sourceLeftCorner, width, height);\r\n        const targetRange = AbsoluteCellRange.spanFrom(destinationLeftCorner, width, height);\r\n        if (targetRange.exceedsSheetSizeLimits(this.maxColumns, this.maxRows)) {\r\n            throw new SheetSizeLimitExceededError();\r\n        }\r\n        if (this.dependencyGraph.arrayMapping.isFormulaArrayInRange(sourceRange)) {\r\n            throw new SourceLocationHasArrayError();\r\n        }\r\n        if (this.dependencyGraph.arrayMapping.isFormulaArrayInRange(targetRange)) {\r\n            throw new TargetLocationHasArrayError();\r\n        }\r\n    }\r\n    restoreClipboardCells(sourceSheetId, cells) {\r\n        const addedNamedExpressions = [];\r\n        for (const [address, clipboardCell] of cells) {\r\n            this.restoreCell(address, clipboardCell);\r\n            if (clipboardCell.type === ClipboardCellType.FORMULA) {\r\n                const { dependencies } = this.parser.fetchCachedResult(clipboardCell.hash);\r\n                addedNamedExpressions.push(...this.updateNamedExpressionsForTargetAddress(sourceSheetId, address, dependencies));\r\n            }\r\n        }\r\n        return addedNamedExpressions;\r\n    }\r\n    restoreCell(address, clipboardCell) {\r\n        switch (clipboardCell.type) {\r\n            case ClipboardCellType.VALUE: {\r\n                this.setValueToCell(clipboardCell, address);\r\n                break;\r\n            }\r\n            case ClipboardCellType.FORMULA: {\r\n                this.setFormulaToCellFromCache(clipboardCell.hash, address);\r\n                break;\r\n            }\r\n            case ClipboardCellType.EMPTY: {\r\n                this.setCellEmpty(address);\r\n                break;\r\n            }\r\n            case ClipboardCellType.PARSING_ERROR: {\r\n                this.setParsingErrorToCell(clipboardCell.rawInput, clipboardCell.errors, address);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    getOldContent(address) {\r\n        const vertex = this.dependencyGraph.getCell(address);\r\n        if (vertex === undefined || vertex instanceof EmptyCellVertex) {\r\n            return [address, { type: ClipboardCellType.EMPTY }];\r\n        }\r\n        else if (vertex instanceof ValueCellVertex) {\r\n            return [address, Object.assign({ type: ClipboardCellType.VALUE }, vertex.getValues())];\r\n        }\r\n        else if (vertex instanceof FormulaVertex) {\r\n            return [vertex.getAddress(this.lazilyTransformingAstService), {\r\n                    type: ClipboardCellType.FORMULA,\r\n                    hash: this.parser.computeHashFromAst(vertex.getFormula(this.lazilyTransformingAstService))\r\n                }];\r\n        }\r\n        else if (vertex instanceof ParsingErrorVertex) {\r\n            return [address, { type: ClipboardCellType.PARSING_ERROR, rawInput: vertex.rawInput, errors: vertex.errors }];\r\n        }\r\n        throw Error('Trying to copy unsupported type');\r\n    }\r\n    getClipboardCell(address) {\r\n        const vertex = this.dependencyGraph.getCell(address);\r\n        if (vertex === undefined || vertex instanceof EmptyCellVertex) {\r\n            return { type: ClipboardCellType.EMPTY };\r\n        }\r\n        else if (vertex instanceof ValueCellVertex) {\r\n            return Object.assign({ type: ClipboardCellType.VALUE }, vertex.getValues());\r\n        }\r\n        else if (vertex instanceof ArrayVertex) {\r\n            const val = vertex.getArrayCellValue(address);\r\n            if (val === EmptyValue) {\r\n                return { type: ClipboardCellType.EMPTY };\r\n            }\r\n            return { type: ClipboardCellType.VALUE, parsedValue: val, rawValue: vertex.getArrayCellRawValue(address) };\r\n        }\r\n        else if (vertex instanceof FormulaCellVertex) {\r\n            return {\r\n                type: ClipboardCellType.FORMULA,\r\n                hash: this.parser.computeHashFromAst(vertex.getFormula(this.lazilyTransformingAstService))\r\n            };\r\n        }\r\n        else if (vertex instanceof ParsingErrorVertex) {\r\n            return { type: ClipboardCellType.PARSING_ERROR, rawInput: vertex.rawInput, errors: vertex.errors };\r\n        }\r\n        throw Error('Trying to copy unsupported type');\r\n    }\r\n    getSheetClipboardCells(sheet) {\r\n        const sheetHeight = this.dependencyGraph.getSheetHeight(sheet);\r\n        const sheetWidth = this.dependencyGraph.getSheetWidth(sheet);\r\n        const arr = new Array(sheetHeight);\r\n        for (let i = 0; i < sheetHeight; i++) {\r\n            arr[i] = new Array(sheetWidth);\r\n            for (let j = 0; j < sheetWidth; j++) {\r\n                const address = simpleCellAddress(sheet, j, i);\r\n                arr[i][j] = this.getClipboardCell(address);\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n    getRangeClipboardCells(range) {\r\n        const result = [];\r\n        for (const address of range.addresses(this.dependencyGraph)) {\r\n            result.push([address, this.getClipboardCell(address)]);\r\n        }\r\n        return result;\r\n    }\r\n    setCellContent(address, newCellContent) {\r\n        const parsedCellContent = this.cellContentParser.parse(newCellContent);\r\n        const oldContent = this.getOldContent(address);\r\n        if (parsedCellContent instanceof CellContent.Formula) {\r\n            const parserResult = this.parser.parse(parsedCellContent.formula, address);\r\n            const { ast, errors } = parserResult;\r\n            if (errors.length > 0) {\r\n                this.setParsingErrorToCell(parsedCellContent.formula, errors, address);\r\n            }\r\n            else {\r\n                const size = this.arraySizePredictor.checkArraySize(ast, address);\r\n                this.setFormulaToCell(address, size, parserResult);\r\n            }\r\n        }\r\n        else if (parsedCellContent instanceof CellContent.Empty) {\r\n            this.setCellEmpty(address);\r\n        }\r\n        else {\r\n            this.setValueToCell({ parsedValue: parsedCellContent.value, rawValue: newCellContent }, address);\r\n        }\r\n        return oldContent;\r\n    }\r\n    setSheetContent(sheetId, newSheetContent) {\r\n        this.clearSheet(sheetId);\r\n        for (let i = 0; i < newSheetContent.length; i++) {\r\n            for (let j = 0; j < newSheetContent[i].length; j++) {\r\n                const address = simpleCellAddress(sheetId, j, i);\r\n                this.setCellContent(address, newSheetContent[i][j]);\r\n            }\r\n        }\r\n    }\r\n    setParsingErrorToCell(rawInput, errors, address) {\r\n        const oldValue = this.dependencyGraph.getCellValue(address);\r\n        const vertex = new ParsingErrorVertex(errors, rawInput);\r\n        const arrayChanges = this.dependencyGraph.setParsingErrorToCell(address, vertex);\r\n        this.columnSearch.remove(getRawValue(oldValue), address);\r\n        this.columnSearch.applyChanges(arrayChanges.getChanges());\r\n        this.changes.addAll(arrayChanges);\r\n        this.changes.addChange(vertex.getCellValue(), address);\r\n    }\r\n    setFormulaToCell(address, size, { ast, hasVolatileFunction, hasStructuralChangeFunction, dependencies }) {\r\n        const oldValue = this.dependencyGraph.getCellValue(address);\r\n        const arrayChanges = this.dependencyGraph.setFormulaToCell(address, ast, absolutizeDependencies(dependencies, address), size, hasVolatileFunction, hasStructuralChangeFunction);\r\n        this.columnSearch.remove(getRawValue(oldValue), address);\r\n        this.columnSearch.applyChanges(arrayChanges.getChanges());\r\n        this.changes.addAll(arrayChanges);\r\n    }\r\n    setValueToCell(value, address) {\r\n        const oldValue = this.dependencyGraph.getCellValue(address);\r\n        const arrayChanges = this.dependencyGraph.setValueToCell(address, value);\r\n        this.columnSearch.change(getRawValue(oldValue), getRawValue(value.parsedValue), address);\r\n        this.columnSearch.applyChanges(arrayChanges.getChanges().filter(change => !equalSimpleCellAddress(change.address, address)));\r\n        this.changes.addAll(arrayChanges);\r\n        this.changes.addChange(value.parsedValue, address);\r\n    }\r\n    setCellEmpty(address) {\r\n        if (this.dependencyGraph.isArrayInternalCell(address)) {\r\n            return;\r\n        }\r\n        const oldValue = this.dependencyGraph.getCellValue(address);\r\n        const arrayChanges = this.dependencyGraph.setCellEmpty(address);\r\n        this.columnSearch.remove(getRawValue(oldValue), address);\r\n        this.columnSearch.applyChanges(arrayChanges.getChanges());\r\n        this.changes.addAll(arrayChanges);\r\n        this.changes.addChange(EmptyValue, address);\r\n    }\r\n    setFormulaToCellFromCache(formulaHash, address) {\r\n        const { ast, hasVolatileFunction, hasStructuralChangeFunction, dependencies } = this.parser.fetchCachedResult(formulaHash);\r\n        const absoluteDependencies = absolutizeDependencies(dependencies, address);\r\n        const [cleanedAst] = new CleanOutOfScopeDependenciesTransformer(address.sheet).transformSingleAst(ast, address);\r\n        this.parser.rememberNewAst(cleanedAst);\r\n        const cleanedDependencies = filterDependenciesOutOfScope(absoluteDependencies);\r\n        const size = this.arraySizePredictor.checkArraySize(ast, address);\r\n        this.dependencyGraph.setFormulaToCell(address, cleanedAst, cleanedDependencies, size, hasVolatileFunction, hasStructuralChangeFunction);\r\n    }\r\n    /**\r\n     * Returns true if row number is outside of given sheet.\r\n     *\r\n     * @param row - row number\r\n     * @param sheet - sheet id number\r\n     */\r\n    rowEffectivelyNotInSheet(row, sheet) {\r\n        const height = this.dependencyGraph.addressMapping.getHeight(sheet);\r\n        return row >= height;\r\n    }\r\n    getAndClearContentChanges() {\r\n        const changes = this.changes;\r\n        this.changes = ContentChanges.empty();\r\n        return changes;\r\n    }\r\n    forceApplyPostponedTransformations() {\r\n        this.dependencyGraph.forceApplyPostponedTransformations();\r\n    }\r\n    /**\r\n     * Removes multiple rows from sheet. </br>\r\n     * Does nothing if rows are outside of effective sheet size.\r\n     *\r\n     * @param sheet - sheet id from which rows will be removed\r\n     * @param rowStart - number of the first row to be deleted\r\n     * @param rowEnd - number of the last row to be deleted\r\n     * */\r\n    doRemoveRows(rowsToRemove) {\r\n        if (this.rowEffectivelyNotInSheet(rowsToRemove.rowStart, rowsToRemove.sheet)) {\r\n            return;\r\n        }\r\n        const removedCells = [];\r\n        for (const [address] of this.dependencyGraph.entriesFromRowsSpan(rowsToRemove)) {\r\n            removedCells.push({ address, cellType: this.getClipboardCell(address) });\r\n        }\r\n        const { affectedArrays, contentChanges } = this.dependencyGraph.removeRows(rowsToRemove);\r\n        this.columnSearch.applyChanges(contentChanges.getChanges());\r\n        let version;\r\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\r\n            const transformation = new RemoveRowsTransformer(rowsToRemove);\r\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\r\n            version = this.lazilyTransformingAstService.addTransformation(transformation);\r\n        });\r\n        this.rewriteAffectedArrays(affectedArrays);\r\n        return { version: version, removedCells, rowFrom: rowsToRemove.rowStart, rowCount: rowsToRemove.numberOfRows };\r\n    }\r\n    /**\r\n     * Removes multiple columns from sheet. </br>\r\n     * Does nothing if columns are outside of effective sheet size.\r\n     *\r\n     * @param sheet - sheet id from which columns will be removed\r\n     * @param columnStart - number of the first column to be deleted\r\n     * @param columnEnd - number of the last row to be deleted\r\n     */\r\n    doRemoveColumns(columnsToRemove) {\r\n        if (this.columnEffectivelyNotInSheet(columnsToRemove.columnStart, columnsToRemove.sheet)) {\r\n            return;\r\n        }\r\n        const removedCells = [];\r\n        for (const [address] of this.dependencyGraph.entriesFromColumnsSpan(columnsToRemove)) {\r\n            removedCells.push({ address, cellType: this.getClipboardCell(address) });\r\n        }\r\n        const { affectedArrays, contentChanges } = this.dependencyGraph.removeColumns(columnsToRemove);\r\n        this.columnSearch.applyChanges(contentChanges.getChanges());\r\n        this.columnSearch.removeColumns(columnsToRemove);\r\n        let version;\r\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\r\n            const transformation = new RemoveColumnsTransformer(columnsToRemove);\r\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\r\n            version = this.lazilyTransformingAstService.addTransformation(transformation);\r\n        });\r\n        this.rewriteAffectedArrays(affectedArrays);\r\n        return {\r\n            version: version,\r\n            removedCells,\r\n            columnFrom: columnsToRemove.columnStart,\r\n            columnCount: columnsToRemove.numberOfColumns\r\n        };\r\n    }\r\n    /**\r\n     * Add multiple rows to sheet. </br>\r\n     * Does nothing if rows are outside of effective sheet size.\r\n     *\r\n     * @param sheet - sheet id in which rows will be added\r\n     * @param row - row number above which the rows will be added\r\n     * @param numberOfRowsToAdd - number of rows to add\r\n     */\r\n    doAddRows(addedRows) {\r\n        if (this.rowEffectivelyNotInSheet(addedRows.rowStart, addedRows.sheet)) {\r\n            return;\r\n        }\r\n        const { affectedArrays } = this.dependencyGraph.addRows(addedRows);\r\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\r\n            const transformation = new AddRowsTransformer(addedRows);\r\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\r\n            this.lazilyTransformingAstService.addTransformation(transformation);\r\n        });\r\n        this.rewriteAffectedArrays(affectedArrays);\r\n    }\r\n    rewriteAffectedArrays(affectedArrays) {\r\n        for (const arrayVertex of affectedArrays.values()) {\r\n            if (arrayVertex.array.size.isRef) {\r\n                continue;\r\n            }\r\n            const ast = arrayVertex.getFormula(this.lazilyTransformingAstService);\r\n            const address = arrayVertex.getAddress(this.lazilyTransformingAstService);\r\n            const hash = this.parser.computeHashFromAst(ast);\r\n            this.setFormulaToCellFromCache(hash, address);\r\n        }\r\n    }\r\n    /**\r\n     * Add multiple columns to sheet </br>\r\n     * Does nothing if columns are outside of effective sheet size\r\n     *\r\n     * @param sheet - sheet id in which columns will be added\r\n     * @param column - column number above which the columns will be added\r\n     * @param numberOfColumns - number of columns to add\r\n     */\r\n    doAddColumns(addedColumns) {\r\n        if (this.columnEffectivelyNotInSheet(addedColumns.columnStart, addedColumns.sheet)) {\r\n            return;\r\n        }\r\n        const { affectedArrays, contentChanges } = this.dependencyGraph.addColumns(addedColumns);\r\n        this.columnSearch.addColumns(addedColumns);\r\n        this.columnSearch.applyChanges(contentChanges.getChanges());\r\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\r\n            const transformation = new AddColumnsTransformer(addedColumns);\r\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\r\n            this.lazilyTransformingAstService.addTransformation(transformation);\r\n        });\r\n        this.rewriteAffectedArrays(affectedArrays);\r\n    }\r\n    /**\r\n     * Returns true if row number is outside of given sheet.\r\n     *\r\n     * @param column - row number\r\n     * @param sheet - sheet id number\r\n     */\r\n    columnEffectivelyNotInSheet(column, sheet) {\r\n        const width = this.dependencyGraph.addressMapping.getWidth(sheet);\r\n        return column >= width;\r\n    }\r\n    adjustNamedExpressionEdges(namedExpression, expressionName, sheetId) {\r\n        if (sheetId === undefined) {\r\n            return;\r\n        }\r\n        const localVertex = this.dependencyGraph.fetchCellOrCreateEmpty(namedExpression.address);\r\n        const globalNamedExpression = this.namedExpressions.workbookNamedExpressionOrPlaceholder(expressionName);\r\n        const globalVertex = this.dependencyGraph.fetchCellOrCreateEmpty(globalNamedExpression.address);\r\n        for (const adjacentNode of this.dependencyGraph.graph.adjacentNodes(globalVertex)) {\r\n            if (adjacentNode instanceof FormulaCellVertex && adjacentNode.getAddress(this.lazilyTransformingAstService).sheet === sheetId) {\r\n                const ast = adjacentNode.getFormula(this.lazilyTransformingAstService);\r\n                const formulaAddress = adjacentNode.getAddress(this.lazilyTransformingAstService);\r\n                const { dependencies } = this.parser.fetchCachedResultForAst(ast);\r\n                for (const dependency of absolutizeDependencies(dependencies, formulaAddress)) {\r\n                    if (dependency instanceof NamedExpressionDependency && dependency.name.toLowerCase() === namedExpression.displayName.toLowerCase()) {\r\n                        this.dependencyGraph.graph.removeEdge(globalVertex, adjacentNode);\r\n                        this.dependencyGraph.graph.addEdge(localVertex, adjacentNode);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    storeNamedExpressionInCell(address, expression) {\r\n        const parsedCellContent = this.cellContentParser.parse(expression);\r\n        if (parsedCellContent instanceof CellContent.Formula) {\r\n            const parsingResult = this.parser.parse(parsedCellContent.formula, simpleCellAddress(-1, 0, 0));\r\n            if (doesContainRelativeReferences(parsingResult.ast)) {\r\n                throw new NoRelativeAddressesAllowedError();\r\n            }\r\n            const { ast, hasVolatileFunction, hasStructuralChangeFunction, dependencies } = parsingResult;\r\n            this.dependencyGraph.setFormulaToCell(address, ast, absolutizeDependencies(dependencies, address), ArraySize.scalar(), hasVolatileFunction, hasStructuralChangeFunction);\r\n        }\r\n        else if (parsedCellContent instanceof CellContent.Empty) {\r\n            this.setCellEmpty(address);\r\n        }\r\n        else {\r\n            this.setValueToCell({ parsedValue: parsedCellContent.value, rawValue: expression }, address);\r\n        }\r\n    }\r\n    updateNamedExpressionsForMovedCells(sourceLeftCorner, width, height, destinationLeftCorner) {\r\n        if (sourceLeftCorner.sheet === destinationLeftCorner.sheet) {\r\n            return [];\r\n        }\r\n        const addedGlobalNamedExpressions = [];\r\n        const targetRange = AbsoluteCellRange.spanFrom(destinationLeftCorner, width, height);\r\n        for (const formulaAddress of targetRange.addresses(this.dependencyGraph)) {\r\n            const vertex = this.addressMapping.fetchCell(formulaAddress);\r\n            if (vertex instanceof FormulaCellVertex && formulaAddress.sheet !== sourceLeftCorner.sheet) {\r\n                const ast = vertex.getFormula(this.lazilyTransformingAstService);\r\n                const { dependencies } = this.parser.fetchCachedResultForAst(ast);\r\n                addedGlobalNamedExpressions.push(...this.updateNamedExpressionsForTargetAddress(sourceLeftCorner.sheet, formulaAddress, dependencies));\r\n            }\r\n        }\r\n        return addedGlobalNamedExpressions;\r\n    }\r\n    updateNamedExpressionsForTargetAddress(sourceSheet, targetAddress, dependencies) {\r\n        if (sourceSheet === targetAddress.sheet) {\r\n            return [];\r\n        }\r\n        const addedGlobalNamedExpressions = [];\r\n        const vertex = this.addressMapping.fetchCell(targetAddress);\r\n        for (const namedExpressionDependency of absolutizeDependencies(dependencies, targetAddress)) {\r\n            if (!(namedExpressionDependency instanceof NamedExpressionDependency)) {\r\n                continue;\r\n            }\r\n            const expressionName = namedExpressionDependency.name;\r\n            const sourceVertex = this.dependencyGraph.fetchNamedExpressionVertex(expressionName, sourceSheet);\r\n            const namedExpressionInTargetScope = this.namedExpressions.isExpressionInScope(expressionName, targetAddress.sheet);\r\n            const targetScopeExpressionVertex = namedExpressionInTargetScope\r\n                ? this.dependencyGraph.fetchNamedExpressionVertex(expressionName, targetAddress.sheet)\r\n                : this.copyOrFetchGlobalNamedExpressionVertex(expressionName, sourceVertex, addedGlobalNamedExpressions);\r\n            if (targetScopeExpressionVertex !== sourceVertex) {\r\n                this.dependencyGraph.graph.softRemoveEdge(sourceVertex, vertex);\r\n                this.dependencyGraph.graph.addEdge(targetScopeExpressionVertex, vertex);\r\n            }\r\n        }\r\n        return addedGlobalNamedExpressions;\r\n    }\r\n    allocateNamedExpressionAddressSpace() {\r\n        this.dependencyGraph.addressMapping.addSheet(NamedExpressions.SHEET_FOR_WORKBOOK_EXPRESSIONS, new SparseStrategy(0, 0));\r\n    }\r\n    copyOrFetchGlobalNamedExpressionVertex(expressionName, sourceVertex, addedNamedExpressions) {\r\n        let expression = this.namedExpressions.namedExpressionForScope(expressionName);\r\n        if (expression === undefined) {\r\n            expression = this.namedExpressions.addNamedExpression(expressionName);\r\n            addedNamedExpressions.push(expression.normalizeExpressionName());\r\n            if (sourceVertex instanceof FormulaCellVertex) {\r\n                const parsingResult = this.parser.fetchCachedResultForAst(sourceVertex.getFormula(this.lazilyTransformingAstService));\r\n                const { ast, hasVolatileFunction, hasStructuralChangeFunction, dependencies } = parsingResult;\r\n                this.dependencyGraph.setFormulaToCell(expression.address, ast, absolutizeDependencies(dependencies, expression.address), ArraySize.scalar(), hasVolatileFunction, hasStructuralChangeFunction);\r\n            }\r\n            else if (sourceVertex instanceof EmptyCellVertex) {\r\n                this.setCellEmpty(expression.address);\r\n            }\r\n            else if (sourceVertex instanceof ValueCellVertex) {\r\n                this.setValueToCell(sourceVertex.getValues(), expression.address);\r\n            }\r\n        }\r\n        return this.dependencyGraph.fetchCellOrCreateEmpty(expression.address);\r\n    }\r\n}\r\nexport function normalizeRemovedIndexes(indexes) {\r\n    if (indexes.length <= 1) {\r\n        return indexes;\r\n    }\r\n    const sorted = [...indexes].sort(([a], [b]) => a - b);\r\n    /* merge overlapping and adjacent indexes */\r\n    const merged = sorted.reduce((acc, [startIndex, amount]) => {\r\n        const previous = acc[acc.length - 1];\r\n        const lastIndex = previous[0] + previous[1];\r\n        if (startIndex <= lastIndex) {\r\n            previous[1] += Math.max(0, amount - (lastIndex - startIndex));\r\n        }\r\n        else {\r\n            acc.push([startIndex, amount]);\r\n        }\r\n        return acc;\r\n    }, [sorted[0]]);\r\n    /* shift further indexes */\r\n    let shift = 0;\r\n    for (let i = 0; i < merged.length; ++i) {\r\n        merged[i][0] -= shift;\r\n        shift += merged[i][1];\r\n    }\r\n    return merged;\r\n}\r\nexport function normalizeAddedIndexes(indexes) {\r\n    if (indexes.length <= 1) {\r\n        return indexes;\r\n    }\r\n    const sorted = [...indexes].sort(([a], [b]) => a - b);\r\n    /* merge indexes with same start */\r\n    const merged = sorted.reduce((acc, [startIndex, amount]) => {\r\n        const previous = acc[acc.length - 1];\r\n        if (startIndex === previous[0]) {\r\n            previous[1] = Math.max(previous[1], amount);\r\n        }\r\n        else {\r\n            acc.push([startIndex, amount]);\r\n        }\r\n        return acc;\r\n    }, [sorted[0]]);\r\n    /* shift further indexes */\r\n    let shift = 0;\r\n    for (let i = 0; i < merged.length; ++i) {\r\n        merged[i][0] += shift;\r\n        shift += merged[i][1];\r\n    }\r\n    return merged;\r\n}\r\nfunction isPositiveInteger(x) {\r\n    return Number.isInteger(x) && x > 0;\r\n}\r\nfunction isRowOrColumnRange(leftCorner, width, height) {\r\n    return (leftCorner.row === 0 && isPositiveInteger(width) && height === Number.POSITIVE_INFINITY)\r\n        || (leftCorner.col === 0 && isPositiveInteger(height) && width === Number.POSITIVE_INFINITY);\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { absoluteSheetReference, ErrorType } from '../Cell';\r\nimport { Transformer } from './Transformer';\r\nexport class AddColumnsTransformer extends Transformer {\r\n    constructor(columnsSpan) {\r\n        super();\r\n        this.columnsSpan = columnsSpan;\r\n    }\r\n    get sheet() {\r\n        return this.columnsSpan.sheet;\r\n    }\r\n    isIrreversible() {\r\n        return false;\r\n    }\r\n    transformRowRangeAst(ast, _formulaAddress) {\r\n        return ast;\r\n    }\r\n    transformCellRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformRowRange(_start, _end, _formulaAddress) {\r\n        throw Error('Not implemented');\r\n    }\r\n    transformColumnRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformCellAddress(dependencyAddress, formulaAddress) {\r\n        const absoluteDependencySheet = absoluteSheetReference(dependencyAddress, formulaAddress);\r\n        // Case 4 and 5\r\n        if ((absoluteDependencySheet !== this.columnsSpan.sheet)\r\n            && (formulaAddress.sheet !== this.columnsSpan.sheet)) {\r\n            return false;\r\n        }\r\n        const absolutizedDependencyAddress = dependencyAddress.toSimpleColumnAddress(formulaAddress);\r\n        // Case 3\r\n        if ((absoluteDependencySheet === this.columnsSpan.sheet)\r\n            && (formulaAddress.sheet !== this.columnsSpan.sheet)) {\r\n            if (this.columnsSpan.columnStart <= absolutizedDependencyAddress.col) {\r\n                return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        // Case 2\r\n        if ((formulaAddress.sheet === this.columnsSpan.sheet)\r\n            && (absoluteDependencySheet !== this.columnsSpan.sheet)) {\r\n            if (dependencyAddress.isColumnAbsolute()) {\r\n                return false;\r\n            }\r\n            if (formulaAddress.col < this.columnsSpan.columnStart) {\r\n                return false;\r\n            }\r\n            return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\r\n        }\r\n        // Case 1\r\n        if (dependencyAddress.isColumnAbsolute()) {\r\n            if (dependencyAddress.col < this.columnsSpan.columnStart) { // Case Aa\r\n                return false;\r\n            }\r\n            else { // Case Ab\r\n                return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\r\n            }\r\n        }\r\n        else {\r\n            const absolutizedDependencyAddress = dependencyAddress.toSimpleColumnAddress(formulaAddress);\r\n            if (absolutizedDependencyAddress.col < this.columnsSpan.columnStart) {\r\n                if (formulaAddress.col < this.columnsSpan.columnStart) { // Case Raa\r\n                    return false;\r\n                }\r\n                else { // Case Rab\r\n                    return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\r\n                }\r\n            }\r\n            else {\r\n                if (formulaAddress.col < this.columnsSpan.columnStart) { // Case Rba\r\n                    return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\r\n                }\r\n                else { // Case Rbb\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    fixNodeAddress(address) {\r\n        if (this.columnsSpan.sheet === address.sheet && this.columnsSpan.columnStart <= address.col) {\r\n            return Object.assign(Object.assign({}, address), { col: address.col + this.columnsSpan.numberOfColumns });\r\n        }\r\n        else {\r\n            return address;\r\n        }\r\n    }\r\n    transformRange(start, end, formulaAddress) {\r\n        const newStart = this.transformCellAddress(start, formulaAddress);\r\n        const newEnd = this.transformCellAddress(end, formulaAddress);\r\n        if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\r\n            return ErrorType.REF;\r\n        }\r\n        else if (newStart || newEnd) {\r\n            return [newStart || start, newEnd || end];\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../Cell';\r\nimport { AstNodeType, buildCellErrorAst, CellAddress, } from '../parser';\r\nexport class Transformer {\r\n    performEagerTransformations(graph, parser) {\r\n        for (const node of graph.arrayFormulaNodes()) {\r\n            const [newAst, newAddress] = this.transformSingleAst(node.getFormula(graph.lazilyTransformingAstService), node.getAddress(graph.lazilyTransformingAstService));\r\n            const cachedAst = parser.rememberNewAst(newAst);\r\n            node.setFormula(cachedAst);\r\n            node.setAddress(newAddress);\r\n        }\r\n    }\r\n    transformSingleAst(ast, address) {\r\n        const newAst = this.transformAst(ast, address);\r\n        const newAddress = this.fixNodeAddress(address);\r\n        return [newAst, newAddress];\r\n    }\r\n    transformAst(ast, address) {\r\n        switch (ast.type) {\r\n            case AstNodeType.CELL_REFERENCE: {\r\n                return this.transformCellReferenceAst(ast, address);\r\n            }\r\n            case AstNodeType.CELL_RANGE: {\r\n                return this.transformCellRangeAst(ast, address);\r\n            }\r\n            case AstNodeType.COLUMN_RANGE: {\r\n                return this.transformColumnRangeAst(ast, address);\r\n            }\r\n            case AstNodeType.ROW_RANGE: {\r\n                return this.transformRowRangeAst(ast, address);\r\n            }\r\n            case AstNodeType.EMPTY:\r\n            case AstNodeType.ERROR:\r\n            case AstNodeType.NUMBER:\r\n            case AstNodeType.NAMED_EXPRESSION:\r\n            case AstNodeType.ERROR_WITH_RAW_INPUT:\r\n            case AstNodeType.STRING: {\r\n                return ast;\r\n            }\r\n            case AstNodeType.PERCENT_OP:\r\n            case AstNodeType.MINUS_UNARY_OP:\r\n            case AstNodeType.PLUS_UNARY_OP: {\r\n                return Object.assign(Object.assign({}, ast), { value: this.transformAst(ast.value, address) });\r\n            }\r\n            case AstNodeType.FUNCTION_CALL: {\r\n                return Object.assign(Object.assign({}, ast), { procedureName: ast.procedureName, args: ast.args.map((arg) => this.transformAst(arg, address)) });\r\n            }\r\n            case AstNodeType.PARENTHESIS: {\r\n                return Object.assign(Object.assign({}, ast), { expression: this.transformAst(ast.expression, address) });\r\n            }\r\n            case AstNodeType.ARRAY: {\r\n                return Object.assign(Object.assign({}, ast), { args: ast.args.map((row) => row.map(val => this.transformAst(val, address))) });\r\n            }\r\n            default: {\r\n                return Object.assign(Object.assign({}, ast), { left: this.transformAst(ast.left, address), right: this.transformAst(ast.right, address) });\r\n            }\r\n        }\r\n    }\r\n    transformCellReferenceAst(ast, formulaAddress) {\r\n        const newCellAddress = this.transformCellAddress(ast.reference, formulaAddress);\r\n        if (newCellAddress instanceof CellAddress) {\r\n            return Object.assign(Object.assign({}, ast), { reference: newCellAddress });\r\n        }\r\n        else if (newCellAddress === ErrorType.REF) {\r\n            return buildCellErrorAst(new CellError(ErrorType.REF));\r\n        }\r\n        else {\r\n            return ast;\r\n        }\r\n    }\r\n    transformCellRangeAst(ast, formulaAddress) {\r\n        const newRange = this.transformCellRange(ast.start, ast.end, formulaAddress);\r\n        if (Array.isArray(newRange)) {\r\n            return Object.assign(Object.assign({}, ast), { start: newRange[0], end: newRange[1] });\r\n        }\r\n        else if (newRange === ErrorType.REF) {\r\n            return buildCellErrorAst(new CellError(ErrorType.REF));\r\n        }\r\n        else {\r\n            return ast;\r\n        }\r\n    }\r\n    transformColumnRangeAst(ast, formulaAddress) {\r\n        const newRange = this.transformColumnRange(ast.start, ast.end, formulaAddress);\r\n        if (Array.isArray(newRange)) {\r\n            return Object.assign(Object.assign({}, ast), { start: newRange[0], end: newRange[1] });\r\n        }\r\n        else if (newRange === ErrorType.REF) {\r\n            return buildCellErrorAst(new CellError(ErrorType.REF));\r\n        }\r\n        else {\r\n            return ast;\r\n        }\r\n    }\r\n    transformRowRangeAst(ast, formulaAddress) {\r\n        const newRange = this.transformRowRange(ast.start, ast.end, formulaAddress);\r\n        if (Array.isArray(newRange)) {\r\n            return Object.assign(Object.assign({}, ast), { start: newRange[0], end: newRange[1] });\r\n        }\r\n        else if (newRange === ErrorType.REF) {\r\n            return buildCellErrorAst(new CellError(ErrorType.REF));\r\n        }\r\n        else {\r\n            return ast;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { absoluteSheetReference, ErrorType } from '../Cell';\r\nimport { Transformer } from './Transformer';\r\nexport class AddRowsTransformer extends Transformer {\r\n    constructor(rowsSpan) {\r\n        super();\r\n        this.rowsSpan = rowsSpan;\r\n    }\r\n    get sheet() {\r\n        return this.rowsSpan.sheet;\r\n    }\r\n    isIrreversible() {\r\n        return false;\r\n    }\r\n    transformColumnRangeAst(ast, _formulaAddress) {\r\n        return ast;\r\n    }\r\n    transformCellRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformRowRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformColumnRange(_start, _end, _formulaAddress) {\r\n        throw Error('Not implemented');\r\n    }\r\n    transformCellAddress(dependencyAddress, formulaAddress) {\r\n        const absoluteDependencySheet = absoluteSheetReference(dependencyAddress, formulaAddress);\r\n        // Case 4 and 5\r\n        if ((absoluteDependencySheet !== this.rowsSpan.sheet)\r\n            && (formulaAddress.sheet !== this.rowsSpan.sheet)) {\r\n            return false;\r\n        }\r\n        const absolutizedDependencyAddress = dependencyAddress.toSimpleRowAddress(formulaAddress);\r\n        // Case 3\r\n        if ((absoluteDependencySheet === this.rowsSpan.sheet)\r\n            && (formulaAddress.sheet !== this.rowsSpan.sheet)) {\r\n            if (this.rowsSpan.rowStart <= absolutizedDependencyAddress.row) {\r\n                return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        // Case 2\r\n        if ((formulaAddress.sheet === this.rowsSpan.sheet)\r\n            && (absoluteDependencySheet !== this.rowsSpan.sheet)) {\r\n            if (dependencyAddress.isRowAbsolute()) {\r\n                return false;\r\n            }\r\n            if (formulaAddress.row < this.rowsSpan.rowStart) {\r\n                return false;\r\n            }\r\n            return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\r\n        }\r\n        // Case 1\r\n        if (dependencyAddress.isRowAbsolute()) {\r\n            if (dependencyAddress.row < this.rowsSpan.rowStart) { // Case Aa\r\n                return false;\r\n            }\r\n            else { // Case Ab\r\n                return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\r\n            }\r\n        }\r\n        else {\r\n            if (absolutizedDependencyAddress.row < this.rowsSpan.rowStart) {\r\n                if (formulaAddress.row < this.rowsSpan.rowStart) { // Case Raa\r\n                    return false;\r\n                }\r\n                else { // Case Rab\r\n                    return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\r\n                }\r\n            }\r\n            else {\r\n                if (formulaAddress.row < this.rowsSpan.rowStart) { // Case Rba\r\n                    return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\r\n                }\r\n                else { // Case Rbb\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    fixNodeAddress(address) {\r\n        if (this.rowsSpan.sheet === address.sheet && this.rowsSpan.rowStart <= address.row) {\r\n            return Object.assign(Object.assign({}, address), { row: address.row + this.rowsSpan.numberOfRows });\r\n        }\r\n        else {\r\n            return address;\r\n        }\r\n    }\r\n    transformRange(start, end, formulaAddress) {\r\n        const newStart = this.transformCellAddress(start, formulaAddress);\r\n        const newEnd = this.transformCellAddress(end, formulaAddress);\r\n        if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\r\n            return ErrorType.REF;\r\n        }\r\n        else if (newStart || newEnd) {\r\n            return [newStart || start, newEnd || end];\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ErrorType } from '../Cell';\r\nimport { Transformer } from './Transformer';\r\nexport class CleanOutOfScopeDependenciesTransformer extends Transformer {\r\n    constructor(sheet) {\r\n        super();\r\n        this.sheet = sheet;\r\n    }\r\n    isIrreversible() {\r\n        return true;\r\n    }\r\n    fixNodeAddress(address) {\r\n        return address;\r\n    }\r\n    transformCellAddress(dependencyAddress, formulaAddress) {\r\n        return dependencyAddress.isInvalid(formulaAddress) ? ErrorType.REF : false;\r\n    }\r\n    transformCellRange(start, end, formulaAddress) {\r\n        return start.isInvalid(formulaAddress) || end.isInvalid(formulaAddress) ? ErrorType.REF : false;\r\n    }\r\n    transformColumnRange(start, end, formulaAddress) {\r\n        return start.isInvalid(formulaAddress) || end.isInvalid(formulaAddress) ? ErrorType.REF : false;\r\n    }\r\n    transformRowRange(start, end, formulaAddress) {\r\n        return start.isInvalid(formulaAddress) || end.isInvalid(formulaAddress) ? ErrorType.REF : false;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { simpleCellAddress } from '../Cell';\r\nimport { CellAddress } from '../parser';\r\nimport { RowAddress } from '../parser/RowAddress';\r\nimport { Transformer } from './Transformer';\r\nexport class MoveCellsTransformer extends Transformer {\r\n    constructor(sourceRange, toRight, toBottom, toSheet) {\r\n        super();\r\n        this.sourceRange = sourceRange;\r\n        this.toRight = toRight;\r\n        this.toBottom = toBottom;\r\n        this.toSheet = toSheet;\r\n        this.dependentFormulaTransformer = new DependentFormulaTransformer(sourceRange, toRight, toBottom, toSheet);\r\n    }\r\n    get sheet() {\r\n        return this.sourceRange.sheet;\r\n    }\r\n    isIrreversible() {\r\n        return true;\r\n    }\r\n    transformSingleAst(ast, address) {\r\n        if (this.sourceRange.addressInRange(address)) {\r\n            const newAst = this.transformAst(ast, address);\r\n            return [newAst, this.fixNodeAddress(address)];\r\n        }\r\n        else {\r\n            return this.dependentFormulaTransformer.transformSingleAst(ast, address);\r\n        }\r\n    }\r\n    fixNodeAddress(address) {\r\n        return simpleCellAddress(this.toSheet, address.col + this.toRight, address.row + this.toBottom);\r\n    }\r\n    transformCellAddress(dependencyAddress, formulaAddress) {\r\n        return this.transformAddress(dependencyAddress, formulaAddress);\r\n    }\r\n    transformCellRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformColumnRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformRowRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformAddress(dependencyAddress, formulaAddress) {\r\n        const sourceRange = this.sourceRange;\r\n        if (dependencyAddress instanceof CellAddress) {\r\n            const absoluteDependencyAddress = dependencyAddress.toSimpleCellAddress(formulaAddress);\r\n            if (sourceRange.addressInRange(absoluteDependencyAddress)) { // If dependency is internal, move only absolute dimensions\r\n                return dependencyAddress.shiftAbsoluteDimensions(this.toRight, this.toBottom);\r\n            }\r\n        }\r\n        return dependencyAddress.shiftRelativeDimensions(-this.toRight, -this.toBottom);\r\n    }\r\n    transformRange(start, end, formulaAddress) {\r\n        const sourceRange = this.sourceRange;\r\n        if (start instanceof CellAddress && end instanceof CellAddress) {\r\n            const absoluteStart = start.toSimpleCellAddress(formulaAddress);\r\n            const absoluteEnd = end.toSimpleCellAddress(formulaAddress);\r\n            if (sourceRange.addressInRange(absoluteStart) && sourceRange.addressInRange(absoluteEnd)) {\r\n                return [\r\n                    start.shiftAbsoluteDimensions(this.toRight, this.toBottom),\r\n                    end.shiftAbsoluteDimensions(this.toRight, this.toBottom)\r\n                ];\r\n            }\r\n        }\r\n        return [\r\n            start.shiftRelativeDimensions(-this.toRight, -this.toBottom),\r\n            end.shiftRelativeDimensions(-this.toRight, -this.toBottom)\r\n        ];\r\n    }\r\n}\r\nclass DependentFormulaTransformer extends Transformer {\r\n    constructor(sourceRange, toRight, toBottom, toSheet) {\r\n        super();\r\n        this.sourceRange = sourceRange;\r\n        this.toRight = toRight;\r\n        this.toBottom = toBottom;\r\n        this.toSheet = toSheet;\r\n    }\r\n    get sheet() {\r\n        return this.sourceRange.sheet;\r\n    }\r\n    isIrreversible() {\r\n        return true;\r\n    }\r\n    fixNodeAddress(address) {\r\n        return address;\r\n    }\r\n    transformCellAddress(dependencyAddress, formulaAddress) {\r\n        if (this.shouldMove(dependencyAddress, formulaAddress)) {\r\n            return dependencyAddress.moved(this.toSheet, this.toRight, this.toBottom);\r\n        }\r\n        return false;\r\n    }\r\n    transformCellRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformColumnRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformRowRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    shouldMove(dependencyAddress, formulaAddress) {\r\n        if (dependencyAddress instanceof CellAddress) {\r\n            return this.sourceRange.addressInRange(dependencyAddress.toSimpleCellAddress(formulaAddress));\r\n        }\r\n        else if (dependencyAddress instanceof RowAddress) {\r\n            return this.sourceRange.rowInRange(dependencyAddress.toSimpleRowAddress(formulaAddress)) && !this.sourceRange.isFinite();\r\n        }\r\n        else {\r\n            return this.sourceRange.columnInRange(dependencyAddress.toSimpleColumnAddress(formulaAddress)) && !this.sourceRange.isFinite();\r\n        }\r\n    }\r\n    transformRange(start, end, formulaAddress) {\r\n        const newStart = this.transformCellAddress(start, formulaAddress);\r\n        const newEnd = this.transformCellAddress(end, formulaAddress);\r\n        if (newStart && newEnd) {\r\n            return [newStart, newEnd];\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { absoluteSheetReference, ErrorType } from '../Cell';\r\nimport { Transformer } from './Transformer';\r\nexport class RemoveColumnsTransformer extends Transformer {\r\n    constructor(columnsSpan) {\r\n        super();\r\n        this.columnsSpan = columnsSpan;\r\n    }\r\n    get sheet() {\r\n        return this.columnsSpan.sheet;\r\n    }\r\n    isIrreversible() {\r\n        return true;\r\n    }\r\n    transformRowRangeAst(ast, _formulaAddress) {\r\n        return ast;\r\n    }\r\n    transformCellRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformRowRange(_start, _end, _formulaAddress) {\r\n        throw Error('Not implemented');\r\n    }\r\n    transformColumnRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformCellAddress(dependencyAddress, formulaAddress) {\r\n        const absoluteDependencySheet = absoluteSheetReference(dependencyAddress, formulaAddress);\r\n        // Case 4\r\n        if (this.columnsSpan.sheet !== formulaAddress.sheet && this.columnsSpan.sheet !== absoluteDependencySheet) {\r\n            return false;\r\n        }\r\n        // Case 3 -- removed column in same sheet where dependency is but formula in different\r\n        if (this.columnsSpan.sheet !== formulaAddress.sheet && this.columnsSpan.sheet === absoluteDependencySheet) {\r\n            const absoluteDependencyAddress = dependencyAddress.toSimpleColumnAddress(formulaAddress);\r\n            if (absoluteDependencyAddress.col < this.columnsSpan.columnStart) { // 3.ARa\r\n                return false;\r\n            }\r\n            else if (absoluteDependencyAddress.col > this.columnsSpan.columnEnd) { // 3.ARb\r\n                return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\r\n            }\r\n        }\r\n        // Case 2 -- removed column in same sheet where formula but dependency in different sheet\r\n        if (this.columnsSpan.sheet === formulaAddress.sheet && this.columnsSpan.sheet !== absoluteDependencySheet) {\r\n            if (dependencyAddress.isColumnAbsolute()) { // 2.A\r\n                return false;\r\n            }\r\n            else {\r\n                if (formulaAddress.col < this.columnsSpan.columnStart) { // 2.Ra\r\n                    return false;\r\n                }\r\n                else if (formulaAddress.col > this.columnsSpan.columnEnd) { // 2.Rb\r\n                    return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\r\n                }\r\n            }\r\n        }\r\n        // Case 1 -- same sheet\r\n        if (this.columnsSpan.sheet === formulaAddress.sheet && this.columnsSpan.sheet === absoluteDependencySheet) {\r\n            if (dependencyAddress.isColumnAbsolute()) {\r\n                if (dependencyAddress.col < this.columnsSpan.columnStart) { // 1.Aa\r\n                    return false;\r\n                }\r\n                else if (dependencyAddress.col > this.columnsSpan.columnEnd) { // 1.Ab\r\n                    return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\r\n                }\r\n            }\r\n            else {\r\n                const absoluteDependencyAddress = dependencyAddress.toSimpleColumnAddress(formulaAddress);\r\n                if (absoluteDependencyAddress.col < this.columnsSpan.columnStart) {\r\n                    if (formulaAddress.col < this.columnsSpan.columnStart) { // 1.Raa\r\n                        return false;\r\n                    }\r\n                    else if (formulaAddress.col > this.columnsSpan.columnEnd) { // 1.Rab\r\n                        return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\r\n                    }\r\n                }\r\n                else if (absoluteDependencyAddress.col > this.columnsSpan.columnEnd) {\r\n                    if (formulaAddress.col < this.columnsSpan.columnStart) { // 1.Rba\r\n                        return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\r\n                    }\r\n                    else if (formulaAddress.col > this.columnsSpan.columnEnd) { // 1.Rbb\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // 1.Ac, 1.Rca, 1.Rcb, 3.Ac, 3.Rca, 3.Rcb\r\n        return ErrorType.REF;\r\n    }\r\n    fixNodeAddress(address) {\r\n        if (this.columnsSpan.sheet === address.sheet && this.columnsSpan.columnStart <= address.col) {\r\n            return Object.assign(Object.assign({}, address), { col: address.col - this.columnsSpan.numberOfColumns });\r\n        }\r\n        else {\r\n            return address;\r\n        }\r\n    }\r\n    transformRange(start, end, formulaAddress) {\r\n        const startSheet = absoluteSheetReference(start, formulaAddress);\r\n        let actualStart = start;\r\n        let actualEnd = end;\r\n        if (this.columnsSpan.sheet === startSheet) {\r\n            const startSCA = start.toSimpleColumnAddress(formulaAddress);\r\n            const endSCA = end.toSimpleColumnAddress(formulaAddress);\r\n            if (this.columnsSpan.columnStart <= startSCA.col && this.columnsSpan.columnEnd >= endSCA.col) {\r\n                return ErrorType.REF;\r\n            }\r\n            if (startSCA.col >= this.columnsSpan.columnStart && startSCA.col <= this.columnsSpan.columnEnd) {\r\n                actualStart = start.shiftedByColumns(this.columnsSpan.columnEnd - startSCA.col + 1);\r\n            }\r\n            if (endSCA.col >= this.columnsSpan.columnStart && endSCA.col <= this.columnsSpan.columnEnd) {\r\n                actualEnd = end.shiftedByColumns(-(endSCA.col - this.columnsSpan.columnStart + 1));\r\n            }\r\n        }\r\n        const newStart = this.transformCellAddress(actualStart, formulaAddress);\r\n        const newEnd = this.transformCellAddress(actualEnd, formulaAddress);\r\n        if (newStart === false && newEnd === false) {\r\n            return [actualStart, actualEnd];\r\n        }\r\n        else if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\r\n            throw Error('Cannot happen');\r\n        }\r\n        else {\r\n            return [newStart || actualStart, newEnd || actualEnd];\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { absoluteSheetReference, ErrorType } from '../Cell';\r\nimport { Transformer } from './Transformer';\r\nexport class RemoveRowsTransformer extends Transformer {\r\n    constructor(rowsSpan) {\r\n        super();\r\n        this.rowsSpan = rowsSpan;\r\n    }\r\n    get sheet() {\r\n        return this.rowsSpan.sheet;\r\n    }\r\n    isIrreversible() {\r\n        return true;\r\n    }\r\n    transformColumnRangeAst(ast, _formulaAddress) {\r\n        return ast;\r\n    }\r\n    transformCellAddress(dependencyAddress, formulaAddress) {\r\n        const absoluteDependencySheet = absoluteSheetReference(dependencyAddress, formulaAddress);\r\n        // Case 4\r\n        if (this.rowsSpan.sheet !== formulaAddress.sheet && this.rowsSpan.sheet !== absoluteDependencySheet) {\r\n            return false;\r\n        }\r\n        // Case 3 -- removed row in same sheet where dependency is but formula in different\r\n        if (this.rowsSpan.sheet !== formulaAddress.sheet && this.rowsSpan.sheet === absoluteDependencySheet) {\r\n            const absoluteDependencyAddress = dependencyAddress.toSimpleRowAddress(formulaAddress);\r\n            if (absoluteDependencyAddress.row < this.rowsSpan.rowStart) { // 3.ARa\r\n                return false;\r\n            }\r\n            else if (absoluteDependencyAddress.row > this.rowsSpan.rowEnd) { // 3.ARb\r\n                return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\r\n            }\r\n        }\r\n        // Case 2 -- removed row in same sheet where formula but dependency in different sheet\r\n        if (this.rowsSpan.sheet === formulaAddress.sheet && this.rowsSpan.sheet !== absoluteDependencySheet) {\r\n            if (dependencyAddress.isRowAbsolute()) { // 2.A\r\n                return false;\r\n            }\r\n            else {\r\n                if (formulaAddress.row < this.rowsSpan.rowStart) { // 2.Ra\r\n                    return false;\r\n                }\r\n                else if (formulaAddress.row > this.rowsSpan.rowEnd) { // 2.Rb\r\n                    return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\r\n                }\r\n            }\r\n        }\r\n        // Case 1 -- same sheet\r\n        if (this.rowsSpan.sheet === formulaAddress.sheet && this.rowsSpan.sheet === absoluteDependencySheet) {\r\n            if (dependencyAddress.isRowAbsolute()) {\r\n                if (dependencyAddress.row < this.rowsSpan.rowStart) { // 1.Aa\r\n                    return false;\r\n                }\r\n                else if (dependencyAddress.row > this.rowsSpan.rowEnd) { // 1.Ab\r\n                    return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\r\n                }\r\n            }\r\n            else {\r\n                const absoluteDependencyAddress = dependencyAddress.toSimpleRowAddress(formulaAddress);\r\n                if (absoluteDependencyAddress.row < this.rowsSpan.rowStart) {\r\n                    if (formulaAddress.row < this.rowsSpan.rowStart) { // 1.Raa\r\n                        return false;\r\n                    }\r\n                    else if (formulaAddress.row > this.rowsSpan.rowEnd) { // 1.Rab\r\n                        return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\r\n                    }\r\n                }\r\n                else if (absoluteDependencyAddress.row > this.rowsSpan.rowEnd) {\r\n                    if (formulaAddress.row < this.rowsSpan.rowStart) { // 1.Rba\r\n                        return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\r\n                    }\r\n                    else if (formulaAddress.row > this.rowsSpan.rowEnd) { // 1.Rbb\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // 1.Ac, 1.Rca, 1.Rcb, 3.Ac, 3.Rca, 3.Rcb\r\n        return ErrorType.REF;\r\n    }\r\n    transformCellRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformRowRange(start, end, formulaAddress) {\r\n        return this.transformRange(start, end, formulaAddress);\r\n    }\r\n    transformColumnRange(_start, _end, _formulaAddress) {\r\n        throw Error('Not implemented');\r\n    }\r\n    fixNodeAddress(address) {\r\n        if (this.rowsSpan.sheet === address.sheet && this.rowsSpan.rowStart <= address.row) {\r\n            return Object.assign(Object.assign({}, address), { row: address.row - this.rowsSpan.numberOfRows });\r\n        }\r\n        else {\r\n            return address;\r\n        }\r\n    }\r\n    transformRange(start, end, formulaAddress) {\r\n        const startSheet = absoluteSheetReference(start, formulaAddress);\r\n        let actualStart = start;\r\n        let actualEnd = end;\r\n        if (this.rowsSpan.sheet === startSheet) {\r\n            const startSCA = start.toSimpleRowAddress(formulaAddress);\r\n            const endSCA = end.toSimpleRowAddress(formulaAddress);\r\n            if (this.rowsSpan.rowStart <= startSCA.row && this.rowsSpan.rowEnd >= endSCA.row) {\r\n                return ErrorType.REF;\r\n            }\r\n            if (startSCA.row >= this.rowsSpan.rowStart && startSCA.row <= this.rowsSpan.rowEnd) {\r\n                actualStart = start.shiftedByRows(this.rowsSpan.rowEnd - startSCA.row + 1);\r\n            }\r\n            if (endSCA.row >= this.rowsSpan.rowStart && endSCA.row <= this.rowsSpan.rowEnd) {\r\n                actualEnd = end.shiftedByRows(-(endSCA.row - this.rowsSpan.rowStart + 1));\r\n            }\r\n        }\r\n        const newStart = this.transformCellAddress(actualStart, formulaAddress);\r\n        const newEnd = this.transformCellAddress(actualEnd, formulaAddress);\r\n        if (newStart === false && newEnd === false) {\r\n            return [actualStart, actualEnd];\r\n        }\r\n        else if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\r\n            return ErrorType.REF;\r\n        }\r\n        else {\r\n            return [newStart || actualStart, newEnd || actualEnd];\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ErrorType } from '../Cell';\r\nimport { Transformer } from './Transformer';\r\nexport class RemoveSheetTransformer extends Transformer {\r\n    constructor(sheet) {\r\n        super();\r\n        this.sheet = sheet;\r\n    }\r\n    isIrreversible() {\r\n        return true;\r\n    }\r\n    performEagerTransformations(graph, _parser) {\r\n        for (const node of graph.arrayFormulaNodes()) {\r\n            const [newAst] = this.transformSingleAst(node.getFormula(graph.lazilyTransformingAstService), node.getAddress(graph.lazilyTransformingAstService));\r\n            node.setFormula(newAst);\r\n        }\r\n    }\r\n    fixNodeAddress(address) {\r\n        return address;\r\n    }\r\n    transformCellAddress(dependencyAddress, _formulaAddress) {\r\n        return this.transformAddress(dependencyAddress);\r\n    }\r\n    transformCellRange(start, _end, _formulaAddress) {\r\n        return this.transformAddress(start);\r\n    }\r\n    transformColumnRange(start, _end, _formulaAddress) {\r\n        return this.transformAddress(start);\r\n    }\r\n    transformRowRange(start, _end, _formulaAddress) {\r\n        return this.transformAddress(start);\r\n    }\r\n    transformAddress(address) {\r\n        if (address.sheet === this.sheet) {\r\n            return ErrorType.REF;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { InvalidArgumentsError } from './errors';\r\nexport function validateAsSheet(sheet) {\r\n    if (!Array.isArray(sheet)) {\r\n        throw new InvalidArgumentsError('an array of arrays.');\r\n    }\r\n    for (let i = 0; i < sheet.length; i++) {\r\n        if (!Array.isArray(sheet[i])) {\r\n            throw new InvalidArgumentsError('an array of arrays.');\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns actual width, height and fill ratio of a sheet\r\n *\r\n * @param sheet - two-dimmensional array sheet representation\r\n */\r\nexport function findBoundaries(sheet) {\r\n    let width = 0;\r\n    let height = 0;\r\n    let cellsCount = 0;\r\n    for (let currentRow = 0; currentRow < sheet.length; currentRow++) {\r\n        let currentRowWidth = 0;\r\n        for (let currentCol = 0; currentCol < sheet[currentRow].length; currentCol++) {\r\n            const currentValue = sheet[currentRow][currentCol];\r\n            if (currentValue === undefined || currentValue === null) {\r\n                continue;\r\n            }\r\n            currentRowWidth = currentCol + 1;\r\n            ++cellsCount;\r\n        }\r\n        width = Math.max(width, currentRowWidth);\r\n        if (currentRowWidth > 0) {\r\n            height = currentRow + 1;\r\n        }\r\n    }\r\n    const sheetSize = width * height;\r\n    return {\r\n        height: height,\r\n        width: width,\r\n        fill: sheetSize === 0 ? 0 : cellsCount / sheetSize,\r\n    };\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { equalSimpleCellAddress, simpleCellAddress } from './Cell';\r\nimport { AddColumnsCommand, AddRowsCommand, RemoveColumnsCommand, RemoveRowsCommand } from './Operations';\r\nexport class BaseUndoEntry {\r\n}\r\nexport class RemoveRowsUndoEntry extends BaseUndoEntry {\r\n    constructor(command, rowsRemovals) {\r\n        super();\r\n        this.command = command;\r\n        this.rowsRemovals = rowsRemovals;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoRemoveRows(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoRemoveRows(this);\r\n    }\r\n}\r\nexport class MoveCellsUndoEntry extends BaseUndoEntry {\r\n    constructor(sourceLeftCorner, width, height, destinationLeftCorner, overwrittenCellsData, addedGlobalNamedExpressions, version) {\r\n        super();\r\n        this.sourceLeftCorner = sourceLeftCorner;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.destinationLeftCorner = destinationLeftCorner;\r\n        this.overwrittenCellsData = overwrittenCellsData;\r\n        this.addedGlobalNamedExpressions = addedGlobalNamedExpressions;\r\n        this.version = version;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoMoveCells(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoMoveCells(this);\r\n    }\r\n}\r\nexport class AddRowsUndoEntry extends BaseUndoEntry {\r\n    constructor(command) {\r\n        super();\r\n        this.command = command;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoAddRows(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoAddRows(this);\r\n    }\r\n}\r\nexport class SetRowOrderUndoEntry extends BaseUndoEntry {\r\n    constructor(sheetId, rowMapping, oldContent) {\r\n        super();\r\n        this.sheetId = sheetId;\r\n        this.rowMapping = rowMapping;\r\n        this.oldContent = oldContent;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoSetRowOrder(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoSetRowOrder(this);\r\n    }\r\n}\r\nexport class SetColumnOrderUndoEntry extends BaseUndoEntry {\r\n    constructor(sheetId, columnMapping, oldContent) {\r\n        super();\r\n        this.sheetId = sheetId;\r\n        this.columnMapping = columnMapping;\r\n        this.oldContent = oldContent;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoSetColumnOrder(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoSetColumnOrder(this);\r\n    }\r\n}\r\nexport class SetSheetContentUndoEntry extends BaseUndoEntry {\r\n    constructor(sheetId, oldSheetContent, newSheetContent) {\r\n        super();\r\n        this.sheetId = sheetId;\r\n        this.oldSheetContent = oldSheetContent;\r\n        this.newSheetContent = newSheetContent;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoSetSheetContent(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoSetSheetContent(this);\r\n    }\r\n}\r\nexport class MoveRowsUndoEntry extends BaseUndoEntry {\r\n    constructor(sheet, startRow, numberOfRows, targetRow, version) {\r\n        super();\r\n        this.sheet = sheet;\r\n        this.startRow = startRow;\r\n        this.numberOfRows = numberOfRows;\r\n        this.targetRow = targetRow;\r\n        this.version = version;\r\n        this.undoStart = this.startRow < this.targetRow ? this.targetRow - this.numberOfRows : this.targetRow;\r\n        this.undoEnd = this.startRow > this.targetRow ? this.startRow + this.numberOfRows : this.startRow;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoMoveRows(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoMoveRows(this);\r\n    }\r\n}\r\nexport class MoveColumnsUndoEntry extends BaseUndoEntry {\r\n    constructor(sheet, startColumn, numberOfColumns, targetColumn, version) {\r\n        super();\r\n        this.sheet = sheet;\r\n        this.startColumn = startColumn;\r\n        this.numberOfColumns = numberOfColumns;\r\n        this.targetColumn = targetColumn;\r\n        this.version = version;\r\n        this.undoStart = this.startColumn < this.targetColumn ? this.targetColumn - this.numberOfColumns : this.targetColumn;\r\n        this.undoEnd = this.startColumn > this.targetColumn ? this.startColumn + this.numberOfColumns : this.startColumn;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoMoveColumns(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoMoveColumns(this);\r\n    }\r\n}\r\nexport class AddColumnsUndoEntry extends BaseUndoEntry {\r\n    constructor(command) {\r\n        super();\r\n        this.command = command;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoAddColumns(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoAddColumns(this);\r\n    }\r\n}\r\nexport class RemoveColumnsUndoEntry extends BaseUndoEntry {\r\n    constructor(command, columnsRemovals) {\r\n        super();\r\n        this.command = command;\r\n        this.columnsRemovals = columnsRemovals;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoRemoveColumns(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoRemoveColumns(this);\r\n    }\r\n}\r\nexport class AddSheetUndoEntry extends BaseUndoEntry {\r\n    constructor(sheetName) {\r\n        super();\r\n        this.sheetName = sheetName;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoAddSheet(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoAddSheet(this);\r\n    }\r\n}\r\nexport class RemoveSheetUndoEntry extends BaseUndoEntry {\r\n    constructor(sheetName, sheetId, oldSheetContent, scopedNamedExpressions, version) {\r\n        super();\r\n        this.sheetName = sheetName;\r\n        this.sheetId = sheetId;\r\n        this.oldSheetContent = oldSheetContent;\r\n        this.scopedNamedExpressions = scopedNamedExpressions;\r\n        this.version = version;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoRemoveSheet(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoRemoveSheet(this);\r\n    }\r\n}\r\nexport class RenameSheetUndoEntry extends BaseUndoEntry {\r\n    constructor(sheetId, oldName, newName) {\r\n        super();\r\n        this.sheetId = sheetId;\r\n        this.oldName = oldName;\r\n        this.newName = newName;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoRenameSheet(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoRenameSheet(this);\r\n    }\r\n}\r\nexport class ClearSheetUndoEntry extends BaseUndoEntry {\r\n    constructor(sheetId, oldSheetContent) {\r\n        super();\r\n        this.sheetId = sheetId;\r\n        this.oldSheetContent = oldSheetContent;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoClearSheet(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoClearSheet(this);\r\n    }\r\n}\r\nexport class SetCellContentsUndoEntry extends BaseUndoEntry {\r\n    constructor(cellContents) {\r\n        super();\r\n        this.cellContents = cellContents;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoSetCellContents(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoSetCellContents(this);\r\n    }\r\n}\r\nexport class PasteUndoEntry extends BaseUndoEntry {\r\n    constructor(targetLeftCorner, oldContent, newContent, addedGlobalNamedExpressions) {\r\n        super();\r\n        this.targetLeftCorner = targetLeftCorner;\r\n        this.oldContent = oldContent;\r\n        this.newContent = newContent;\r\n        this.addedGlobalNamedExpressions = addedGlobalNamedExpressions;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoPaste(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoPaste(this);\r\n    }\r\n}\r\nexport class AddNamedExpressionUndoEntry extends BaseUndoEntry {\r\n    constructor(name, newContent, scope, options) {\r\n        super();\r\n        this.name = name;\r\n        this.newContent = newContent;\r\n        this.scope = scope;\r\n        this.options = options;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoAddNamedExpression(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoAddNamedExpression(this);\r\n    }\r\n}\r\nexport class RemoveNamedExpressionUndoEntry extends BaseUndoEntry {\r\n    constructor(namedExpression, content, scope) {\r\n        super();\r\n        this.namedExpression = namedExpression;\r\n        this.content = content;\r\n        this.scope = scope;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoRemoveNamedExpression(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoRemoveNamedExpression(this);\r\n    }\r\n}\r\nexport class ChangeNamedExpressionUndoEntry extends BaseUndoEntry {\r\n    constructor(namedExpression, newContent, oldContent, scope, options) {\r\n        super();\r\n        this.namedExpression = namedExpression;\r\n        this.newContent = newContent;\r\n        this.oldContent = oldContent;\r\n        this.scope = scope;\r\n        this.options = options;\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoChangeNamedExpression(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoChangeNamedExpression(this);\r\n    }\r\n}\r\nexport class BatchUndoEntry extends BaseUndoEntry {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.operations = [];\r\n    }\r\n    add(operation) {\r\n        this.operations.push(operation);\r\n    }\r\n    *reversedOperations() {\r\n        for (let i = this.operations.length - 1; i >= 0; i--) {\r\n            yield this.operations[i];\r\n        }\r\n    }\r\n    doUndo(undoRedo) {\r\n        undoRedo.undoBatch(this);\r\n    }\r\n    doRedo(undoRedo) {\r\n        undoRedo.redoBatch(this);\r\n    }\r\n}\r\nexport class UndoRedo {\r\n    constructor(config, operations) {\r\n        this.operations = operations;\r\n        this.oldData = new Map();\r\n        this.undoStack = [];\r\n        this.redoStack = [];\r\n        this.undoLimit = config.undoLimit;\r\n    }\r\n    saveOperation(operation) {\r\n        if (this.batchUndoEntry !== undefined) {\r\n            this.batchUndoEntry.add(operation);\r\n        }\r\n        else {\r\n            this.addUndoEntry(operation);\r\n        }\r\n    }\r\n    beginBatchMode() {\r\n        this.batchUndoEntry = new BatchUndoEntry();\r\n    }\r\n    commitBatchMode() {\r\n        if (this.batchUndoEntry === undefined) {\r\n            throw 'Batch mode wasn\\'t started';\r\n        }\r\n        this.addUndoEntry(this.batchUndoEntry);\r\n        this.batchUndoEntry = undefined;\r\n    }\r\n    storeDataForVersion(version, address, astHash) {\r\n        if (!this.oldData.has(version)) {\r\n            this.oldData.set(version, []);\r\n        }\r\n        const currentOldData = this.oldData.get(version);\r\n        currentOldData.push([address, astHash]);\r\n    }\r\n    clearRedoStack() {\r\n        this.redoStack = [];\r\n    }\r\n    clearUndoStack() {\r\n        this.undoStack = [];\r\n    }\r\n    isUndoStackEmpty() {\r\n        return this.undoStack.length === 0;\r\n    }\r\n    isRedoStackEmpty() {\r\n        return this.redoStack.length === 0;\r\n    }\r\n    undo() {\r\n        const operation = this.undoStack.pop();\r\n        if (!operation) {\r\n            throw 'Attempted to undo without operation on stack';\r\n        }\r\n        this.undoEntry(operation);\r\n        this.redoStack.push(operation);\r\n    }\r\n    undoBatch(batchOperation) {\r\n        for (const operation of batchOperation.reversedOperations()) {\r\n            this.undoEntry(operation);\r\n        }\r\n    }\r\n    undoRemoveRows(operation) {\r\n        this.operations.forceApplyPostponedTransformations();\r\n        const { command: { sheet }, rowsRemovals } = operation;\r\n        for (let i = rowsRemovals.length - 1; i >= 0; --i) {\r\n            const rowsRemoval = rowsRemovals[i];\r\n            this.operations.addRows(new AddRowsCommand(sheet, [[rowsRemoval.rowFrom, rowsRemoval.rowCount]]));\r\n            for (const { address, cellType } of rowsRemoval.removedCells) {\r\n                this.operations.restoreCell(address, cellType);\r\n            }\r\n            this.restoreOldDataFromVersion(rowsRemoval.version - 1);\r\n        }\r\n    }\r\n    undoRemoveColumns(operation) {\r\n        this.operations.forceApplyPostponedTransformations();\r\n        const { command: { sheet }, columnsRemovals } = operation;\r\n        for (let i = columnsRemovals.length - 1; i >= 0; --i) {\r\n            const columnsRemoval = columnsRemovals[i];\r\n            this.operations.addColumns(new AddColumnsCommand(sheet, [[columnsRemoval.columnFrom, columnsRemoval.columnCount]]));\r\n            for (const { address, cellType } of columnsRemoval.removedCells) {\r\n                this.operations.restoreCell(address, cellType);\r\n            }\r\n            this.restoreOldDataFromVersion(columnsRemoval.version - 1);\r\n        }\r\n    }\r\n    undoAddRows(operation) {\r\n        const addedRowsSpans = operation.command.rowsSpans();\r\n        for (let i = addedRowsSpans.length - 1; i >= 0; --i) {\r\n            const addedRows = addedRowsSpans[i];\r\n            this.operations.removeRows(new RemoveRowsCommand(operation.command.sheet, [[addedRows.rowStart, addedRows.numberOfRows]]));\r\n        }\r\n    }\r\n    undoAddColumns(operation) {\r\n        const addedColumnsSpans = operation.command.columnsSpans();\r\n        for (let i = addedColumnsSpans.length - 1; i >= 0; --i) {\r\n            const addedColumns = addedColumnsSpans[i];\r\n            this.operations.removeColumns(new RemoveColumnsCommand(operation.command.sheet, [[addedColumns.columnStart, addedColumns.numberOfColumns]]));\r\n        }\r\n    }\r\n    undoSetCellContents(operation) {\r\n        for (const cellContentData of operation.cellContents) {\r\n            const address = cellContentData.address;\r\n            const [oldContentAddress, oldContent] = cellContentData.oldContent;\r\n            if (!equalSimpleCellAddress(address, oldContentAddress)) {\r\n                this.operations.setCellEmpty(address);\r\n            }\r\n            this.operations.restoreCell(oldContentAddress, oldContent);\r\n        }\r\n    }\r\n    undoPaste(operation) {\r\n        this.restoreOperationOldContent(operation.oldContent);\r\n        for (const namedExpression of operation.addedGlobalNamedExpressions) {\r\n            this.operations.removeNamedExpression(namedExpression);\r\n        }\r\n    }\r\n    undoMoveRows(operation) {\r\n        const { sheet } = operation;\r\n        this.operations.moveRows(sheet, operation.undoStart, operation.numberOfRows, operation.undoEnd);\r\n        this.restoreOldDataFromVersion(operation.version - 1);\r\n    }\r\n    undoMoveColumns(operation) {\r\n        const { sheet } = operation;\r\n        this.operations.moveColumns(sheet, operation.undoStart, operation.numberOfColumns, operation.undoEnd);\r\n        this.restoreOldDataFromVersion(operation.version - 1);\r\n    }\r\n    undoMoveCells(operation) {\r\n        this.operations.forceApplyPostponedTransformations();\r\n        this.operations.moveCells(operation.destinationLeftCorner, operation.width, operation.height, operation.sourceLeftCorner);\r\n        this.restoreOperationOldContent(operation.overwrittenCellsData);\r\n        this.restoreOldDataFromVersion(operation.version - 1);\r\n        for (const namedExpression of operation.addedGlobalNamedExpressions) {\r\n            this.operations.removeNamedExpression(namedExpression);\r\n        }\r\n    }\r\n    undoAddSheet(operation) {\r\n        const { sheetName } = operation;\r\n        this.operations.removeSheetByName(sheetName);\r\n    }\r\n    undoRemoveSheet(operation) {\r\n        this.operations.forceApplyPostponedTransformations();\r\n        const { oldSheetContent, sheetId } = operation;\r\n        this.operations.addSheet(operation.sheetName);\r\n        for (let rowIndex = 0; rowIndex < oldSheetContent.length; rowIndex++) {\r\n            const row = oldSheetContent[rowIndex];\r\n            for (let col = 0; col < row.length; col++) {\r\n                const cellType = row[col];\r\n                const address = simpleCellAddress(sheetId, col, rowIndex);\r\n                this.operations.restoreCell(address, cellType);\r\n            }\r\n        }\r\n        for (const [namedexpression, content] of operation.scopedNamedExpressions) {\r\n            this.operations.restoreNamedExpression(namedexpression, content, sheetId);\r\n        }\r\n        this.restoreOldDataFromVersion(operation.version - 1);\r\n    }\r\n    undoRenameSheet(operation) {\r\n        this.operations.renameSheet(operation.sheetId, operation.oldName);\r\n    }\r\n    undoClearSheet(operation) {\r\n        const { oldSheetContent, sheetId } = operation;\r\n        for (let rowIndex = 0; rowIndex < oldSheetContent.length; rowIndex++) {\r\n            const row = oldSheetContent[rowIndex];\r\n            for (let col = 0; col < row.length; col++) {\r\n                const cellType = row[col];\r\n                const address = simpleCellAddress(sheetId, col, rowIndex);\r\n                this.operations.restoreCell(address, cellType);\r\n            }\r\n        }\r\n    }\r\n    undoSetSheetContent(operation) {\r\n        const { oldSheetContent, sheetId } = operation;\r\n        this.operations.clearSheet(sheetId);\r\n        for (let rowIndex = 0; rowIndex < oldSheetContent.length; rowIndex++) {\r\n            const row = oldSheetContent[rowIndex];\r\n            for (let col = 0; col < row.length; col++) {\r\n                const cellType = row[col];\r\n                const address = simpleCellAddress(sheetId, col, rowIndex);\r\n                this.operations.restoreCell(address, cellType);\r\n            }\r\n        }\r\n    }\r\n    undoAddNamedExpression(operation) {\r\n        this.operations.removeNamedExpression(operation.name, operation.scope);\r\n    }\r\n    undoRemoveNamedExpression(operation) {\r\n        this.operations.restoreNamedExpression(operation.namedExpression, operation.content, operation.scope);\r\n    }\r\n    undoChangeNamedExpression(operation) {\r\n        this.operations.restoreNamedExpression(operation.namedExpression, operation.oldContent, operation.scope);\r\n    }\r\n    undoSetRowOrder(operation) {\r\n        this.restoreOperationOldContent(operation.oldContent);\r\n    }\r\n    undoSetColumnOrder(operation) {\r\n        this.restoreOperationOldContent(operation.oldContent);\r\n    }\r\n    redo() {\r\n        const operation = this.redoStack.pop();\r\n        if (!operation) {\r\n            throw 'Attempted to redo without operation on stack';\r\n        }\r\n        this.redoEntry(operation);\r\n        this.undoStack.push(operation);\r\n    }\r\n    redoBatch(batchOperation) {\r\n        for (const operation of batchOperation.operations) {\r\n            this.redoEntry(operation);\r\n        }\r\n    }\r\n    redoRemoveRows(operation) {\r\n        this.operations.removeRows(operation.command);\r\n    }\r\n    redoMoveCells(operation) {\r\n        this.operations.moveCells(operation.sourceLeftCorner, operation.width, operation.height, operation.destinationLeftCorner);\r\n    }\r\n    redoRemoveColumns(operation) {\r\n        this.operations.removeColumns(operation.command);\r\n    }\r\n    redoPaste(operation) {\r\n        const { targetLeftCorner, newContent } = operation;\r\n        const height = newContent.length;\r\n        const width = newContent[0].length;\r\n        for (let y = 0; y < height; ++y) {\r\n            for (let x = 0; x < width; ++x) {\r\n                const address = simpleCellAddress(targetLeftCorner.sheet, targetLeftCorner.col + x, targetLeftCorner.row + y);\r\n                this.operations.restoreCell(address, newContent[y][x]);\r\n            }\r\n        }\r\n    }\r\n    redoSetCellContents(operation) {\r\n        for (const cellContentData of operation.cellContents) {\r\n            this.operations.setCellContent(cellContentData.address, cellContentData.newContent);\r\n        }\r\n    }\r\n    redoAddRows(operation) {\r\n        this.operations.addRows(operation.command);\r\n    }\r\n    redoAddColumns(operation) {\r\n        this.operations.addColumns(operation.command);\r\n    }\r\n    redoRemoveSheet(operation) {\r\n        this.operations.removeSheetByName(operation.sheetName);\r\n    }\r\n    redoAddSheet(operation) {\r\n        this.operations.addSheet(operation.sheetName);\r\n    }\r\n    redoRenameSheet(operation) {\r\n        this.operations.renameSheet(operation.sheetId, operation.newName);\r\n    }\r\n    redoMoveRows(operation) {\r\n        this.operations.moveRows(operation.sheet, operation.startRow, operation.numberOfRows, operation.targetRow);\r\n    }\r\n    redoMoveColumns(operation) {\r\n        this.operations.moveColumns(operation.sheet, operation.startColumn, operation.numberOfColumns, operation.targetColumn);\r\n    }\r\n    redoClearSheet(operation) {\r\n        this.operations.clearSheet(operation.sheetId);\r\n    }\r\n    redoSetSheetContent(operation) {\r\n        const { sheetId, newSheetContent } = operation;\r\n        this.operations.setSheetContent(sheetId, newSheetContent);\r\n    }\r\n    redoAddNamedExpression(operation) {\r\n        this.operations.addNamedExpression(operation.name, operation.newContent, operation.scope, operation.options);\r\n    }\r\n    redoRemoveNamedExpression(operation) {\r\n        this.operations.removeNamedExpression(operation.namedExpression.displayName, operation.scope);\r\n    }\r\n    redoChangeNamedExpression(operation) {\r\n        this.operations.changeNamedExpressionExpression(operation.namedExpression.displayName, operation.newContent, operation.scope, operation.options);\r\n    }\r\n    redoSetRowOrder(operation) {\r\n        this.operations.setRowOrder(operation.sheetId, operation.rowMapping);\r\n    }\r\n    redoSetColumnOrder(operation) {\r\n        this.operations.setColumnOrder(operation.sheetId, operation.columnMapping);\r\n    }\r\n    addUndoEntry(operation) {\r\n        this.undoStack.push(operation);\r\n        this.undoStack.splice(0, Math.max(0, this.undoStack.length - this.undoLimit));\r\n    }\r\n    undoEntry(operation) {\r\n        operation.doUndo(this);\r\n    }\r\n    restoreOperationOldContent(oldContent) {\r\n        for (const [address, clipboardCell] of oldContent) {\r\n            this.operations.restoreCell(address, clipboardCell);\r\n        }\r\n    }\r\n    redoEntry(operation) {\r\n        operation.doRedo(this);\r\n    }\r\n    restoreOldDataFromVersion(version) {\r\n        const oldDataToRestore = this.oldData.get(version) || [];\r\n        for (const entryToRestore of oldDataToRestore) {\r\n            const [address, hash] = entryToRestore;\r\n            this.operations.setFormulaToCellFromCache(hash, address);\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\r\nimport { absolutizeDependencies } from './absolutizeDependencies';\r\nimport { CellError, ErrorType } from './Cell';\r\nimport { ContentChanges } from './ContentChanges';\r\nimport { ArrayVertex, RangeVertex } from './DependencyGraph';\r\nimport { FormulaVertex } from './DependencyGraph/FormulaCellVertex';\r\nimport { InterpreterState } from './interpreter/InterpreterState';\r\nimport { EmptyValue, getRawValue } from './interpreter/InterpreterValue';\r\nimport { SimpleRangeValue } from './interpreter/SimpleRangeValue';\r\nimport { StatType } from './statistics';\r\nexport class Evaluator {\r\n    constructor(config, stats, interpreter, lazilyTransformingAstService, dependencyGraph, columnSearch) {\r\n        this.config = config;\r\n        this.stats = stats;\r\n        this.interpreter = interpreter;\r\n        this.lazilyTransformingAstService = lazilyTransformingAstService;\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.columnSearch = columnSearch;\r\n    }\r\n    run() {\r\n        this.stats.start(StatType.TOP_SORT);\r\n        const { sorted, cycled } = this.dependencyGraph.topSortWithScc();\r\n        this.stats.end(StatType.TOP_SORT);\r\n        this.stats.measure(StatType.EVALUATION, () => {\r\n            this.recomputeFormulas(cycled, sorted);\r\n        });\r\n    }\r\n    partialRun(vertices) {\r\n        const changes = ContentChanges.empty();\r\n        this.stats.measure(StatType.EVALUATION, () => {\r\n            this.dependencyGraph.graph.getTopSortedWithSccSubgraphFrom(vertices, (vertex) => {\r\n                if (vertex instanceof FormulaVertex) {\r\n                    const currentValue = vertex.isComputed() ? vertex.getCellValue() : undefined;\r\n                    const newCellValue = this.recomputeFormulaVertexValue(vertex);\r\n                    if (newCellValue !== currentValue) {\r\n                        const address = vertex.getAddress(this.lazilyTransformingAstService);\r\n                        changes.addChange(newCellValue, address);\r\n                        this.columnSearch.change(getRawValue(currentValue), getRawValue(newCellValue), address);\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }\r\n                else if (vertex instanceof RangeVertex) {\r\n                    vertex.clearCache();\r\n                    return true;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            }, (vertex) => {\r\n                if (vertex instanceof RangeVertex) {\r\n                    vertex.clearCache();\r\n                }\r\n                else if (vertex instanceof FormulaVertex) {\r\n                    const address = vertex.getAddress(this.lazilyTransformingAstService);\r\n                    this.columnSearch.remove(getRawValue(vertex.valueOrUndef()), address);\r\n                    const error = new CellError(ErrorType.CYCLE, undefined, vertex);\r\n                    vertex.setCellValue(error);\r\n                    changes.addChange(error, address);\r\n                }\r\n            });\r\n        });\r\n        return changes;\r\n    }\r\n    runAndForget(ast, address, dependencies) {\r\n        const tmpRanges = [];\r\n        for (const dep of absolutizeDependencies(dependencies, address)) {\r\n            if (dep instanceof AbsoluteCellRange) {\r\n                const range = dep;\r\n                if (this.dependencyGraph.getRange(range.start, range.end) === undefined) {\r\n                    const rangeVertex = new RangeVertex(range);\r\n                    this.dependencyGraph.rangeMapping.setRange(rangeVertex);\r\n                    tmpRanges.push(rangeVertex);\r\n                }\r\n            }\r\n        }\r\n        const ret = this.evaluateAstToCellValue(ast, new InterpreterState(address, this.config.useArrayArithmetic));\r\n        tmpRanges.forEach((rangeVertex) => {\r\n            this.dependencyGraph.rangeMapping.removeRange(rangeVertex);\r\n        });\r\n        return ret;\r\n    }\r\n    /**\r\n     * Recalculates formulas in the topological sort order\r\n     */\r\n    recomputeFormulas(cycled, sorted) {\r\n        cycled.forEach((vertex) => {\r\n            if (vertex instanceof FormulaVertex) {\r\n                vertex.setCellValue(new CellError(ErrorType.CYCLE, undefined, vertex));\r\n            }\r\n        });\r\n        sorted.forEach((vertex) => {\r\n            if (vertex instanceof FormulaVertex) {\r\n                const newCellValue = this.recomputeFormulaVertexValue(vertex);\r\n                const address = vertex.getAddress(this.lazilyTransformingAstService);\r\n                this.columnSearch.add(getRawValue(newCellValue), address);\r\n            }\r\n            else if (vertex instanceof RangeVertex) {\r\n                vertex.clearCache();\r\n            }\r\n        });\r\n    }\r\n    recomputeFormulaVertexValue(vertex) {\r\n        const address = vertex.getAddress(this.lazilyTransformingAstService);\r\n        if (vertex instanceof ArrayVertex && (vertex.array.size.isRef || !this.dependencyGraph.isThereSpaceForArray(vertex))) {\r\n            return vertex.setNoSpace();\r\n        }\r\n        else {\r\n            const formula = vertex.getFormula(this.lazilyTransformingAstService);\r\n            const newCellValue = this.evaluateAstToCellValue(formula, new InterpreterState(address, this.config.useArrayArithmetic, vertex));\r\n            return vertex.setCellValue(newCellValue);\r\n        }\r\n    }\r\n    evaluateAstToCellValue(ast, state) {\r\n        const interpreterValue = this.interpreter.evaluateAst(ast, state);\r\n        if (interpreterValue instanceof SimpleRangeValue) {\r\n            return interpreterValue;\r\n        }\r\n        else if (interpreterValue === EmptyValue && this.config.evaluateNullToZero) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return interpreterValue;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from './Cell';\r\nimport { DetailedCellError } from './CellValue';\r\nimport { ErrorMessage } from './error-message';\r\nimport { EmptyValue, getRawValue, isExtendedNumber } from './interpreter/InterpreterValue';\r\nimport { SimpleRangeValue } from './interpreter/SimpleRangeValue';\r\nimport { NamedExpressions } from './NamedExpressions';\r\nimport { simpleCellAddressToString } from './parser/addressRepresentationConverters';\r\n/**\r\n * A list of cells which values changed after the operation, their absolute addresses and new values.\r\n */\r\nexport class ExportedCellChange {\r\n    constructor(address, newValue) {\r\n        this.address = address;\r\n        this.newValue = newValue;\r\n    }\r\n    get col() {\r\n        return this.address.col;\r\n    }\r\n    get row() {\r\n        return this.address.row;\r\n    }\r\n    get sheet() {\r\n        return this.address.sheet;\r\n    }\r\n    get value() {\r\n        return this.newValue;\r\n    }\r\n}\r\nexport class ExportedNamedExpressionChange {\r\n    constructor(name, newValue) {\r\n        this.name = name;\r\n        this.newValue = newValue;\r\n    }\r\n}\r\nexport class Exporter {\r\n    constructor(config, namedExpressions, sheetIndexMapping, lazilyTransformingService) {\r\n        this.config = config;\r\n        this.namedExpressions = namedExpressions;\r\n        this.sheetIndexMapping = sheetIndexMapping;\r\n        this.lazilyTransformingService = lazilyTransformingService;\r\n    }\r\n    exportChange(change) {\r\n        const value = change.value;\r\n        const address = change.address;\r\n        if (address.sheet === NamedExpressions.SHEET_FOR_WORKBOOK_EXPRESSIONS) {\r\n            const namedExpression = this.namedExpressions.namedExpressionInAddress(address.row);\r\n            if (!namedExpression) {\r\n                throw new Error('Missing named expression');\r\n            }\r\n            return new ExportedNamedExpressionChange(namedExpression.displayName, this.exportScalarOrRange(value));\r\n        }\r\n        else if (value instanceof SimpleRangeValue) {\r\n            const result = [];\r\n            for (const [cellValue, cellAddress] of value.entriesFromTopLeftCorner(address)) {\r\n                result.push(new ExportedCellChange(cellAddress, this.exportValue(cellValue)));\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            return new ExportedCellChange(address, this.exportValue(value));\r\n        }\r\n    }\r\n    exportValue(value) {\r\n        if (value instanceof SimpleRangeValue) {\r\n            return this.detailedError(new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected));\r\n        }\r\n        else if (this.config.smartRounding && isExtendedNumber(value)) {\r\n            return this.cellValueRounding(getRawValue(value));\r\n        }\r\n        else if (value instanceof CellError) {\r\n            return this.detailedError(value);\r\n        }\r\n        else if (value === EmptyValue) {\r\n            return null;\r\n        }\r\n        else {\r\n            return getRawValue(value);\r\n        }\r\n    }\r\n    exportScalarOrRange(value) {\r\n        if (value instanceof SimpleRangeValue) {\r\n            return value.rawData().map(row => row.map(v => this.exportValue(v)));\r\n        }\r\n        else {\r\n            return this.exportValue(value);\r\n        }\r\n    }\r\n    detailedError(error) {\r\n        var _a, _b;\r\n        let address = undefined;\r\n        const originAddress = (_a = error.root) === null || _a === void 0 ? void 0 : _a.getAddress(this.lazilyTransformingService);\r\n        if (originAddress !== undefined) {\r\n            if (originAddress.sheet === NamedExpressions.SHEET_FOR_WORKBOOK_EXPRESSIONS) {\r\n                address = (_b = this.namedExpressions.namedExpressionInAddress(originAddress.row)) === null || _b === void 0 ? void 0 : _b.displayName;\r\n            }\r\n            else {\r\n                address = simpleCellAddressToString(this.sheetIndexMapping, originAddress, -1);\r\n            }\r\n        }\r\n        return new DetailedCellError(error, this.config.translationPackage.getErrorTranslation(error.type), address);\r\n    }\r\n    cellValueRounding(value) {\r\n        if (value === 0) {\r\n            return value;\r\n        }\r\n        const magnitudeMultiplierExponent = Math.floor(Math.log10(Math.abs(value)));\r\n        const placesMultiplier = Math.pow(10, this.config.precisionRounding - magnitudeMultiplierExponent);\r\n        if (value < 0) {\r\n            return -Math.round(-value * placesMultiplier) / placesMultiplier;\r\n        }\r\n        else {\r\n            return Math.round(value * placesMultiplier) / placesMultiplier;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { absolutizeDependencies } from './absolutizeDependencies';\r\nimport { ArraySize } from './ArraySize';\r\nimport { simpleCellAddress } from './Cell';\r\nimport { CellContent } from './CellContentParser';\r\nimport { ArrayVertex, FormulaCellVertex, ParsingErrorVertex, ValueCellVertex } from './DependencyGraph';\r\nimport { getRawValue } from './interpreter/InterpreterValue';\r\nimport { StatType } from './statistics';\r\n/**\r\n * Service building the graph and mappings.\r\n */\r\nexport class GraphBuilder {\r\n    /**\r\n     * Configures the building service.\r\n     */\r\n    constructor(dependencyGraph, columnSearch, parser, cellContentParser, stats, arraySizePredictor) {\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.columnSearch = columnSearch;\r\n        this.parser = parser;\r\n        this.cellContentParser = cellContentParser;\r\n        this.stats = stats;\r\n        this.arraySizePredictor = arraySizePredictor;\r\n        this.buildStrategy = new SimpleStrategy(dependencyGraph, columnSearch, parser, stats, cellContentParser, arraySizePredictor);\r\n    }\r\n    /**\r\n     * Builds graph.\r\n     */\r\n    buildGraph(sheets, stats) {\r\n        const dependencies = stats.measure(StatType.COLLECT_DEPENDENCIES, () => this.buildStrategy.run(sheets));\r\n        this.dependencyGraph.getAndClearContentChanges();\r\n        stats.measure(StatType.PROCESS_DEPENDENCIES, () => this.processDependencies(dependencies));\r\n    }\r\n    processDependencies(dependencies) {\r\n        dependencies.forEach((cellDependencies, endVertex) => {\r\n            this.dependencyGraph.processCellDependencies(cellDependencies, endVertex);\r\n        });\r\n    }\r\n}\r\nexport class SimpleStrategy {\r\n    constructor(dependencyGraph, columnIndex, parser, stats, cellContentParser, arraySizePredictor) {\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.columnIndex = columnIndex;\r\n        this.parser = parser;\r\n        this.stats = stats;\r\n        this.cellContentParser = cellContentParser;\r\n        this.arraySizePredictor = arraySizePredictor;\r\n    }\r\n    run(sheets) {\r\n        const dependencies = new Map();\r\n        for (const sheetName in sheets) {\r\n            const sheetId = this.dependencyGraph.getSheetId(sheetName);\r\n            const sheet = sheets[sheetName];\r\n            for (let i = 0; i < sheet.length; ++i) {\r\n                const row = sheet[i];\r\n                for (let j = 0; j < row.length; ++j) {\r\n                    const cellContent = row[j];\r\n                    const address = simpleCellAddress(sheetId, j, i);\r\n                    const parsedCellContent = this.cellContentParser.parse(cellContent);\r\n                    if (parsedCellContent instanceof CellContent.Formula) {\r\n                        const parseResult = this.stats.measure(StatType.PARSER, () => this.parser.parse(parsedCellContent.formula, address));\r\n                        if (parseResult.errors.length > 0) {\r\n                            this.shrinkArrayIfNeeded(address);\r\n                            const vertex = new ParsingErrorVertex(parseResult.errors, parsedCellContent.formula);\r\n                            this.dependencyGraph.addVertex(address, vertex);\r\n                        }\r\n                        else {\r\n                            this.shrinkArrayIfNeeded(address);\r\n                            const size = this.arraySizePredictor.checkArraySize(parseResult.ast, address);\r\n                            if (size.isScalar()) {\r\n                                const vertex = new FormulaCellVertex(parseResult.ast, address, 0);\r\n                                dependencies.set(vertex, absolutizeDependencies(parseResult.dependencies, address));\r\n                                this.dependencyGraph.addVertex(address, vertex);\r\n                                if (parseResult.hasVolatileFunction) {\r\n                                    this.dependencyGraph.markAsVolatile(vertex);\r\n                                }\r\n                                if (parseResult.hasStructuralChangeFunction) {\r\n                                    this.dependencyGraph.markAsDependentOnStructureChange(vertex);\r\n                                }\r\n                            }\r\n                            else {\r\n                                const vertex = new ArrayVertex(parseResult.ast, address, new ArraySize(size.width, size.height));\r\n                                dependencies.set(vertex, absolutizeDependencies(parseResult.dependencies, address));\r\n                                this.dependencyGraph.addArrayVertex(address, vertex);\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (parsedCellContent instanceof CellContent.Empty) {\r\n                        /* we don't care about empty cells here */\r\n                    }\r\n                    else {\r\n                        this.shrinkArrayIfNeeded(address);\r\n                        const vertex = new ValueCellVertex(parsedCellContent.value, cellContent);\r\n                        this.columnIndex.add(getRawValue(parsedCellContent.value), address);\r\n                        this.dependencyGraph.addVertex(address, vertex);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return dependencies;\r\n    }\r\n    shrinkArrayIfNeeded(address) {\r\n        const vertex = this.dependencyGraph.getCell(address);\r\n        if (vertex instanceof ArrayVertex) {\r\n            this.dependencyGraph.shrinkArrayToCorner(vertex);\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AliasAlreadyExisting, FunctionPluginValidationError, ProtectedFunctionError } from '../errors';\r\nimport { HyperFormula } from '../HyperFormula';\r\nimport { VersionPlugin } from './plugin/VersionPlugin';\r\nfunction validateAndReturnMetadataFromName(functionId, plugin) {\r\n    var _a;\r\n    let entry = plugin.implementedFunctions[functionId];\r\n    const key = (_a = plugin.aliases) === null || _a === void 0 ? void 0 : _a[functionId];\r\n    if (key !== undefined) {\r\n        if (entry !== undefined) {\r\n            throw new AliasAlreadyExisting(functionId, plugin.name);\r\n        }\r\n        entry = plugin.implementedFunctions[key];\r\n    }\r\n    if (entry === undefined) {\r\n        throw FunctionPluginValidationError.functionNotDeclaredInPlugin(functionId, plugin.name);\r\n    }\r\n    return entry;\r\n}\r\nexport class FunctionRegistry {\r\n    constructor(config) {\r\n        this.config = config;\r\n        this.functions = new Map();\r\n        this.arraySizeFunctions = new Map();\r\n        this.volatileFunctions = new Set();\r\n        this.arrayFunctions = new Set();\r\n        this.structuralChangeFunctions = new Set();\r\n        this.functionsWhichDoesNotNeedArgumentsToBeComputed = new Set();\r\n        this.functionsMetadata = new Map();\r\n        this.doesFunctionNeedArgumentToBeComputed = (functionId) => this.functionsWhichDoesNotNeedArgumentsToBeComputed.has(functionId);\r\n        this.isFunctionVolatile = (functionId) => this.volatileFunctions.has(functionId);\r\n        this.isArrayFunction = (functionId) => this.arrayFunctions.has(functionId);\r\n        this.isFunctionDependentOnSheetStructureChange = (functionId) => this.structuralChangeFunctions.has(functionId);\r\n        if (config.functionPlugins.length > 0) {\r\n            this.instancePlugins = new Map();\r\n            for (const plugin of config.functionPlugins) {\r\n                FunctionRegistry.loadPluginFunctions(plugin, this.instancePlugins);\r\n            }\r\n        }\r\n        else {\r\n            this.instancePlugins = new Map(FunctionRegistry.plugins);\r\n        }\r\n        for (const [functionId, plugin] of FunctionRegistry.protectedFunctions()) {\r\n            FunctionRegistry.loadFunctionUnprotected(plugin, functionId, this.instancePlugins);\r\n        }\r\n        for (const [functionId, plugin] of this.instancePlugins.entries()) {\r\n            this.categorizeFunction(functionId, validateAndReturnMetadataFromName(functionId, plugin));\r\n        }\r\n    }\r\n    static registerFunctionPlugin(plugin, translations) {\r\n        this.loadPluginFunctions(plugin, this.plugins);\r\n        if (translations !== undefined) {\r\n            this.loadTranslations(translations);\r\n        }\r\n    }\r\n    static registerFunction(functionId, plugin, translations) {\r\n        this.loadPluginFunction(plugin, functionId, this.plugins);\r\n        if (translations !== undefined) {\r\n            this.loadTranslations(translations);\r\n        }\r\n    }\r\n    static unregisterFunction(functionId) {\r\n        if (this.functionIsProtected(functionId)) {\r\n            throw ProtectedFunctionError.cannotUnregisterFunctionWithId(functionId);\r\n        }\r\n        this.plugins.delete(functionId);\r\n    }\r\n    static unregisterFunctionPlugin(plugin) {\r\n        for (const protectedPlugin of this.protectedPlugins()) {\r\n            if (protectedPlugin === plugin) {\r\n                throw ProtectedFunctionError.cannotUnregisterProtectedPlugin();\r\n            }\r\n        }\r\n        for (const [functionId, registeredPlugin] of this.plugins.entries()) {\r\n            if (registeredPlugin === plugin) {\r\n                this.plugins.delete(functionId);\r\n            }\r\n        }\r\n    }\r\n    static unregisterAll() {\r\n        this.plugins.clear();\r\n    }\r\n    static getRegisteredFunctionIds() {\r\n        return [\r\n            ...Array.from(this.plugins.keys()),\r\n            ...Array.from(this._protectedPlugins.keys())\r\n        ];\r\n    }\r\n    static getPlugins() {\r\n        return Array.from(new Set(this.plugins.values()).values());\r\n    }\r\n    static getFunctionPlugin(functionId) {\r\n        if (this.functionIsProtected(functionId)) {\r\n            return undefined;\r\n        }\r\n        else {\r\n            return this.plugins.get(functionId);\r\n        }\r\n    }\r\n    static functionIsProtected(functionId) {\r\n        return this._protectedPlugins.has(functionId);\r\n    }\r\n    static loadTranslations(translations) {\r\n        const registeredLanguages = new Set(HyperFormula.getRegisteredLanguagesCodes());\r\n        Object.keys(translations).forEach(code => {\r\n            if (registeredLanguages.has(code)) {\r\n                HyperFormula.getLanguage(code).extendFunctions(translations[code]);\r\n            }\r\n        });\r\n    }\r\n    static loadPluginFunctions(plugin, registry) {\r\n        Object.keys(plugin.implementedFunctions).forEach((functionName) => {\r\n            this.loadPluginFunction(plugin, functionName, registry);\r\n        });\r\n        if (plugin.aliases !== undefined) {\r\n            Object.keys(plugin.aliases).forEach((functionName) => {\r\n                this.loadPluginFunction(plugin, functionName, registry);\r\n            });\r\n        }\r\n    }\r\n    static loadPluginFunction(plugin, functionId, registry) {\r\n        if (this.functionIsProtected(functionId)) {\r\n            throw ProtectedFunctionError.cannotRegisterFunctionWithId(functionId);\r\n        }\r\n        else {\r\n            this.loadFunctionUnprotected(plugin, functionId, registry);\r\n        }\r\n    }\r\n    static loadFunctionUnprotected(plugin, functionId, registry) {\r\n        const methodName = validateAndReturnMetadataFromName(functionId, plugin).method;\r\n        if (Object.prototype.hasOwnProperty.call(plugin.prototype, methodName)) {\r\n            registry.set(functionId, plugin);\r\n        }\r\n        else {\r\n            throw FunctionPluginValidationError.functionMethodNotFound(methodName, plugin.name);\r\n        }\r\n    }\r\n    static *protectedFunctions() {\r\n        for (const [functionId, plugin] of this._protectedPlugins) {\r\n            if (plugin !== undefined) {\r\n                yield [functionId, plugin];\r\n            }\r\n        }\r\n    }\r\n    static *protectedPlugins() {\r\n        for (const [, plugin] of this._protectedPlugins) {\r\n            if (plugin !== undefined) {\r\n                yield plugin;\r\n            }\r\n        }\r\n    }\r\n    initializePlugins(interpreter) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        const instances = [];\r\n        for (const [functionId, plugin] of this.instancePlugins.entries()) {\r\n            let foundPluginInstance = instances.find(pluginInstance => pluginInstance instanceof plugin);\r\n            if (foundPluginInstance === undefined) {\r\n                foundPluginInstance = new plugin(interpreter);\r\n                instances.push(foundPluginInstance);\r\n            }\r\n            const metadata = validateAndReturnMetadataFromName(functionId, plugin);\r\n            const methodName = metadata.method;\r\n            this.functions.set(functionId, [methodName, foundPluginInstance]);\r\n            const arraySizeMethodName = metadata.arraySizeMethod;\r\n            if (arraySizeMethodName !== undefined) {\r\n                this.arraySizeFunctions.set(functionId, [arraySizeMethodName, foundPluginInstance]);\r\n            }\r\n        }\r\n    }\r\n    getFunctionPlugin(functionId) {\r\n        if (FunctionRegistry.functionIsProtected(functionId)) {\r\n            return undefined;\r\n        }\r\n        return this.instancePlugins.get(functionId);\r\n    }\r\n    getFunction(functionId) {\r\n        const pluginEntry = this.functions.get(functionId);\r\n        if (pluginEntry !== undefined && this.config.translationPackage.isFunctionTranslated(functionId)) {\r\n            const [pluginFunction, pluginInstance] = pluginEntry;\r\n            return (ast, state) => pluginInstance[pluginFunction](ast, state);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    getArraySizeFunction(functionId) {\r\n        const pluginEntry = this.arraySizeFunctions.get(functionId);\r\n        if (pluginEntry !== undefined && this.config.translationPackage.isFunctionTranslated(functionId)) {\r\n            const [pluginArraySizeFunction, pluginInstance] = pluginEntry;\r\n            return (ast, state) => pluginInstance[pluginArraySizeFunction](ast, state);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    getMetadata(functionId) {\r\n        return this.functionsMetadata.get(functionId);\r\n    }\r\n    getPlugins() {\r\n        const plugins = new Set();\r\n        for (const [functionId, plugin] of this.instancePlugins) {\r\n            if (!FunctionRegistry.functionIsProtected(functionId)) {\r\n                plugins.add(plugin);\r\n            }\r\n        }\r\n        return Array.from(plugins);\r\n    }\r\n    getRegisteredFunctionIds() {\r\n        return Array.from(this.functions.keys());\r\n    }\r\n    categorizeFunction(functionId, functionMetadata) {\r\n        if (functionMetadata.isVolatile) {\r\n            this.volatileFunctions.add(functionId);\r\n        }\r\n        if (functionMetadata.arrayFunction) {\r\n            this.arrayFunctions.add(functionId);\r\n        }\r\n        if (functionMetadata.doesNotNeedArgumentsToBeComputed) {\r\n            this.functionsWhichDoesNotNeedArgumentsToBeComputed.add(functionId);\r\n        }\r\n        if (functionMetadata.isDependentOnSheetStructureChange) {\r\n            this.structuralChangeFunctions.add(functionId);\r\n        }\r\n        this.functionsMetadata.set(functionId, functionMetadata);\r\n    }\r\n}\r\nFunctionRegistry.plugins = new Map();\r\nFunctionRegistry._protectedPlugins = new Map([\r\n    ['VERSION', VersionPlugin],\r\n    ['OFFSET', undefined],\r\n]);\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { HyperFormula } from '../../HyperFormula';\r\nimport { FunctionPlugin } from './FunctionPlugin';\r\nconst LICENSE_STATUS_MAP = new Map([\r\n    ['gpl-v3', 1],\r\n    [\"missing\" /* MISSING */, 2],\r\n    [\"invalid\" /* INVALID */, 3],\r\n    [\"expired\" /* EXPIRED */, 4],\r\n]);\r\nexport class VersionPlugin extends FunctionPlugin {\r\n    version(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('VERSION'), () => {\r\n            const { licenseKeyValidityState: validityState, licenseKey, } = this.config;\r\n            let status;\r\n            if (LICENSE_STATUS_MAP.has(licenseKey)) {\r\n                status = LICENSE_STATUS_MAP.get(licenseKey);\r\n            }\r\n            else if (LICENSE_STATUS_MAP.has(validityState)) {\r\n                status = LICENSE_STATUS_MAP.get(validityState);\r\n            }\r\n            else if (validityState === \"valid\" /* VALID */) {\r\n                status = licenseKey.slice(-5);\r\n            }\r\n            return `HyperFormula v${HyperFormula.version}, ${status}`;\r\n        });\r\n    }\r\n}\r\nVersionPlugin.implementedFunctions = {\r\n    'VERSION': {\r\n        method: 'version',\r\n        parameters: [],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange, AbsoluteColumnRange, AbsoluteRowRange } from '../AbsoluteCellRange';\r\nimport { ArrayValue, NotComputedArray } from '../ArrayValue';\r\nimport { CellError, ErrorType, invalidSimpleCellAddress } from '../Cell';\r\nimport { ErrorMessage } from '../error-message';\r\n// noinspection TypeScriptPreferShortImport\r\nimport { AstNodeType } from '../parser/Ast';\r\nimport { coerceRangeToScalar, coerceScalarToString, coerceToRange, fixNegativeZero, isNumberOverflow } from './ArithmeticHelper';\r\nimport { CriterionBuilder } from './Criterion';\r\nimport { FunctionRegistry } from './FunctionRegistry';\r\nimport { InterpreterState } from './InterpreterState';\r\nimport { cloneNumber, EmptyValue, getRawValue, isExtendedNumber, } from './InterpreterValue';\r\nimport { SimpleRangeValue } from './SimpleRangeValue';\r\nexport class Interpreter {\r\n    constructor(config, dependencyGraph, columnSearch, stats, arithmeticHelper, functionRegistry, namedExpressions, serialization, arraySizePredictor, dateTimeHelper) {\r\n        this.config = config;\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.columnSearch = columnSearch;\r\n        this.stats = stats;\r\n        this.arithmeticHelper = arithmeticHelper;\r\n        this.functionRegistry = functionRegistry;\r\n        this.namedExpressions = namedExpressions;\r\n        this.serialization = serialization;\r\n        this.arraySizePredictor = arraySizePredictor;\r\n        this.dateTimeHelper = dateTimeHelper;\r\n        this.equalOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.eq, arg1, arg2);\r\n        this.notEqualOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.neq, arg1, arg2);\r\n        this.greaterThanOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.gt, arg1, arg2);\r\n        this.lessThanOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.lt, arg1, arg2);\r\n        this.greaterThanOrEqualOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.geq, arg1, arg2);\r\n        this.lessThanOrEqualOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.leq, arg1, arg2);\r\n        this.concatOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.concat, coerceScalarToString(arg1), coerceScalarToString(arg2));\r\n        this.plusOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.addWithEpsilon, this.arithmeticHelper.coerceScalarToNumberOrError(arg1), this.arithmeticHelper.coerceScalarToNumberOrError(arg2));\r\n        this.minusOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.subtract, this.arithmeticHelper.coerceScalarToNumberOrError(arg1), this.arithmeticHelper.coerceScalarToNumberOrError(arg2));\r\n        this.timesOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.multiply, this.arithmeticHelper.coerceScalarToNumberOrError(arg1), this.arithmeticHelper.coerceScalarToNumberOrError(arg2));\r\n        this.powerOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.pow, this.arithmeticHelper.coerceScalarToNumberOrError(arg1), this.arithmeticHelper.coerceScalarToNumberOrError(arg2));\r\n        this.divOp = (arg1, arg2) => binaryErrorWrapper(this.arithmeticHelper.divide, this.arithmeticHelper.coerceScalarToNumberOrError(arg1), this.arithmeticHelper.coerceScalarToNumberOrError(arg2));\r\n        this.unaryMinusOp = (arg) => unaryErrorWrapper(this.arithmeticHelper.unaryMinus, this.arithmeticHelper.coerceScalarToNumberOrError(arg));\r\n        this.percentOp = (arg) => unaryErrorWrapper(this.arithmeticHelper.unaryPercent, this.arithmeticHelper.coerceScalarToNumberOrError(arg));\r\n        this.unaryPlusOp = (arg) => this.arithmeticHelper.unaryPlus(arg);\r\n        this.functionRegistry.initializePlugins(this);\r\n        this.criterionBuilder = new CriterionBuilder(config);\r\n    }\r\n    evaluateAst(ast, state) {\r\n        let val = this.evaluateAstWithoutPostprocessing(ast, state);\r\n        if (isExtendedNumber(val)) {\r\n            if (isNumberOverflow(getRawValue(val))) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NaN);\r\n            }\r\n            else {\r\n                val = cloneNumber(val, fixNegativeZero(getRawValue(val)));\r\n            }\r\n        }\r\n        if (val instanceof SimpleRangeValue && val.height() === 1 && val.width() === 1) {\r\n            [[val]] = val.data;\r\n        }\r\n        return wrapperForRootVertex(val, state.formulaVertex);\r\n    }\r\n    /**\r\n     * Calculates cell value from formula abstract syntax tree\r\n     *\r\n     * @param formula - abstract syntax tree of formula\r\n     * @param formulaAddress - address of the cell in which formula is located\r\n     */\r\n    evaluateAstWithoutPostprocessing(ast, state) {\r\n        switch (ast.type) {\r\n            case AstNodeType.EMPTY: {\r\n                return EmptyValue;\r\n            }\r\n            case AstNodeType.CELL_REFERENCE: {\r\n                const address = ast.reference.toSimpleCellAddress(state.formulaAddress);\r\n                if (invalidSimpleCellAddress(address)) {\r\n                    return new CellError(ErrorType.REF, ErrorMessage.BadRef);\r\n                }\r\n                return this.dependencyGraph.getCellValue(address);\r\n            }\r\n            case AstNodeType.NUMBER:\r\n            case AstNodeType.STRING: {\r\n                return ast.value;\r\n            }\r\n            case AstNodeType.CONCATENATE_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.concatOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.EQUALS_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.equalOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.NOT_EQUAL_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.notEqualOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.GREATER_THAN_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.greaterThanOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.LESS_THAN_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.lessThanOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.GREATER_THAN_OR_EQUAL_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.greaterThanOrEqualOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.LESS_THAN_OR_EQUAL_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.lessThanOrEqualOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.PLUS_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.plusOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.MINUS_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.minusOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.TIMES_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.timesOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.POWER_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.powerOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.DIV_OP: {\r\n                const leftResult = this.evaluateAst(ast.left, state);\r\n                const rightResult = this.evaluateAst(ast.right, state);\r\n                return this.binaryRangeWrapper(this.divOp, leftResult, rightResult, state);\r\n            }\r\n            case AstNodeType.PLUS_UNARY_OP: {\r\n                const result = this.evaluateAst(ast.value, state);\r\n                return this.unaryRangeWrapper(this.unaryPlusOp, result, state);\r\n            }\r\n            case AstNodeType.MINUS_UNARY_OP: {\r\n                const result = this.evaluateAst(ast.value, state);\r\n                return this.unaryRangeWrapper(this.unaryMinusOp, result, state);\r\n            }\r\n            case AstNodeType.PERCENT_OP: {\r\n                const result = this.evaluateAst(ast.value, state);\r\n                return this.unaryRangeWrapper(this.percentOp, result, state);\r\n            }\r\n            case AstNodeType.FUNCTION_CALL: {\r\n                if (this.config.licenseKeyValidityState !== \"valid\" /* VALID */ && !FunctionRegistry.functionIsProtected(ast.procedureName)) {\r\n                    return new CellError(ErrorType.LIC, ErrorMessage.LicenseKey(this.config.licenseKeyValidityState));\r\n                }\r\n                const pluginFunction = this.functionRegistry.getFunction(ast.procedureName);\r\n                if (pluginFunction !== undefined) {\r\n                    return pluginFunction(ast, new InterpreterState(state.formulaAddress, state.arraysFlag || this.functionRegistry.isArrayFunction(ast.procedureName), state.formulaVertex));\r\n                }\r\n                else {\r\n                    return new CellError(ErrorType.NAME, ErrorMessage.FunctionName(ast.procedureName));\r\n                }\r\n            }\r\n            case AstNodeType.NAMED_EXPRESSION: {\r\n                const namedExpression = this.namedExpressions.nearestNamedExpression(ast.expressionName, state.formulaAddress.sheet);\r\n                if (namedExpression) {\r\n                    return this.dependencyGraph.getCellValue(namedExpression.address);\r\n                }\r\n                else {\r\n                    return new CellError(ErrorType.NAME, ErrorMessage.NamedExpressionName(ast.expressionName));\r\n                }\r\n            }\r\n            case AstNodeType.CELL_RANGE: {\r\n                if (!this.rangeSpansOneSheet(ast)) {\r\n                    return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\r\n                }\r\n                const range = AbsoluteCellRange.fromCellRange(ast, state.formulaAddress);\r\n                const arrayVertex = this.dependencyGraph.getArray(range);\r\n                if (arrayVertex) {\r\n                    const array = arrayVertex.array;\r\n                    if (array instanceof NotComputedArray) {\r\n                        throw new Error('Array should be already computed');\r\n                    }\r\n                    else if (array instanceof CellError) {\r\n                        return array;\r\n                    }\r\n                    else if (array instanceof ArrayValue) {\r\n                        return SimpleRangeValue.fromRange(array.raw(), range, this.dependencyGraph);\r\n                    }\r\n                    else {\r\n                        throw new Error('Unknown array');\r\n                    }\r\n                }\r\n                else {\r\n                    return SimpleRangeValue.onlyRange(range, this.dependencyGraph);\r\n                }\r\n            }\r\n            case AstNodeType.COLUMN_RANGE: {\r\n                if (!this.rangeSpansOneSheet(ast)) {\r\n                    return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\r\n                }\r\n                const range = AbsoluteColumnRange.fromColumnRange(ast, state.formulaAddress);\r\n                return SimpleRangeValue.onlyRange(range, this.dependencyGraph);\r\n            }\r\n            case AstNodeType.ROW_RANGE: {\r\n                if (!this.rangeSpansOneSheet(ast)) {\r\n                    return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\r\n                }\r\n                const range = AbsoluteRowRange.fromRowRangeAst(ast, state.formulaAddress);\r\n                return SimpleRangeValue.onlyRange(range, this.dependencyGraph);\r\n            }\r\n            case AstNodeType.PARENTHESIS: {\r\n                return this.evaluateAst(ast.expression, state);\r\n            }\r\n            case AstNodeType.ARRAY: {\r\n                let totalWidth = undefined;\r\n                const ret = [];\r\n                for (const astRow of ast.args) {\r\n                    let rowHeight = undefined;\r\n                    const rowRet = [];\r\n                    for (const astIt of astRow) {\r\n                        const arr = coerceToRange(this.evaluateAst(astIt, state));\r\n                        const height = arr.height();\r\n                        if (rowHeight === undefined) {\r\n                            rowHeight = height;\r\n                            rowRet.push(...arr.data);\r\n                        }\r\n                        else if (rowHeight === height) {\r\n                            for (let i = 0; i < height; i++) {\r\n                                rowRet[i].push(...arr.data[i]);\r\n                            }\r\n                        }\r\n                        else {\r\n                            return new CellError(ErrorType.REF, ErrorMessage.SizeMismatch);\r\n                        }\r\n                    }\r\n                    const width = rowRet[0].length;\r\n                    if (totalWidth === undefined) {\r\n                        totalWidth = width;\r\n                        ret.push(...rowRet);\r\n                    }\r\n                    else if (totalWidth === width) {\r\n                        ret.push(...rowRet);\r\n                    }\r\n                    else {\r\n                        return new CellError(ErrorType.REF, ErrorMessage.SizeMismatch);\r\n                    }\r\n                }\r\n                return SimpleRangeValue.onlyValues(ret);\r\n            }\r\n            case AstNodeType.ERROR_WITH_RAW_INPUT:\r\n            case AstNodeType.ERROR: {\r\n                return ast.error;\r\n            }\r\n        }\r\n    }\r\n    rangeSpansOneSheet(ast) {\r\n        return ast.start.sheet === ast.end.sheet;\r\n    }\r\n    unaryRangeWrapper(op, arg, state) {\r\n        var _a;\r\n        if (arg instanceof SimpleRangeValue && !state.arraysFlag) {\r\n            arg = (_a = coerceRangeToScalar(arg, state)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\r\n        }\r\n        if (arg instanceof CellError) {\r\n            return arg;\r\n        }\r\n        if (arg instanceof SimpleRangeValue) {\r\n            const newRaw = arg.data.map((row) => row.map(op));\r\n            return SimpleRangeValue.onlyValues(newRaw);\r\n        }\r\n        return op(arg);\r\n    }\r\n    binaryRangeWrapper(op, arg1, arg2, state) {\r\n        var _a, _b;\r\n        if (arg1 instanceof SimpleRangeValue && !state.arraysFlag) {\r\n            arg1 = (_a = coerceRangeToScalar(arg1, state)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\r\n        }\r\n        if (arg1 instanceof CellError) {\r\n            return arg1;\r\n        }\r\n        if (arg2 instanceof SimpleRangeValue && !state.arraysFlag) {\r\n            arg2 = (_b = coerceRangeToScalar(arg2, state)) !== null && _b !== void 0 ? _b : new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\r\n        }\r\n        if (arg2 instanceof CellError) {\r\n            return arg2;\r\n        }\r\n        if (arg1 instanceof SimpleRangeValue || arg2 instanceof SimpleRangeValue) {\r\n            if (!(arg1 instanceof SimpleRangeValue)) {\r\n                if (arg2.isAdHoc()) {\r\n                    const raw2 = arg2.data;\r\n                    for (let i = 0; i < raw2.length; i++) {\r\n                        for (let j = 0; j < raw2[0].length; j++) {\r\n                            raw2[i][j] = op(arg1, raw2[i][j]);\r\n                        }\r\n                    }\r\n                    return SimpleRangeValue.onlyValues(raw2);\r\n                }\r\n                else {\r\n                    arg1 = SimpleRangeValue.fromScalar(arg1);\r\n                }\r\n            }\r\n            if (!(arg2 instanceof SimpleRangeValue)) {\r\n                if (arg1.isAdHoc()) {\r\n                    const raw1 = arg1.data;\r\n                    for (let i = 0; i < raw1.length; i++) {\r\n                        for (let j = 0; j < raw1[0].length; j++) {\r\n                            raw1[i][j] = op(raw1[i][j], arg2);\r\n                        }\r\n                    }\r\n                    return SimpleRangeValue.onlyValues(raw1);\r\n                }\r\n                else {\r\n                    arg2 = SimpleRangeValue.fromScalar(arg2);\r\n                }\r\n            }\r\n            if (arg1.width() === arg2.width() && arg1.height() === arg2.height()) {\r\n                if (arg1.isAdHoc()) {\r\n                    const raw1 = arg1.data;\r\n                    const raw2 = arg2.data;\r\n                    for (let i = 0; i < raw1.length; i++) {\r\n                        for (let j = 0; j < raw1[0].length; j++) {\r\n                            raw1[i][j] = op(raw1[i][j], raw2[i][j]);\r\n                        }\r\n                    }\r\n                    return SimpleRangeValue.onlyValues(raw1);\r\n                }\r\n                if (arg2.isAdHoc()) {\r\n                    const raw1 = arg1.data;\r\n                    const raw2 = arg2.data;\r\n                    for (let i = 0; i < raw1.length; i++) {\r\n                        for (let j = 0; j < raw1[0].length; j++) {\r\n                            raw2[i][j] = op(raw1[i][j], raw2[i][j]);\r\n                        }\r\n                    }\r\n                    return SimpleRangeValue.onlyValues(raw2);\r\n                }\r\n            }\r\n            const width = Math.max(arg1.width(), arg2.width());\r\n            const height = Math.max(arg1.height(), arg2.height());\r\n            const ret = Array(height);\r\n            for (let i = 0; i < height; i++) {\r\n                ret[i] = Array(width);\r\n            }\r\n            for (let i = 0; i < height; i++) {\r\n                const i1 = (arg1.height() !== 1) ? i : 0;\r\n                const i2 = (arg2.height() !== 1) ? i : 0;\r\n                for (let j = 0; j < width; j++) {\r\n                    const j1 = (arg1.width() !== 1) ? j : 0;\r\n                    const j2 = (arg2.width() !== 1) ? j : 0;\r\n                    if (i1 < arg1.height() && i2 < arg2.height() && j1 < arg1.width() && j2 < arg2.width()) {\r\n                        ret[i][j] = op(arg1.data[i1][j1], arg2.data[i2][j2]);\r\n                    }\r\n                    else {\r\n                        ret[i][j] = new CellError(ErrorType.NA);\r\n                    }\r\n                }\r\n            }\r\n            return SimpleRangeValue.onlyValues(ret);\r\n        }\r\n        return op(arg1, arg2);\r\n    }\r\n}\r\nfunction unaryErrorWrapper(op, arg) {\r\n    if (arg instanceof CellError) {\r\n        return arg;\r\n    }\r\n    else {\r\n        return op(arg);\r\n    }\r\n}\r\nfunction binaryErrorWrapper(op, arg1, arg2) {\r\n    if (arg1 instanceof CellError) {\r\n        return arg1;\r\n    }\r\n    else if (arg2 instanceof CellError) {\r\n        return arg2;\r\n    }\r\n    else {\r\n        return op(arg1, arg2);\r\n    }\r\n}\r\nfunction wrapperForRootVertex(val, vertex) {\r\n    if (val instanceof CellError && vertex !== undefined) {\r\n        return val.attachRootVertex(vertex);\r\n    }\r\n    return val;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { EmptyValue, getRawValue } from './InterpreterValue';\r\nexport var CriterionType;\r\n(function (CriterionType) {\r\n    CriterionType[\"GREATER_THAN\"] = \"GREATER_THAN\";\r\n    CriterionType[\"GREATER_THAN_OR_EQUAL\"] = \"GREATER_THAN_OR_EQUAL\";\r\n    CriterionType[\"LESS_THAN\"] = \"LESS_THAN\";\r\n    CriterionType[\"LESS_THAN_OR_EQUAL\"] = \"LESS_THAN_OR_EQUAL\";\r\n    CriterionType[\"NOT_EQUAL\"] = \"NOT_EQUAL\";\r\n    CriterionType[\"EQUAL\"] = \"EQUAL\";\r\n})(CriterionType || (CriterionType = {}));\r\nexport const buildCriterion = (operator, value) => ({ operator, value });\r\nexport class CriterionBuilder {\r\n    constructor(config) {\r\n        var _a, _b, _c, _d;\r\n        this.trueString = (_b = (_a = config.translationPackage.getMaybeFunctionTranslation('TRUE')) === null || _a === void 0 ? void 0 : _a.toLowerCase()) !== null && _b !== void 0 ? _b : 'true';\r\n        this.falseString = (_d = (_c = config.translationPackage.getMaybeFunctionTranslation('FALSE')) === null || _c === void 0 ? void 0 : _c.toLowerCase()) !== null && _d !== void 0 ? _d : 'false';\r\n    }\r\n    fromCellValue(raw, arithmeticHelper) {\r\n        if (typeof raw !== 'string' && typeof raw !== 'boolean' && typeof raw !== 'number') {\r\n            return undefined;\r\n        }\r\n        const criterion = this.parseCriterion(raw, arithmeticHelper);\r\n        if (criterion === undefined) {\r\n            return undefined;\r\n        }\r\n        return { raw, lambda: buildCriterionLambda(criterion, arithmeticHelper) };\r\n    }\r\n    parseCriterion(criterion, arithmeticHelper) {\r\n        if (typeof criterion === 'number' || typeof criterion === 'boolean') {\r\n            return buildCriterion(CriterionType.EQUAL, criterion);\r\n        }\r\n        else if (typeof criterion === 'string') {\r\n            const regexResult = ANY_CRITERION_REGEX.exec(criterion);\r\n            let criterionValue;\r\n            let criterionType;\r\n            if (regexResult) {\r\n                criterionType = StrToCriterionType(regexResult[1]);\r\n                criterionValue = regexResult[2];\r\n            }\r\n            else {\r\n                criterionType = CriterionType.EQUAL;\r\n                criterionValue = criterion;\r\n            }\r\n            const value = arithmeticHelper.coerceToMaybeNumber(criterionValue);\r\n            const boolvalue = criterionValue.toLowerCase() === this.trueString ? true : criterionValue.toLowerCase() === this.falseString ? false : undefined;\r\n            if (criterionType === undefined) {\r\n                return undefined;\r\n            }\r\n            if (criterionValue === '') {\r\n                return buildCriterion(criterionType, null);\r\n            }\r\n            else if (value === undefined) {\r\n                if (criterionType === CriterionType.EQUAL || criterionType === CriterionType.NOT_EQUAL) {\r\n                    return buildCriterion(criterionType, boolvalue !== null && boolvalue !== void 0 ? boolvalue : criterionValue);\r\n                }\r\n            }\r\n            else {\r\n                return buildCriterion(criterionType, getRawValue(value));\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nconst ANY_CRITERION_REGEX = /([<>=]+)(.*)/;\r\nfunction StrToCriterionType(str) {\r\n    switch (str) {\r\n        case '>':\r\n            return CriterionType.GREATER_THAN;\r\n        case '>=':\r\n            return CriterionType.GREATER_THAN_OR_EQUAL;\r\n        case '<':\r\n            return CriterionType.LESS_THAN;\r\n        case '<=':\r\n            return CriterionType.LESS_THAN_OR_EQUAL;\r\n        case '<>':\r\n            return CriterionType.NOT_EQUAL;\r\n        case '=':\r\n            return CriterionType.EQUAL;\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\nexport const buildCriterionLambda = (criterion, arithmeticHelper) => {\r\n    switch (criterion.operator) {\r\n        case CriterionType.GREATER_THAN: {\r\n            if (typeof criterion.value === 'number') {\r\n                return (cellValue) => (typeof cellValue === 'number' && arithmeticHelper.floatCmp(cellValue, criterion.value) > 0);\r\n            }\r\n            else {\r\n                return (_cellValue) => false;\r\n            }\r\n        }\r\n        case CriterionType.GREATER_THAN_OR_EQUAL: {\r\n            if (typeof criterion.value === 'number') {\r\n                return (cellValue) => (typeof cellValue === 'number' && arithmeticHelper.floatCmp(cellValue, criterion.value) >= 0);\r\n            }\r\n            else {\r\n                return (_cellValue) => false;\r\n            }\r\n        }\r\n        case CriterionType.LESS_THAN: {\r\n            if (typeof criterion.value === 'number') {\r\n                return (cellValue) => (typeof cellValue === 'number' && arithmeticHelper.floatCmp(cellValue, criterion.value) < 0);\r\n            }\r\n            else {\r\n                return (_cellValue) => false;\r\n            }\r\n        }\r\n        case CriterionType.LESS_THAN_OR_EQUAL: {\r\n            if (typeof criterion.value === 'number') {\r\n                return (cellValue) => (typeof cellValue === 'number' && arithmeticHelper.floatCmp(cellValue, criterion.value) <= 0);\r\n            }\r\n            else {\r\n                return (_cellValue) => false;\r\n            }\r\n        }\r\n        case CriterionType.EQUAL: {\r\n            if (typeof criterion.value === 'number') {\r\n                return (cellValue) => {\r\n                    if (typeof cellValue === 'number') {\r\n                        return arithmeticHelper.floatCmp(cellValue, criterion.value) === 0;\r\n                    }\r\n                    else if (typeof cellValue === 'string') {\r\n                        if (cellValue === '') {\r\n                            return false;\r\n                        }\r\n                        const val = arithmeticHelper.coerceToMaybeNumber(cellValue);\r\n                        if (val === undefined) {\r\n                            return false;\r\n                        }\r\n                        return arithmeticHelper.floatCmp(val, criterion.value) === 0;\r\n                    }\r\n                    else {\r\n                        return false;\r\n                    }\r\n                };\r\n            }\r\n            else if (typeof criterion.value === 'string') {\r\n                return arithmeticHelper.eqMatcherFunction(criterion.value);\r\n            }\r\n            else if (typeof criterion.value === 'boolean') {\r\n                return (cellValue) => (typeof cellValue === 'boolean' && cellValue === criterion.value);\r\n            }\r\n            else {\r\n                return (cellValue) => (cellValue === EmptyValue);\r\n            }\r\n        }\r\n        case CriterionType.NOT_EQUAL: {\r\n            if (typeof criterion.value === 'number') {\r\n                return (cellValue) => {\r\n                    if (typeof cellValue === 'number') {\r\n                        return arithmeticHelper.floatCmp(cellValue, criterion.value) !== 0;\r\n                    }\r\n                    else if (typeof cellValue === 'string') {\r\n                        if (cellValue === '') {\r\n                            return true;\r\n                        }\r\n                        const val = arithmeticHelper.coerceToMaybeNumber(cellValue);\r\n                        if (val === undefined) {\r\n                            return true;\r\n                        }\r\n                        return arithmeticHelper.floatCmp(val, criterion.value) !== 0;\r\n                    }\r\n                    else {\r\n                        return true;\r\n                    }\r\n                };\r\n            }\r\n            else if (typeof criterion.value === 'string') {\r\n                return arithmeticHelper.neqMatcherFunction(criterion.value);\r\n            }\r\n            else if (typeof criterion.value === 'boolean') {\r\n                return (cellValue) => (typeof cellValue !== 'boolean' || cellValue !== criterion.value);\r\n            }\r\n            else {\r\n                return (cellValue) => (cellValue !== EmptyValue);\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CombinedTransformer } from './dependencyTransformers/CombinedTransformer';\r\nimport { StatType } from './statistics';\r\nexport class LazilyTransformingAstService {\r\n    constructor(stats) {\r\n        this.stats = stats;\r\n        this.transformations = [];\r\n    }\r\n    version() {\r\n        return this.transformations.length;\r\n    }\r\n    addTransformation(transformation) {\r\n        if (this.combinedTransformer !== undefined) {\r\n            this.combinedTransformer.add(transformation);\r\n        }\r\n        else {\r\n            this.transformations.push(transformation);\r\n        }\r\n        return this.version();\r\n    }\r\n    beginCombinedMode(sheet) {\r\n        this.combinedTransformer = new CombinedTransformer(sheet);\r\n    }\r\n    commitCombinedMode() {\r\n        if (this.combinedTransformer === undefined) {\r\n            throw 'Combined mode wasn\\'t started';\r\n        }\r\n        this.transformations.push(this.combinedTransformer);\r\n        this.combinedTransformer = undefined;\r\n        return this.version();\r\n    }\r\n    applyTransformations(ast, address, version) {\r\n        this.stats.start(StatType.TRANSFORM_ASTS_POSTPONED);\r\n        for (let v = version; v < this.transformations.length; v++) {\r\n            const transformation = this.transformations[v];\r\n            if (transformation.isIrreversible()) {\r\n                this.undoRedo.storeDataForVersion(v, address, this.parser.computeHashFromAst(ast));\r\n                this.parser.rememberNewAst(ast);\r\n            }\r\n            const [newAst, newAddress] = transformation.transformSingleAst(ast, address);\r\n            ast = newAst;\r\n            address = newAddress;\r\n        }\r\n        const cachedAst = this.parser.rememberNewAst(ast);\r\n        this.stats.end(StatType.TRANSFORM_ASTS_POSTPONED);\r\n        return [cachedAst, address, this.transformations.length];\r\n    }\r\n    *getTransformationsFrom(version, filter) {\r\n        for (let v = version; v < this.transformations.length; v++) {\r\n            const transformation = this.transformations[v];\r\n            if (!filter || filter(transformation)) {\r\n                yield transformation;\r\n            }\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport class CombinedTransformer {\r\n    constructor(sheet) {\r\n        this.sheet = sheet;\r\n        this.transformations = [];\r\n    }\r\n    add(transformation) {\r\n        this.transformations.push(transformation);\r\n    }\r\n    performEagerTransformations(graph, parser) {\r\n        this.transformations.forEach(transformation => transformation.performEagerTransformations(graph, parser));\r\n    }\r\n    transformSingleAst(ast, address) {\r\n        let [transformedAst, transformedAddress] = [ast, address];\r\n        this.transformations.forEach(transformation => {\r\n            [transformedAst, transformedAddress] = transformation.transformSingleAst(transformedAst, transformedAddress);\r\n        });\r\n        return [transformedAst, transformedAddress];\r\n    }\r\n    isIrreversible() {\r\n        return true;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ColumnBinarySearch } from './ColumnBinarySearch';\r\nimport { ColumnIndex } from './ColumnIndex';\r\nexport function buildColumnSearchStrategy(dependencyGraph, config, statistics) {\r\n    if (config.useColumnIndex) {\r\n        return new ColumnIndex(dependencyGraph, config, statistics);\r\n    }\r\n    else {\r\n        return new ColumnBinarySearch(dependencyGraph);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AdvancedFind } from './AdvancedFind';\r\nexport class ColumnBinarySearch extends AdvancedFind {\r\n    constructor(dependencyGraph) {\r\n        super(dependencyGraph);\r\n        this.dependencyGraph = dependencyGraph;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars \r\n    add(value, address) {\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    remove(value, address) {\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    change(oldValue, newValue, address) {\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    applyChanges(contentChanges) {\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    addColumns(columnsSpan) {\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    removeColumns(columnsSpan) {\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    removeSheet(sheetId) {\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    moveValues(sourceRange, toRight, toBottom, toSheet) {\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    removeValues(range) {\r\n    }\r\n    /*\r\n     * WARNING: Finding lower/upper bounds in unordered ranges is not supported. When ordering === 'none', assumes matchExactly === true\r\n     */\r\n    find(searchKey, rangeValue, searchOptions) {\r\n        return this.basicFind(searchKey, rangeValue, 'row', searchOptions);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { getRawValue } from '../interpreter/InterpreterValue';\r\nimport { forceNormalizeString } from '../interpreter/ArithmeticHelper';\r\nimport { findLastOccurrenceInOrderedRange } from '../interpreter/binarySearch';\r\nexport class AdvancedFind {\r\n    constructor(dependencyGraph) {\r\n        this.dependencyGraph = dependencyGraph;\r\n    }\r\n    advancedFind(keyMatcher, rangeValue) {\r\n        let values;\r\n        const range = rangeValue.range;\r\n        if (range === undefined) {\r\n            values = rangeValue.valuesFromTopLeftCorner();\r\n        }\r\n        else {\r\n            values = this.dependencyGraph.computeListOfValuesInRange(range);\r\n        }\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (keyMatcher(getRawValue(values[i]))) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    /*\r\n     * WARNING: Finding lower/upper bounds in unordered ranges is not supported. When ordering === 'none', assumes matchExactly === true\r\n     */\r\n    basicFind(searchKey, rangeValue, searchCoordinate, { ordering, matchExactly }) {\r\n        const normalizedSearchKey = typeof searchKey === 'string' ? forceNormalizeString(searchKey) : searchKey;\r\n        const range = rangeValue.range;\r\n        if (range === undefined) {\r\n            return this.findNormalizedValue(normalizedSearchKey, rangeValue.valuesFromTopLeftCorner());\r\n        }\r\n        if (ordering === 'none') {\r\n            return this.findNormalizedValue(normalizedSearchKey, this.dependencyGraph.computeListOfValuesInRange(range));\r\n        }\r\n        return findLastOccurrenceInOrderedRange(normalizedSearchKey, range, { searchCoordinate, orderingDirection: ordering, matchExactly }, this.dependencyGraph);\r\n    }\r\n    findNormalizedValue(searchKey, searchArray) {\r\n        return searchArray\r\n            .map(getRawValue)\r\n            .map(val => typeof val === 'string' ? forceNormalizeString(val) : val)\r\n            .indexOf(searchKey);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, simpleCellAddress } from '../Cell';\r\nimport { EmptyValue, getRawValue } from './InterpreterValue';\r\nconst NOT_FOUND = -1;\r\n/*\r\n * Searches for the searchKey in a sorted 1-D range.\r\n *\r\n * Options:\r\n * - searchCoordinate - must be set to either 'row' or 'col' to indicate the dimension of the search,\r\n * - orderingDirection - must be set to either 'asc' or 'desc' to indicate the ordering direction for the search range,\r\n * - matchExactly - when set to false, searches for the lower/upper bound.\r\n *\r\n * Semantics:\r\n * - If orderingDirection === 'asc', searches for the lower bound for the searchKey value (unless marchExactly === true).\r\n * - If orderingDirection === 'desc', searches for the upper bound for the searchKey value (unless marchExactly === true).\r\n * - If the search range contains duplicates, returns the last matching value.\r\n * - If no value in the range satisfies the above, returns -1.\r\n *\r\n * Note: this function does not normalize input strings.\r\n */\r\nexport function findLastOccurrenceInOrderedRange(searchKey, range, { searchCoordinate, orderingDirection, matchExactly }, dependencyGraph) {\r\n    const start = range.start[searchCoordinate];\r\n    const end = searchCoordinate === 'col' ? range.effectiveEndColumn(dependencyGraph) : range.effectiveEndRow(dependencyGraph);\r\n    const getValueFromIndexFn = searchCoordinate === 'col'\r\n        ? (index) => getRawValue(dependencyGraph.getCellValue(simpleCellAddress(range.sheet, index, range.start.row)))\r\n        : (index) => getRawValue(dependencyGraph.getCellValue(simpleCellAddress(range.sheet, range.start.col, index)));\r\n    const compareFn = orderingDirection === 'asc'\r\n        ? (left, right) => compare(left, right)\r\n        : (left, right) => -compare(left, right);\r\n    const foundIndex = findLastMatchingIndex(index => compareFn(searchKey, getValueFromIndexFn(index)) >= 0, start, end);\r\n    const foundValue = getValueFromIndexFn(foundIndex);\r\n    if (foundIndex === NOT_FOUND || typeof foundValue !== typeof searchKey) {\r\n        return NOT_FOUND;\r\n    }\r\n    if (matchExactly && foundValue !== searchKey) {\r\n        return NOT_FOUND;\r\n    }\r\n    return foundIndex - start;\r\n}\r\n/*\r\n * Searches for the searchKey in a sorted array.\r\n * Param orderingDirection must be set to either 'asc' or 'desc' to indicate the ordering direction of the array.\r\n *\r\n * Semantics:\r\n * - If orderingDirection === 'asc', searches for the lower bound for the searchKey value.\r\n * - If orderingDirection === 'desc', searches for the upper bound for the searchKey value.\r\n * - If the array contains duplicates, returns the last matching value.\r\n * - If no value in the range satisfies the above, returns -1.\r\n */\r\nexport function findLastOccurrenceInOrderedArray(searchKey, array, orderingDirection = 'asc') {\r\n    const predicate = orderingDirection === 'asc'\r\n        ? (index) => compare(searchKey, array[index]) >= 0\r\n        : (index) => -compare(searchKey, array[index]) >= 0;\r\n    return findLastMatchingIndex(predicate, 0, array.length - 1);\r\n}\r\n/*\r\n * Returns:\r\n *   - the last element in the range for which predicate === true or,\r\n *   - value -1 if predicate === false for all elements.\r\n * Assumption: All elements for which predicate === true are before the elements for which predicate === false.\r\n */\r\nexport function findLastMatchingIndex(predicate, startRange, endRange) {\r\n    let start = startRange;\r\n    let end = endRange;\r\n    while (start < end) {\r\n        const pivot = Math.ceil((start + end) / 2);\r\n        if (predicate(pivot)) {\r\n            start = pivot;\r\n        }\r\n        else {\r\n            end = pivot - 1;\r\n        }\r\n    }\r\n    if (start === end && predicate(start)) {\r\n        return start;\r\n    }\r\n    return NOT_FOUND;\r\n}\r\n/*\r\n * numbers < strings < false < true\r\n */\r\nexport function compare(left, right) {\r\n    if (typeof left === typeof right) {\r\n        if (left === EmptyValue) {\r\n            return 0;\r\n        }\r\n        return (left < right ? -1 : (left > right ? 1 : 0));\r\n    }\r\n    if (left === EmptyValue) {\r\n        return -1;\r\n    }\r\n    if (right === EmptyValue) {\r\n        return 1;\r\n    }\r\n    if (right instanceof CellError) {\r\n        return -1;\r\n    }\r\n    if (typeof left === 'number' && typeof right === 'string') {\r\n        return -1;\r\n    }\r\n    if (typeof left === 'number' && typeof right === 'boolean') {\r\n        return -1;\r\n    }\r\n    if (typeof left === 'string' && typeof right === 'number') {\r\n        return 1;\r\n    }\r\n    if (typeof left === 'string' && typeof right === 'boolean') {\r\n        return -1;\r\n    }\r\n    return 1;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, movedSimpleCellAddress } from '../Cell';\r\nimport { AddRowsTransformer } from '../dependencyTransformers/AddRowsTransformer';\r\nimport { RemoveRowsTransformer } from '../dependencyTransformers/RemoveRowsTransformer';\r\nimport { forceNormalizeString } from '../interpreter/ArithmeticHelper';\r\nimport { EmptyValue, getRawValue } from '../interpreter/InterpreterValue';\r\nimport { SimpleRangeValue } from '../interpreter/SimpleRangeValue';\r\nimport { StatType } from '../statistics';\r\nimport { ColumnBinarySearch } from './ColumnBinarySearch';\r\nexport class ColumnIndex {\r\n    constructor(dependencyGraph, config, stats) {\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.config = config;\r\n        this.stats = stats;\r\n        this.index = new Map();\r\n        this.transformingService = this.dependencyGraph.lazilyTransformingAstService;\r\n        this.binarySearchStrategy = new ColumnBinarySearch(dependencyGraph);\r\n    }\r\n    add(value, address) {\r\n        if (value === EmptyValue || value instanceof CellError) {\r\n            return;\r\n        }\r\n        else if (value instanceof SimpleRangeValue) {\r\n            for (const [arrayValue, cellAddress] of value.entriesFromTopLeftCorner(address)) {\r\n                this.addSingleCellValue(getRawValue(arrayValue), cellAddress);\r\n            }\r\n        }\r\n        else {\r\n            this.addSingleCellValue(value, address);\r\n        }\r\n    }\r\n    remove(value, address) {\r\n        if (value === undefined) {\r\n            return;\r\n        }\r\n        if (value instanceof SimpleRangeValue) {\r\n            for (const [arrayValue, cellAddress] of value.entriesFromTopLeftCorner(address)) {\r\n                this.removeSingleValue(getRawValue(arrayValue), cellAddress);\r\n            }\r\n        }\r\n        else {\r\n            this.removeSingleValue(value, address);\r\n        }\r\n    }\r\n    change(oldValue, newValue, address) {\r\n        if (oldValue === newValue) {\r\n            return;\r\n        }\r\n        this.remove(oldValue, address);\r\n        this.add(newValue, address);\r\n    }\r\n    applyChanges(contentChanges) {\r\n        for (const change of contentChanges) {\r\n            if (change.oldValue !== undefined) {\r\n                this.change(getRawValue(change.oldValue), getRawValue(change.value), change.address);\r\n            }\r\n        }\r\n    }\r\n    moveValues(sourceRange, toRight, toBottom, toSheet) {\r\n        for (const [value, address] of sourceRange) {\r\n            const targetAddress = movedSimpleCellAddress(address, toSheet, toRight, toBottom);\r\n            this.remove(value, address);\r\n            this.add(value, targetAddress);\r\n        }\r\n    }\r\n    removeValues(range) {\r\n        for (const [value, address] of range) {\r\n            this.remove(value, address);\r\n        }\r\n    }\r\n    /*\r\n     * WARNING: Finding lower/upper bounds in unordered ranges is not supported. When ordering === 'none', assumes matchExactly === true\r\n     */\r\n    find(searchKey, rangeValue, { ordering, matchExactly }) {\r\n        const handlingDuplicates = matchExactly === true ? 'findFirst' : 'findLast';\r\n        const resultUsingColumnIndex = this.findUsingColumnIndex(searchKey, rangeValue, handlingDuplicates);\r\n        return resultUsingColumnIndex !== undefined ? resultUsingColumnIndex : this.binarySearchStrategy.find(searchKey, rangeValue, { ordering, matchExactly });\r\n    }\r\n    findUsingColumnIndex(key, rangeValue, handlingDuplicates) {\r\n        const range = rangeValue.range;\r\n        if (range === undefined) {\r\n            return undefined;\r\n        }\r\n        this.ensureRecentData(range.sheet, range.start.col, key);\r\n        const columnMap = this.getColumnMap(range.sheet, range.start.col);\r\n        if (!columnMap) {\r\n            return -1;\r\n        }\r\n        const normalizedKey = typeof key === 'string' ? forceNormalizeString(key) : key;\r\n        const valueIndexForTheKey = columnMap.get(normalizedKey);\r\n        if (!valueIndexForTheKey || !valueIndexForTheKey.index || valueIndexForTheKey.index.length === 0) {\r\n            return undefined;\r\n        }\r\n        const rowNumber = ColumnIndex.findRowBelongingToRange(valueIndexForTheKey, range, handlingDuplicates);\r\n        return rowNumber !== undefined ? rowNumber - range.start.row : undefined;\r\n    }\r\n    static findRowBelongingToRange(valueIndex, range, handlingDuplicates) {\r\n        const start = range.start.row;\r\n        const end = range.end.row;\r\n        const positionInIndex = handlingDuplicates === 'findFirst'\r\n            ? findInOrderedArray(start, valueIndex.index, 'upperBound')\r\n            : findInOrderedArray(end, valueIndex.index, 'lowerBound');\r\n        if (positionInIndex === -1) {\r\n            return undefined;\r\n        }\r\n        const rowNumber = valueIndex.index[positionInIndex];\r\n        const isRowNumberBelongingToRange = rowNumber >= start && rowNumber <= end;\r\n        return isRowNumberBelongingToRange ? rowNumber : undefined;\r\n    }\r\n    advancedFind(keyMatcher, range) {\r\n        return this.binarySearchStrategy.advancedFind(keyMatcher, range);\r\n    }\r\n    addColumns(columnsSpan) {\r\n        const sheetIndex = this.index.get(columnsSpan.sheet);\r\n        if (!sheetIndex) {\r\n            return;\r\n        }\r\n        sheetIndex.splice(columnsSpan.columnStart, 0, ...Array(columnsSpan.numberOfColumns));\r\n    }\r\n    removeColumns(columnsSpan) {\r\n        const sheetIndex = this.index.get(columnsSpan.sheet);\r\n        if (!sheetIndex) {\r\n            return;\r\n        }\r\n        sheetIndex.splice(columnsSpan.columnStart, columnsSpan.numberOfColumns);\r\n    }\r\n    removeSheet(sheetId) {\r\n        this.index.delete(sheetId);\r\n    }\r\n    getColumnMap(sheet, col) {\r\n        if (!this.index.has(sheet)) {\r\n            this.index.set(sheet, []);\r\n        }\r\n        const sheetMap = this.index.get(sheet); // eslint-disable-line @typescript-eslint/no-non-null-assertion\r\n        let columnMap = sheetMap[col];\r\n        if (!columnMap) {\r\n            columnMap = new Map();\r\n            sheetMap[col] = columnMap;\r\n        }\r\n        return columnMap;\r\n    }\r\n    getValueIndex(sheet, col, value) {\r\n        const columnMap = this.getColumnMap(sheet, col);\r\n        let index = this.getColumnMap(sheet, col).get(value);\r\n        if (!index) {\r\n            index = {\r\n                version: this.transformingService.version(),\r\n                index: [],\r\n            };\r\n            columnMap.set(value, index);\r\n        }\r\n        return index;\r\n    }\r\n    ensureRecentData(sheet, col, value) {\r\n        const valueIndex = this.getValueIndex(sheet, col, value);\r\n        const actualVersion = this.transformingService.version();\r\n        if (valueIndex.version === actualVersion) {\r\n            return;\r\n        }\r\n        const relevantTransformations = this.transformingService.getTransformationsFrom(valueIndex.version, (transformation) => {\r\n            return transformation.sheet === sheet && (transformation instanceof AddRowsTransformer || transformation instanceof RemoveRowsTransformer);\r\n        });\r\n        for (const transformation of relevantTransformations) {\r\n            if (transformation instanceof AddRowsTransformer) {\r\n                this.addRows(col, transformation.rowsSpan, value);\r\n            }\r\n            else if (transformation instanceof RemoveRowsTransformer) {\r\n                this.removeRows(col, transformation.rowsSpan, value);\r\n            }\r\n        }\r\n        valueIndex.version = actualVersion;\r\n    }\r\n    addSingleCellValue(value, address) {\r\n        this.stats.measure(StatType.BUILD_COLUMN_INDEX, () => {\r\n            this.ensureRecentData(address.sheet, address.col, value);\r\n            if (typeof value === 'string') {\r\n                value = forceNormalizeString(value);\r\n            }\r\n            const valueIndex = this.getValueIndex(address.sheet, address.col, value);\r\n            ColumnIndex.addValue(valueIndex, address.row);\r\n        });\r\n    }\r\n    removeSingleValue(value, address) {\r\n        this.stats.measure(StatType.BUILD_COLUMN_INDEX, () => {\r\n            this.ensureRecentData(address.sheet, address.col, value);\r\n            const columnMap = this.getColumnMap(address.sheet, address.col);\r\n            if (typeof value === 'string') {\r\n                value = forceNormalizeString(value);\r\n            }\r\n            const valueIndex = columnMap.get(value);\r\n            if (!valueIndex) {\r\n                return;\r\n            }\r\n            const positionInIndex = findInOrderedArray(address.row, valueIndex.index);\r\n            if (positionInIndex > -1) {\r\n                valueIndex.index.splice(positionInIndex, 1);\r\n            }\r\n            if (valueIndex.index.length === 0) {\r\n                columnMap.delete(value);\r\n            }\r\n            if (columnMap.size === 0) {\r\n                delete this.index.get(address.sheet)[address.col]; // eslint-disable-line @typescript-eslint/no-non-null-assertion\r\n            }\r\n        });\r\n    }\r\n    addRows(col, rowsSpan, value) {\r\n        const valueIndex = this.getValueIndex(rowsSpan.sheet, col, value);\r\n        ColumnIndex.shiftRows(valueIndex, rowsSpan.rowStart, rowsSpan.numberOfRows);\r\n    }\r\n    removeRows(col, rowsSpan, value) {\r\n        const valueIndex = this.getValueIndex(rowsSpan.sheet, col, value);\r\n        ColumnIndex.removeRowsFromValues(valueIndex, rowsSpan);\r\n        ColumnIndex.shiftRows(valueIndex, rowsSpan.rowEnd + 1, -rowsSpan.numberOfRows);\r\n    }\r\n    static addValue(valueIndex, rowNumber) {\r\n        const rowIndex = findInOrderedArray(rowNumber, valueIndex.index, 'lowerBound');\r\n        const isRowNumberAlreadyInIndex = valueIndex.index[rowIndex] === rowNumber;\r\n        if (!isRowNumberAlreadyInIndex) {\r\n            valueIndex.index.splice(rowIndex + 1, 0, rowNumber);\r\n        }\r\n    }\r\n    static removeRowsFromValues(valueIndex, rowsSpan) {\r\n        const start = findInOrderedArray(rowsSpan.rowStart, valueIndex.index, 'upperBound');\r\n        const end = findInOrderedArray(rowsSpan.rowEnd, valueIndex.index, 'lowerBound');\r\n        const isFoundSpanValid = start > -1 && end > -1 && start <= end && valueIndex.index[start] <= rowsSpan.rowEnd;\r\n        if (isFoundSpanValid) {\r\n            valueIndex.index.splice(start, end - start + 1);\r\n        }\r\n    }\r\n    static shiftRows(valueIndex, afterRow, numberOfRows) {\r\n        const positionInIndex = findInOrderedArray(afterRow, valueIndex.index, 'upperBound');\r\n        if (positionInIndex === -1) {\r\n            return;\r\n        }\r\n        for (let i = positionInIndex; i < valueIndex.index.length; ++i) {\r\n            valueIndex.index[i] += numberOfRows;\r\n        }\r\n    }\r\n}\r\n/*\r\n * Returns:\r\n * - index of the key, if the key exists in the array,\r\n * - index of the lower/upper bound (depending on handlingMisses parameter) otherwise.\r\n * Assumption: The array is ordered ascending and contains no repetitions.\r\n */\r\nexport function findInOrderedArray(key, values, handlingMisses = 'upperBound') {\r\n    let start = 0;\r\n    let end = values.length - 1;\r\n    while (start <= end) {\r\n        const center = Math.floor((start + end) / 2);\r\n        if (key > values[center]) {\r\n            start = center + 1;\r\n        }\r\n        else if (key < values[center]) {\r\n            end = center - 1;\r\n        }\r\n        else {\r\n            return center;\r\n        }\r\n    }\r\n    const foundIndex = handlingMisses === 'lowerBound' ? end : start;\r\n    const isIndexInRange = foundIndex >= 0 && foundIndex <= values.length;\r\n    return isIndexInRange ? foundIndex : -1;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport class NumberLiteralHelper {\r\n    constructor(config) {\r\n        this.config = config;\r\n        const thousandSeparator = this.config.thousandSeparator === '.' ? `\\\\${this.config.thousandSeparator}` : this.config.thousandSeparator;\r\n        const decimalSeparator = this.config.decimalSeparator === '.' ? `\\\\${this.config.decimalSeparator}` : this.config.decimalSeparator;\r\n        this.numberPattern = new RegExp(`^([+-]?((${decimalSeparator}\\\\d+)|(\\\\d+(${thousandSeparator}\\\\d{3,})*(${decimalSeparator}\\\\d*)?)))(e[+-]?\\\\d+)?$`);\r\n        this.allThousandSeparatorsRegex = new RegExp(`${thousandSeparator}`, 'g');\r\n    }\r\n    numericStringToMaybeNumber(input) {\r\n        if (this.numberPattern.test(input)) {\r\n            const num = this.numericStringToNumber(input);\r\n            if (isNaN(num)) {\r\n                return undefined;\r\n            }\r\n            return num;\r\n        }\r\n        return undefined;\r\n    }\r\n    numericStringToNumber(input) {\r\n        const normalized = input\r\n            .replace(this.allThousandSeparatorsRegex, '')\r\n            .replace(this.config.decimalSeparator, '.');\r\n        return Number(normalized);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { simpleCellAddress } from './Cell';\r\nimport { ArrayVertex, FormulaCellVertex, ParsingErrorVertex } from './DependencyGraph';\r\nimport { buildLexerConfig, Unparser } from './parser';\r\nexport class Serialization {\r\n    constructor(dependencyGraph, unparser, exporter) {\r\n        this.dependencyGraph = dependencyGraph;\r\n        this.unparser = unparser;\r\n        this.exporter = exporter;\r\n    }\r\n    getCellFormula(address, targetAddress) {\r\n        const formulaVertex = this.dependencyGraph.getCell(address);\r\n        if (formulaVertex instanceof FormulaCellVertex) {\r\n            const formula = formulaVertex.getFormula(this.dependencyGraph.lazilyTransformingAstService);\r\n            targetAddress = targetAddress !== null && targetAddress !== void 0 ? targetAddress : address;\r\n            return this.unparser.unparse(formula, targetAddress);\r\n        }\r\n        else if (formulaVertex instanceof ArrayVertex) {\r\n            const arrayVertexAddress = formulaVertex.getAddress(this.dependencyGraph.lazilyTransformingAstService);\r\n            if (arrayVertexAddress.row !== address.row || arrayVertexAddress.col !== address.col || arrayVertexAddress.sheet !== address.sheet) {\r\n                return undefined;\r\n            }\r\n            targetAddress = targetAddress !== null && targetAddress !== void 0 ? targetAddress : address;\r\n            const formula = formulaVertex.getFormula(this.dependencyGraph.lazilyTransformingAstService);\r\n            if (formula !== undefined) {\r\n                return this.unparser.unparse(formula, targetAddress);\r\n            }\r\n        }\r\n        else if (formulaVertex instanceof ParsingErrorVertex) {\r\n            return formulaVertex.getFormula();\r\n        }\r\n        return undefined;\r\n    }\r\n    getCellSerialized(address, targetAddress) {\r\n        var _a;\r\n        return (_a = this.getCellFormula(address, targetAddress)) !== null && _a !== void 0 ? _a : this.getRawValue(address);\r\n    }\r\n    getCellValue(address) {\r\n        return this.exporter.exportValue(this.dependencyGraph.getScalarValue(address));\r\n    }\r\n    getRawValue(address) {\r\n        return this.dependencyGraph.getRawValue(address);\r\n    }\r\n    getSheetValues(sheet) {\r\n        return this.genericSheetGetter(sheet, (arg) => this.getCellValue(arg));\r\n    }\r\n    getSheetFormulas(sheet) {\r\n        return this.genericSheetGetter(sheet, (arg) => this.getCellFormula(arg));\r\n    }\r\n    genericSheetGetter(sheet, getter) {\r\n        const sheetHeight = this.dependencyGraph.getSheetHeight(sheet);\r\n        const sheetWidth = this.dependencyGraph.getSheetWidth(sheet);\r\n        const arr = new Array(sheetHeight);\r\n        for (let i = 0; i < sheetHeight; i++) {\r\n            arr[i] = new Array(sheetWidth);\r\n            for (let j = 0; j < sheetWidth; j++) {\r\n                const address = simpleCellAddress(sheet, j, i);\r\n                arr[i][j] = getter(address);\r\n            }\r\n            for (let j = sheetWidth - 1; j >= 0; j--) {\r\n                if (arr[i][j] === null || arr[i][j] === undefined) {\r\n                    arr[i].pop();\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        for (let i = sheetHeight - 1; i >= 0; i--) {\r\n            if (arr[i].length === 0) {\r\n                arr.pop();\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n    genericAllSheetsGetter(sheetGetter) {\r\n        const result = {};\r\n        for (const sheetName of this.dependencyGraph.sheetMapping.displayNames()) {\r\n            const sheetId = this.dependencyGraph.sheetMapping.fetch(sheetName);\r\n            result[sheetName] = sheetGetter(sheetId);\r\n        }\r\n        return result;\r\n    }\r\n    getSheetSerialized(sheet) {\r\n        return this.genericSheetGetter(sheet, (arg) => this.getCellSerialized(arg));\r\n    }\r\n    getAllSheetsValues() {\r\n        return this.genericAllSheetsGetter((arg) => this.getSheetValues(arg));\r\n    }\r\n    getAllSheetsFormulas() {\r\n        return this.genericAllSheetsGetter((arg) => this.getSheetFormulas(arg));\r\n    }\r\n    getAllSheetsSerialized() {\r\n        return this.genericAllSheetsGetter((arg) => this.getSheetSerialized(arg));\r\n    }\r\n    getAllNamedExpressionsSerialized() {\r\n        const idMap = [];\r\n        let id = 0;\r\n        for (const sheetName of this.dependencyGraph.sheetMapping.displayNames()) {\r\n            const sheetId = this.dependencyGraph.sheetMapping.fetch(sheetName);\r\n            idMap[sheetId] = id;\r\n            id++;\r\n        }\r\n        return this.dependencyGraph.namedExpressions.getAllNamedExpressions().map((entry) => {\r\n            return {\r\n                name: entry.expression.displayName,\r\n                expression: this.getCellSerialized(entry.expression.address),\r\n                scope: entry.scope !== undefined ? idMap[entry.scope] : undefined,\r\n                options: entry.expression.options\r\n            };\r\n        });\r\n    }\r\n    withNewConfig(newConfig, namedExpressions) {\r\n        const newUnparser = new Unparser(newConfig, buildLexerConfig(newConfig), this.dependencyGraph.sheetMapping.fetchDisplayName, namedExpressions);\r\n        return new Serialization(this.dependencyGraph, newUnparser, this.exporter);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport function objectDestroy(object) {\r\n    for (const [key, value] of Object.entries(object)) {\r\n        if (value instanceof Function) {\r\n            object[key] = postMortem(value);\r\n        }\r\n        else {\r\n            delete object[key];\r\n        }\r\n    }\r\n}\r\nfunction postMortem(method) {\r\n    return () => {\r\n        throw new Error(`The \"${method}\" method cannot be called because this HyperFormula instance has been destroyed`);\r\n    };\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { TinyEmitter } from 'tiny-emitter';\r\nexport var Events;\r\n(function (Events) {\r\n    Events[\"SheetAdded\"] = \"sheetAdded\";\r\n    Events[\"SheetRemoved\"] = \"sheetRemoved\";\r\n    Events[\"SheetRenamed\"] = \"sheetRenamed\";\r\n    Events[\"NamedExpressionAdded\"] = \"namedExpressionAdded\";\r\n    Events[\"NamedExpressionRemoved\"] = \"namedExpressionRemoved\";\r\n    Events[\"ValuesUpdated\"] = \"valuesUpdated\";\r\n    Events[\"EvaluationSuspended\"] = \"evaluationSuspended\";\r\n    Events[\"EvaluationResumed\"] = \"evaluationResumed\";\r\n})(Events || (Events = {}));\r\nexport class Emitter extends TinyEmitter {\r\n    emit(event, ...args) {\r\n        super.emit(event, ...args);\r\n        return this;\r\n    }\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__169__;","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nconst dictionary = {\r\n    errors: {\r\n        CYCLE: '#CYCLE!',\r\n        DIV_BY_ZERO: '#DIV/0!',\r\n        ERROR: '#ERROR!',\r\n        NA: '#N/A',\r\n        NAME: '#NAME?',\r\n        NUM: '#NUM!',\r\n        REF: '#REF!',\r\n        SPILL: '#SPILL!',\r\n        VALUE: '#VALUE!',\r\n    },\r\n    functions: {\r\n        FILTER: 'FILTER',\r\n        'ARRAY_CONSTRAIN': 'ARRAY_CONSTRAIN',\r\n        ARRAYFORMULA: 'ARRAYFORMULA',\r\n        ABS: 'ABS',\r\n        ACOS: 'ACOS',\r\n        ACOSH: 'ACOSH',\r\n        ACOT: 'ACOT',\r\n        ACOTH: 'ACOTH',\r\n        AND: 'AND',\r\n        ARABIC: 'ARABIC',\r\n        ASIN: 'ASIN',\r\n        ASINH: 'ASINH',\r\n        ATAN2: 'ATAN2',\r\n        ATAN: 'ATAN',\r\n        ATANH: 'ATANH',\r\n        AVERAGE: 'AVERAGE',\r\n        AVERAGEA: 'AVERAGEA',\r\n        AVERAGEIF: 'AVERAGEIF',\r\n        BASE: 'BASE',\r\n        BIN2DEC: 'BIN2DEC',\r\n        BIN2HEX: 'BIN2HEX',\r\n        BIN2OCT: 'BIN2OCT',\r\n        BITAND: 'BITAND',\r\n        BITLSHIFT: 'BITLSHIFT',\r\n        BITOR: 'BITOR',\r\n        BITRSHIFT: 'BITRSHIFT',\r\n        BITXOR: 'BITXOR',\r\n        CEILING: 'CEILING',\r\n        CHAR: 'CHAR',\r\n        CHOOSE: 'CHOOSE',\r\n        CLEAN: 'CLEAN',\r\n        CODE: 'CODE',\r\n        COLUMN: 'COLUMN',\r\n        COLUMNS: 'COLUMNS',\r\n        CONCATENATE: 'CONCATENATE',\r\n        CORREL: 'CORREL',\r\n        COS: 'COS',\r\n        COSH: 'COSH',\r\n        COT: 'COT',\r\n        COTH: 'COTH',\r\n        COUNT: 'COUNT',\r\n        COUNTA: 'COUNTA',\r\n        COUNTBLANK: 'COUNTBLANK',\r\n        COUNTIF: 'COUNTIF',\r\n        COUNTIFS: 'COUNTIFS',\r\n        COUNTUNIQUE: 'COUNTUNIQUE',\r\n        CSC: 'CSC',\r\n        CSCH: 'CSCH',\r\n        CUMIPMT: 'CUMIPMT',\r\n        CUMPRINC: 'CUMPRINC',\r\n        DATE: 'DATE',\r\n        DATEDIF: 'DATEDIF',\r\n        DATEVALUE: 'DATEVALUE',\r\n        DAY: 'DAY',\r\n        DAYS360: 'DAYS360',\r\n        DAYS: 'DAYS',\r\n        DB: 'DB',\r\n        DDB: 'DDB',\r\n        DEC2BIN: 'DEC2BIN',\r\n        DEC2HEX: 'DEC2HEX',\r\n        DEC2OCT: 'DEC2OCT',\r\n        DECIMAL: 'DECIMAL',\r\n        DEGREES: 'DEGREES',\r\n        DELTA: 'DELTA',\r\n        DOLLARDE: 'DOLLARDE',\r\n        DOLLARFR: 'DOLLARFR',\r\n        EDATE: 'EDATE',\r\n        EFFECT: 'EFFECT',\r\n        EOMONTH: 'EOMONTH',\r\n        ERF: 'ERF',\r\n        ERFC: 'ERFC',\r\n        EVEN: 'EVEN',\r\n        EXACT: 'EXACT',\r\n        EXP: 'EXP',\r\n        FALSE: 'FALSE',\r\n        FIND: 'FIND',\r\n        FORMULATEXT: 'FORMULATEXT',\r\n        FV: 'FV',\r\n        FVSCHEDULE: 'FVSCHEDULE',\r\n        HEX2BIN: 'HEX2BIN',\r\n        HEX2DEC: 'HEX2DEC',\r\n        HEX2OCT: 'HEX2OCT',\r\n        HLOOKUP: 'HLOOKUP',\r\n        HOUR: 'HOUR',\r\n        IF: 'IF',\r\n        IFERROR: 'IFERROR',\r\n        IFNA: 'IFNA',\r\n        INDEX: 'INDEX',\r\n        INT: 'INT',\r\n        INTERVAL: 'INTERVAL',\r\n        IPMT: 'IPMT',\r\n        ISBINARY: 'ISBINARY',\r\n        ISBLANK: 'ISBLANK',\r\n        ISERR: 'ISERR',\r\n        ISERROR: 'ISERROR',\r\n        ISEVEN: 'ISEVEN',\r\n        ISFORMULA: 'ISFORMULA',\r\n        ISLOGICAL: 'ISLOGICAL',\r\n        ISNA: 'ISNA',\r\n        ISNONTEXT: 'ISNONTEXT',\r\n        ISNUMBER: 'ISNUMBER',\r\n        ISODD: 'ISODD',\r\n        ISOWEEKNUM: 'ISOWEEKNUM',\r\n        ISPMT: 'ISPMT',\r\n        ISREF: 'ISREF',\r\n        ISTEXT: 'ISTEXT',\r\n        LEFT: 'LEFT',\r\n        LEN: 'LEN',\r\n        LN: 'LN',\r\n        LOG10: 'LOG10',\r\n        LOG: 'LOG',\r\n        LOWER: 'LOWER',\r\n        MATCH: 'MATCH',\r\n        MAX: 'MAX',\r\n        MAXA: 'MAXA',\r\n        MAXIFS: 'MAXIFS',\r\n        MAXPOOL: 'MAXPOOL',\r\n        MEDIAN: 'MEDIAN',\r\n        MEDIANPOOL: 'MEDIANPOOL',\r\n        MID: 'MID',\r\n        MIN: 'MIN',\r\n        MINA: 'MINA',\r\n        MINIFS: 'MINIFS',\r\n        MINUTE: 'MINUTE',\r\n        MIRR: 'MIRR',\r\n        MMULT: 'MMULT',\r\n        MOD: 'MOD',\r\n        MONTH: 'MONTH',\r\n        NA: 'NA',\r\n        NETWORKDAYS: 'NETWORKDAYS',\r\n        'NETWORKDAYS.INTL': 'NETWORKDAYS.INTL',\r\n        NOMINAL: 'NOMINAL',\r\n        NOT: 'NOT',\r\n        NOW: 'NOW',\r\n        NPER: 'NPER',\r\n        NPV: 'NPV',\r\n        OCT2BIN: 'OCT2BIN',\r\n        OCT2DEC: 'OCT2DEC',\r\n        OCT2HEX: 'OCT2HEX',\r\n        ODD: 'ODD',\r\n        OFFSET: 'OFFSET',\r\n        OR: 'OR',\r\n        PI: 'PI',\r\n        PMT: 'PMT',\r\n        PDURATION: 'PDURATION',\r\n        PRODUCT: 'PRODUCT',\r\n        POWER: 'POWER',\r\n        PPMT: 'PPMT',\r\n        PROPER: 'PROPER',\r\n        PV: 'PV',\r\n        RADIANS: 'RADIANS',\r\n        RAND: 'RAND',\r\n        RATE: 'RATE',\r\n        REPLACE: 'REPLACE',\r\n        REPT: 'REPT',\r\n        RIGHT: 'RIGHT',\r\n        ROMAN: 'ROMAN',\r\n        ROUND: 'ROUND',\r\n        ROUNDDOWN: 'ROUNDDOWN',\r\n        ROUNDUP: 'ROUNDUP',\r\n        ROW: 'ROW',\r\n        ROWS: 'ROWS',\r\n        RRI: 'RRI',\r\n        SEARCH: 'SEARCH',\r\n        SEC: 'SEC',\r\n        SECH: 'SECH',\r\n        SECOND: 'SECOND',\r\n        SHEET: 'SHEET',\r\n        SHEETS: 'SHEETS',\r\n        SIN: 'SIN',\r\n        SINH: 'SINH',\r\n        SLN: 'SLN',\r\n        SPLIT: 'SPLIT',\r\n        SQRT: 'SQRT',\r\n        STDEVA: 'STDEVA',\r\n        'STDEV.P': 'STDEV.P',\r\n        STDEVPA: 'STDEVPA',\r\n        'STDEV.S': 'STDEV.S',\r\n        SUBSTITUTE: 'SUBSTITUTE',\r\n        SUBTOTAL: 'SUBTOTAL',\r\n        SUM: 'SUM',\r\n        SUMIF: 'SUMIF',\r\n        SUMIFS: 'SUMIFS',\r\n        SUMPRODUCT: 'SUMPRODUCT',\r\n        SUMSQ: 'SUMSQ',\r\n        SWITCH: 'SWITCH',\r\n        SYD: 'SYD',\r\n        T: 'T',\r\n        TAN: 'TAN',\r\n        TANH: 'TANH',\r\n        TBILLEQ: 'TBILLEQ',\r\n        TBILLPRICE: 'TBILLPRICE',\r\n        TBILLYIELD: 'TBILLYIELD',\r\n        TEXT: 'TEXT',\r\n        TIME: 'TIME',\r\n        TIMEVALUE: 'TIMEVALUE',\r\n        TODAY: 'TODAY',\r\n        TRANSPOSE: 'TRANSPOSE',\r\n        TRIM: 'TRIM',\r\n        TRUE: 'TRUE',\r\n        TRUNC: 'TRUNC',\r\n        UNICHAR: 'UNICHAR',\r\n        UNICODE: 'UNICODE',\r\n        UPPER: 'UPPER',\r\n        VARA: 'VARA',\r\n        'VAR.P': 'VAR.P',\r\n        VARPA: 'VARPA',\r\n        'VAR.S': 'VAR.S',\r\n        VLOOKUP: 'VLOOKUP',\r\n        WEEKDAY: 'WEEKDAY',\r\n        WEEKNUM: 'WEEKNUM',\r\n        WORKDAY: 'WORKDAY',\r\n        'WORKDAY.INTL': 'WORKDAY.INTL',\r\n        XNPV: 'XNPV',\r\n        XOR: 'XOR',\r\n        YEAR: 'YEAR',\r\n        YEARFRAC: 'YEARFRAC',\r\n        'HF.ADD': 'HF.ADD',\r\n        'HF.CONCAT': 'HF.CONCAT',\r\n        'HF.DIVIDE': 'HF.DIVIDE',\r\n        'HF.EQ': 'HF.EQ',\r\n        'HF.GT': 'HF.GT',\r\n        'HF.GTE': 'HF.GTE',\r\n        'HF.LT': 'HF.LT',\r\n        'HF.LTE': 'HF.LTE',\r\n        'HF.MINUS': 'HF.MINUS',\r\n        'HF.MULTIPLY': 'HF.MULTIPLY',\r\n        'HF.NE': 'HF.NE',\r\n        'HF.POW': 'HF.POW',\r\n        'HF.UMINUS': 'HF.UMINUS',\r\n        'HF.UNARY_PERCENT': 'HF.UNARY_PERCENT',\r\n        'HF.UPLUS': 'HF.UPLUS',\r\n        VARP: 'VARP',\r\n        VAR: 'VAR',\r\n        STDEVP: 'STDEVP',\r\n        STDEV: 'STDEV',\r\n        'EXPON.DIST': 'EXPON.DIST',\r\n        FISHER: 'FISHER',\r\n        FISHERINV: 'FISHERINV',\r\n        GAMMA: 'GAMMA',\r\n        'GAMMA.DIST': 'GAMMA.DIST',\r\n        GAMMALN: 'GAMMALN',\r\n        'GAMMALN.PRECISE': 'GAMMALN.PRECISE',\r\n        'GAMMA.INV': 'GAMMA.INV',\r\n        GAUSS: 'GAUSS',\r\n        FACT: 'FACT',\r\n        FACTDOUBLE: 'FACTDOUBLE',\r\n        COMBIN: 'COMBIN',\r\n        COMBINA: 'COMBINA',\r\n        GCD: 'GCD',\r\n        LCM: 'LCM',\r\n        MROUND: 'MROUND',\r\n        MULTINOMIAL: 'MULTINOMIAL',\r\n        QUOTIENT: 'QUOTIENT',\r\n        RANDBETWEEN: 'RANDBETWEEN',\r\n        SERIESSUM: 'SERIESSUM',\r\n        SIGN: 'SIGN',\r\n        SQRTPI: 'SQRTPI',\r\n        SUMX2MY2: 'SUMX2MY2',\r\n        SUMX2PY2: 'SUMX2PY2',\r\n        SUMXMY2: 'SUMXMY2',\r\n        'EXPONDIST': 'EXPONDIST',\r\n        GAMMADIST: 'GAMMADIST',\r\n        GAMMAINV: 'GAMMAINV',\r\n        'BETA.DIST': 'BETA.DIST',\r\n        BETADIST: 'BETADIST',\r\n        'BETA.INV': 'BETA.INV',\r\n        BETAINV: 'BETAINV',\r\n        'BINOM.DIST': 'BINOM.DIST',\r\n        BINOMDIST: 'BINOMDIST',\r\n        'BINOM.INV': 'BINOM.INV',\r\n        BESSELI: 'BESSELI',\r\n        BESSELJ: 'BESSELJ',\r\n        BESSELK: 'BESSELK',\r\n        BESSELY: 'BESSELY',\r\n        'CHISQ.DIST': 'CHISQ.DIST',\r\n        'CHISQ.DIST.RT': 'CHISQ.DIST.RT',\r\n        'CHISQ.INV': 'CHISQ.INV',\r\n        'CHISQ.INV.RT': 'CHISQ.INV.RT',\r\n        CHIDIST: 'CHIDIST',\r\n        CHIINV: 'CHIINV',\r\n        'F.DIST': 'F.DIST',\r\n        'F.DIST.RT': 'F.DIST.RT',\r\n        'F.INV': 'F.INV',\r\n        'F.INV.RT': 'F.INV.RT',\r\n        FDIST: 'FDIST',\r\n        FINV: 'FINV',\r\n        WEIBULL: 'WEIBULL',\r\n        'WEIBULL.DIST': 'WEIBULL.DIST',\r\n        POISSON: 'POISSON',\r\n        'POISSON.DIST': 'POISSON.DIST',\r\n        'HYPGEOM.DIST': 'HYPGEOM.DIST',\r\n        HYPGEOMDIST: 'HYPGEOMDIST',\r\n        'T.DIST': 'T.DIST',\r\n        'T.DIST.2T': 'T.DIST.2T',\r\n        'T.DIST.RT': 'T.DIST.RT',\r\n        'T.INV': 'T.INV',\r\n        'T.INV.2T': 'T.INV.2T',\r\n        TDIST: 'TDIST',\r\n        TINV: 'TINV',\r\n        LOGINV: 'LOGINV',\r\n        'LOGNORM.DIST': 'LOGNORM.DIST',\r\n        'LOGNORM.INV': 'LOGNORM.INV',\r\n        LOGNORMDIST: 'LOGNORMDIST',\r\n        'NORM.DIST': 'NORM.DIST',\r\n        'NORM.INV': 'NORM.INV',\r\n        'NORM.S.DIST': 'NORM.S.DIST',\r\n        'NORM.S.INV': 'NORM.S.INV',\r\n        NORMDIST: 'NORMDIST',\r\n        NORMINV: 'NORMINV',\r\n        NORMSDIST: 'NORMSDIST',\r\n        NORMSINV: 'NORMSINV',\r\n        PHI: 'PHI',\r\n        'NEGBINOM.DIST': 'NEGBINOM.DIST',\r\n        'NEGBINOMDIST': 'NEGBINOMDIST',\r\n        COMPLEX: 'COMPLEX',\r\n        IMABS: 'IMABS',\r\n        IMAGINARY: 'IMAGINARY',\r\n        IMARGUMENT: 'IMARGUMENT',\r\n        IMCONJUGATE: 'IMCONJUGATE',\r\n        IMCOS: 'IMCOS',\r\n        IMCOSH: 'IMCOSH',\r\n        IMCOT: 'IMCOT',\r\n        IMCSC: 'IMCSC',\r\n        IMCSCH: 'IMCSCH',\r\n        IMDIV: 'IMDIV',\r\n        IMEXP: 'IMEXP',\r\n        IMLN: 'IMLN',\r\n        IMLOG10: 'IMLOG10',\r\n        IMLOG2: 'IMLOG2',\r\n        IMPOWER: 'IMPOWER',\r\n        IMPRODUCT: 'IMPRODUCT',\r\n        IMREAL: 'IMREAL',\r\n        IMSEC: 'IMSEC',\r\n        IMSECH: 'IMSECH',\r\n        IMSIN: 'IMSIN',\r\n        IMSINH: 'IMSINH',\r\n        IMSQRT: 'IMSQRT',\r\n        IMSUB: 'IMSUB',\r\n        IMSUM: 'IMSUM',\r\n        IMTAN: 'IMTAN',\r\n        LARGE: 'LARGE',\r\n        SMALL: 'SMALL',\r\n        AVEDEV: 'AVEDEV',\r\n        CONFIDENCE: 'CONFIDENCE',\r\n        'CONFIDENCE.NORM': 'CONFIDENCE.NORM',\r\n        'CONFIDENCE.T': 'CONFIDENCE.T',\r\n        DEVSQ: 'DEVSQ',\r\n        GEOMEAN: 'GEOMEAN',\r\n        HARMEAN: 'HARMEAN',\r\n        CRITBINOM: 'CRITBINOM',\r\n        'COVARIANCE.P': 'COVARIANCE.P',\r\n        'COVARIANCE.S': 'COVARIANCE.S',\r\n        'COVAR': 'COVAR',\r\n        PEARSON: 'PEARSON',\r\n        RSQ: 'RSQ',\r\n        STANDARDIZE: 'STANDARDIZE',\r\n        'Z.TEST': 'Z.TEST',\r\n        ZTEST: 'ZTEST',\r\n        'F.TEST': 'F.TEST',\r\n        FTEST: 'FTEST',\r\n        STEYX: 'STEYX',\r\n        SLOPE: 'SLOPE',\r\n        'CHISQ.TEST': 'CHISQ.TEST',\r\n        CHITEST: 'CHITEST',\r\n        'T.TEST': 'T.TEST',\r\n        TTEST: 'TTEST',\r\n        SKEW: 'SKEW',\r\n        'SKEW.P': 'SKEW.P',\r\n        WEIBULLDIST: 'WEIBULLDIST',\r\n        VARS: 'VARS',\r\n        TINV2T: 'TINV2T',\r\n        TDISTRT: 'TDISTRT',\r\n        TDIST2T: 'TDIST2T',\r\n        STDEVS: 'STDEVS',\r\n        FINVRT: 'FINVRT',\r\n        FDISTRT: 'FDISTRT',\r\n        CHIDISTRT: 'CHIDISTRT',\r\n        CHIINVRT: 'CHIINVRT',\r\n        COVARIANCEP: 'COVARIANCEP',\r\n        COVARIANCES: 'COVARIANCES',\r\n        LOGNORMINV: 'LOGNORMINV',\r\n        POISSONDIST: 'POISSONDIST',\r\n        SKEWP: 'SKEWP',\r\n        'CEILING.MATH': 'CEILING.MATH',\r\n        FLOOR: 'FLOOR',\r\n        'FLOOR.MATH': 'FLOOR.MATH',\r\n        'CEILING.PRECISE': 'CEILING.PRECISE',\r\n        'FLOOR.PRECISE': 'FLOOR.PRECISE',\r\n        'ISO.CEILING': 'ISO.CEILING',\r\n    },\r\n    langCode: 'enGB',\r\n    ui: {\r\n        NEW_SHEET_PREFIX: 'Sheet',\r\n    },\r\n};\r\nexport default dictionary;\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { FunctionPlugin } from './plugin/FunctionPlugin';\r\nexport { FunctionPlugin };\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport { ArrayPlugin } from './ArrayPlugin';\r\nexport { AbsPlugin } from './AbsPlugin';\r\nexport { BitShiftPlugin } from './BitShiftPlugin';\r\nexport { BitwiseLogicOperationsPlugin } from './BitwiseLogicOperationsPlugin';\r\nexport { BooleanPlugin } from './BooleanPlugin';\r\nexport { CharPlugin } from './CharPlugin';\r\nexport { CodePlugin } from './CodePlugin';\r\nexport { CountBlankPlugin } from './CountBlankPlugin';\r\nexport { CountUniquePlugin } from './CountUniquePlugin';\r\nexport { DateTimePlugin } from './DateTimePlugin';\r\nexport { DegreesPlugin } from './DegreesPlugin';\r\nexport { DeltaPlugin } from './DeltaPlugin';\r\nexport { ExpPlugin } from './ExpPlugin';\r\nexport { FinancialPlugin } from './FinancialPlugin';\r\nexport { FormulaTextPlugin } from './FormulaTextPlugin';\r\nexport { InformationPlugin } from './InformationPlugin';\r\nexport { IsEvenPlugin } from './IsEvenPlugin';\r\nexport { IsOddPlugin } from './IsOddPlugin';\r\nexport { LogarithmPlugin } from './LogarithmPlugin';\r\nexport { MathConstantsPlugin } from './MathConstantsPlugin';\r\nexport { MatrixPlugin } from './MatrixPlugin';\r\nexport { MedianPlugin } from './MedianPlugin';\r\nexport { ModuloPlugin } from './ModuloPlugin';\r\nexport { NumericAggregationPlugin } from './NumericAggregationPlugin';\r\nexport { PowerPlugin } from './PowerPlugin';\r\nexport { RadiansPlugin } from './RadiansPlugin';\r\nexport { RadixConversionPlugin } from './RadixConversionPlugin';\r\nexport { RandomPlugin } from './RandomPlugin';\r\nexport { RoundingPlugin } from './RoundingPlugin';\r\nexport { SqrtPlugin } from './SqrtPlugin';\r\nexport { ConditionalAggregationPlugin } from './ConditionalAggregationPlugin';\r\nexport { SumprodPlugin } from './SumprodPlugin';\r\nexport { TextPlugin } from './TextPlugin';\r\nexport { TrigonometryPlugin } from './TrigonometryPlugin';\r\nexport { LookupPlugin } from './LookupPlugin';\r\nexport { RomanPlugin } from './RomanPlugin';\r\nexport { SimpleArithmerticPlugin } from './SimpleArithmertic';\r\nexport { StatisticalPlugin } from './StatisticalPlugin';\r\nexport { MathPlugin } from './MathPlugin';\r\nexport { ComplexPlugin } from './ComplexPlugin';\r\nexport { StatisticalAggregationPlugin } from './StatisticalAggregationPlugin';\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArraySize } from '../../ArraySize';\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { AstNodeType } from '../../parser';\r\nimport { coerceScalarToBoolean } from '../ArithmeticHelper';\r\nimport { InterpreterState } from '../InterpreterState';\r\nimport { SimpleRangeValue } from '../SimpleRangeValue';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class ArrayPlugin extends FunctionPlugin {\r\n    arrayformula(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ARRAYFORMULA'), (value) => value);\r\n    }\r\n    arrayformulaArraySize(ast, state) {\r\n        if (ast.args.length !== 1) {\r\n            return ArraySize.error();\r\n        }\r\n        const metadata = this.metadata('ARRAYFORMULA');\r\n        const subChecks = ast.args.map((arg) => { var _a; return this.arraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false))); });\r\n        return subChecks[0];\r\n    }\r\n    arrayconstrain(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ARRAY_CONSTRAIN'), (range, numRows, numCols) => {\r\n            numRows = Math.min(numRows, range.height());\r\n            numCols = Math.min(numCols, range.width());\r\n            const data = range.data;\r\n            const ret = [];\r\n            for (let i = 0; i < numRows; i++) {\r\n                ret.push(data[i].slice(0, numCols));\r\n            }\r\n            return SimpleRangeValue.onlyValues(ret);\r\n        });\r\n    }\r\n    arrayconstrainArraySize(ast, state) {\r\n        if (ast.args.length !== 3) {\r\n            return ArraySize.error();\r\n        }\r\n        const metadata = this.metadata('ARRAY_CONSTRAIN');\r\n        const subChecks = ast.args.map((arg) => { var _a; return this.arraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false))); });\r\n        let { height, width } = subChecks[0];\r\n        if (ast.args[1].type === AstNodeType.NUMBER) {\r\n            height = Math.min(height, ast.args[1].value);\r\n        }\r\n        if (ast.args[2].type === AstNodeType.NUMBER) {\r\n            width = Math.min(width, ast.args[2].value);\r\n        }\r\n        if (height < 1 || width < 1 || !Number.isInteger(height) || !Number.isInteger(width)) {\r\n            return ArraySize.error();\r\n        }\r\n        return new ArraySize(width, height);\r\n    }\r\n    filter(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FILTER'), (rangeVals, ...rangeFilters) => {\r\n            for (const filter of rangeFilters) {\r\n                if (rangeVals.width() !== filter.width() || rangeVals.height() !== filter.height()) {\r\n                    return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n                }\r\n            }\r\n            if (rangeVals.width() > 1 && rangeVals.height() > 1) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.WrongDimension);\r\n            }\r\n            const vals = rangeVals.data;\r\n            const ret = [];\r\n            for (let i = 0; i < rangeVals.height(); i++) {\r\n                const row = [];\r\n                for (let j = 0; j < rangeVals.width(); j++) {\r\n                    let ok = true;\r\n                    for (const filter of rangeFilters) {\r\n                        const val = coerceScalarToBoolean(filter.data[i][j]);\r\n                        if (val !== true) {\r\n                            ok = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (ok) {\r\n                        row.push(vals[i][j]);\r\n                    }\r\n                }\r\n                if (row.length > 0) {\r\n                    ret.push(row);\r\n                }\r\n            }\r\n            if (ret.length > 0) {\r\n                return SimpleRangeValue.onlyValues(ret);\r\n            }\r\n            else {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EmptyRange);\r\n            }\r\n        });\r\n    }\r\n    filterArraySize(ast, state) {\r\n        if (ast.args.length <= 1) {\r\n            return ArraySize.error();\r\n        }\r\n        const metadata = this.metadata('FILTER');\r\n        const subChecks = ast.args.map((arg) => { var _a; return this.arraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false))); });\r\n        const width = Math.max(...(subChecks).map(val => val.width));\r\n        const height = Math.max(...(subChecks).map(val => val.height));\r\n        return new ArraySize(width, height);\r\n    }\r\n}\r\nArrayPlugin.implementedFunctions = {\r\n    'ARRAYFORMULA': {\r\n        method: 'arrayformula',\r\n        arraySizeMethod: 'arrayformulaArraySize',\r\n        arrayFunction: true,\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n    },\r\n    'ARRAY_CONSTRAIN': {\r\n        method: 'arrayconstrain',\r\n        arraySizeMethod: 'arrayconstrainArraySize',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1 },\r\n        ],\r\n        vectorizationForbidden: true,\r\n    },\r\n    'FILTER': {\r\n        method: 'filter',\r\n        arraySizeMethod: 'filterArraySize',\r\n        arrayFunction: true,\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    }\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class AbsPlugin extends FunctionPlugin {\r\n    abs(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ABS'), Math.abs);\r\n    }\r\n}\r\nAbsPlugin.implementedFunctions = {\r\n    'ABS': {\r\n        method: 'abs',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nconst MAX_48BIT_INTEGER = 281474976710655;\r\nconst SHIFT_MIN_POSITIONS = -53;\r\nconst SHIFT_MAX_POSITIONS = 53;\r\nexport class BitShiftPlugin extends FunctionPlugin {\r\n    bitlshift(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BITLSHIFT'), shiftLeft);\r\n    }\r\n    bitrshift(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BITRSHIFT'), shiftRight);\r\n    }\r\n}\r\nBitShiftPlugin.implementedFunctions = {\r\n    'BITLSHIFT': {\r\n        method: 'bitlshift',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: SHIFT_MIN_POSITIONS, maxValue: SHIFT_MAX_POSITIONS },\r\n        ]\r\n    },\r\n    'BITRSHIFT': {\r\n        method: 'bitrshift',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: SHIFT_MIN_POSITIONS, maxValue: SHIFT_MAX_POSITIONS },\r\n        ]\r\n    },\r\n};\r\nfunction shiftLeft(value, positions) {\r\n    if (positions < 0) {\r\n        return shiftRight(value, -positions);\r\n    }\r\n    else {\r\n        return validate(value * Math.pow(2, positions));\r\n    }\r\n}\r\nfunction shiftRight(value, positions) {\r\n    if (positions < 0) {\r\n        return shiftLeft(value, -positions);\r\n    }\r\n    else {\r\n        return validate(Math.floor(value / Math.pow(2, positions)));\r\n    }\r\n}\r\nfunction validate(result) {\r\n    if (result > MAX_48BIT_INTEGER) {\r\n        return new CellError(ErrorType.NUM, ErrorMessage.BitshiftLong);\r\n    }\r\n    else {\r\n        return result;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class BitwiseLogicOperationsPlugin extends FunctionPlugin {\r\n    bitand(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BITAND'), (left, right) => left & right);\r\n    }\r\n    bitor(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BITOR'), (left, right) => left | right);\r\n    }\r\n    bitxor(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BITXOR'), (left, right) => left ^ right);\r\n    }\r\n}\r\nBitwiseLogicOperationsPlugin.implementedFunctions = {\r\n    'BITAND': {\r\n        method: 'bitand',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\r\n        ]\r\n    },\r\n    'BITOR': {\r\n        method: 'bitor',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\r\n        ]\r\n    },\r\n    'BITXOR': {\r\n        method: 'bitxor',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\n/**\r\n * Interpreter plugin containing boolean functions\r\n */\r\nexport class BooleanPlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to TRUE()\r\n     *\r\n     * Returns the logical true\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    literalTrue(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TRUE'), () => true);\r\n    }\r\n    /**\r\n     * Corresponds to FALSE()\r\n     *\r\n     * Returns the logical false\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    literalFalse(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FALSE'), () => false);\r\n    }\r\n    /**\r\n     * Corresponds to IF(expression, value_if_true, value_if_false)\r\n     *\r\n     * Returns value specified as second argument if expression is true and third argument if expression is false\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    conditionalIf(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IF'), (condition, arg2, arg3) => {\r\n            return condition ? arg2 : arg3;\r\n        });\r\n    }\r\n    /**\r\n     * Corresponds to AND(expression1, [expression2, ...])\r\n     *\r\n     * Returns true if all of the provided arguments are logically true, and false if any of it is logically false\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    and(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('AND'), (...args) => !args.some((arg) => !arg));\r\n    }\r\n    /**\r\n     * Corresponds to OR(expression1, [expression2, ...])\r\n     *\r\n     * Returns true if any of the provided arguments are logically true, and false otherwise\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    or(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('OR'), (...args) => args.some((arg) => arg));\r\n    }\r\n    not(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NOT'), (arg) => !arg);\r\n    }\r\n    xor(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('XOR'), (...args) => {\r\n            let cnt = 0;\r\n            args.forEach((arg) => {\r\n                if (arg) {\r\n                    cnt++;\r\n                }\r\n            });\r\n            return (cnt % 2) === 1;\r\n        });\r\n    }\r\n    switch(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SWITCH'), (selector, ...args) => {\r\n            const n = args.length;\r\n            let i = 0;\r\n            for (; i + 1 < n; i += 2) {\r\n                if (args[i] instanceof CellError) {\r\n                    continue;\r\n                }\r\n                if (this.arithmeticHelper.eq(selector, args[i])) {\r\n                    return args[i + 1];\r\n                }\r\n            }\r\n            if (i < n) {\r\n                return args[i];\r\n            }\r\n            else {\r\n                return new CellError(ErrorType.NA, ErrorMessage.NoDefault);\r\n            }\r\n        });\r\n    }\r\n    iferror(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IFERROR'), (arg1, arg2) => {\r\n            if (arg1 instanceof CellError) {\r\n                return arg2;\r\n            }\r\n            else {\r\n                return arg1;\r\n            }\r\n        });\r\n    }\r\n    ifna(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IFNA'), (arg1, arg2) => {\r\n            if (arg1 instanceof CellError && arg1.type === ErrorType.NA) {\r\n                return arg2;\r\n            }\r\n            else {\r\n                return arg1;\r\n            }\r\n        });\r\n    }\r\n    choose(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CHOOSE'), (selector, ...args) => {\r\n            if (selector > args.length) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.Selector);\r\n            }\r\n            return args[selector - 1];\r\n        });\r\n    }\r\n}\r\nBooleanPlugin.implementedFunctions = {\r\n    'TRUE': {\r\n        method: 'literalTrue',\r\n        parameters: [],\r\n    },\r\n    'FALSE': {\r\n        method: 'literalFalse',\r\n        parameters: [],\r\n    },\r\n    'IF': {\r\n        method: 'conditionalIf',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n            { argumentType: ArgumentTypes.SCALAR, passSubtype: true },\r\n            { argumentType: ArgumentTypes.SCALAR, defaultValue: false, passSubtype: true },\r\n        ],\r\n    },\r\n    'AND': {\r\n        method: 'and',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ],\r\n        repeatLastArgs: 1,\r\n        expandRanges: true,\r\n    },\r\n    'OR': {\r\n        method: 'or',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ],\r\n        repeatLastArgs: 1,\r\n        expandRanges: true,\r\n    },\r\n    'XOR': {\r\n        method: 'xor',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ],\r\n        repeatLastArgs: 1,\r\n        expandRanges: true,\r\n    },\r\n    'NOT': {\r\n        method: 'not',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'SWITCH': {\r\n        method: 'switch',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR },\r\n            { argumentType: ArgumentTypes.SCALAR, passSubtype: true },\r\n            { argumentType: ArgumentTypes.SCALAR, passSubtype: true },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'IFERROR': {\r\n        method: 'iferror',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR, passSubtype: true },\r\n            { argumentType: ArgumentTypes.SCALAR, passSubtype: true },\r\n        ]\r\n    },\r\n    'IFNA': {\r\n        method: 'ifna',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR, passSubtype: true },\r\n            { argumentType: ArgumentTypes.SCALAR, passSubtype: true },\r\n        ]\r\n    },\r\n    'CHOOSE': {\r\n        method: 'choose',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.SCALAR, passSubtype: true },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class CharPlugin extends FunctionPlugin {\r\n    char(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CHAR'), (value) => {\r\n            if (value < 1 || value >= 256) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.CharacterCodeBounds);\r\n            }\r\n            return String.fromCharCode(Math.trunc(value));\r\n        });\r\n    }\r\n    unichar(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CHAR'), (value) => {\r\n            if (value < 1 || value >= 1114112) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.CharacterCodeBounds);\r\n            }\r\n            return String.fromCodePoint(Math.trunc(value));\r\n        });\r\n    }\r\n}\r\nCharPlugin.implementedFunctions = {\r\n    'CHAR': {\r\n        method: 'char',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ],\r\n    },\r\n    'UNICHAR': {\r\n        method: 'unichar',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class CodePlugin extends FunctionPlugin {\r\n    code(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CODE'), (value) => {\r\n            if (value.length === 0) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.EmptyString);\r\n            }\r\n            return value.charCodeAt(0);\r\n        });\r\n    }\r\n    unicode(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('UNICODE'), (value) => {\r\n            var _a;\r\n            return (_a = value.codePointAt(0)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.VALUE, ErrorMessage.EmptyString);\r\n        });\r\n    }\r\n}\r\nCodePlugin.implementedFunctions = {\r\n    'CODE': {\r\n        method: 'code',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ]\r\n    },\r\n    'UNICODE': {\r\n        method: 'unicode',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { EmptyValue } from '../InterpreterValue';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\n/**\r\n * Interpreter plugin containing MEDIAN function\r\n */\r\nexport class CountBlankPlugin extends FunctionPlugin {\r\n    countblank(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COUNTBLANK'), (...args) => {\r\n            let counter = 0;\r\n            args.forEach((arg) => {\r\n                if (arg === EmptyValue) {\r\n                    counter++;\r\n                }\r\n            });\r\n            return counter;\r\n        });\r\n    }\r\n}\r\nCountBlankPlugin.implementedFunctions = {\r\n    'COUNTBLANK': {\r\n        method: 'countblank',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR }\r\n        ],\r\n        repeatLastArgs: 1,\r\n        expandRanges: true,\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError } from '../../Cell';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\n/**\r\n * Interpreter plugin containing COUNTUNIQUE function\r\n */\r\nexport class CountUniquePlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to COUNTUNIQUE(Number1, Number2, ...).\r\n     *\r\n     * Returns number of unique numbers from arguments\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    countunique(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COUNTUNIQUE'), (...args) => {\r\n            const valuesSet = new Set();\r\n            const errorsSet = new Set();\r\n            for (const scalarValue of args) {\r\n                if (scalarValue instanceof CellError) {\r\n                    errorsSet.add(scalarValue.type);\r\n                }\r\n                else if (scalarValue !== '') {\r\n                    valuesSet.add(scalarValue);\r\n                }\r\n            }\r\n            return valuesSet.size + errorsSet.size;\r\n        });\r\n    }\r\n}\r\nCountUniquePlugin.implementedFunctions = {\r\n    'COUNTUNIQUE': {\r\n        method: 'countunique',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR },\r\n        ],\r\n        repeatLastArgs: 1,\r\n        expandRanges: true,\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { instanceOfSimpleDate, instanceOfSimpleTime, numberToSimpleTime, offsetMonth, roundToNearestSecond, timeToNumber, toBasisEU, truncateDayInMonth } from '../../DateTimeHelper';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { format } from '../../format/format';\r\nimport { EmptyValue, getRawValue, isExtendedNumber, NumberType, } from '../InterpreterValue';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\n/**\r\n * Interpreter plugin containing date-specific functions\r\n */\r\nexport class DateTimePlugin extends FunctionPlugin {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.isoweeknumCore = (day) => {\r\n            const absoluteDay = Math.floor(this.dateTimeHelper.relativeNumberToAbsoluteNumber(day));\r\n            const date = this.dateTimeHelper.numberToSimpleDate(day);\r\n            const yearStart = this.dateTimeHelper.dateToNumber({ year: date.year, month: 1, day: 1 });\r\n            const yearStartAbsolute = this.dateTimeHelper.relativeNumberToAbsoluteNumber(yearStart);\r\n            const firstThursdayAbs = yearStartAbsolute + ((4 - yearStartAbsolute) % 7 + 7) % 7;\r\n            const ret = Math.floor((absoluteDay - 1) / 7) - Math.floor((firstThursdayAbs - 1) / 7) + 1;\r\n            if (ret === 0) {\r\n                return this.isoweeknumCore(day - 7) + 1;\r\n            }\r\n            return ret;\r\n        };\r\n        this.days360Core = (startDate, endDate, mode) => {\r\n            const start = this.dateTimeHelper.numberToSimpleDate(startDate);\r\n            const end = this.dateTimeHelper.numberToSimpleDate(endDate);\r\n            let nStart, nEnd;\r\n            if (mode) {\r\n                nStart = toBasisEU(start);\r\n                nEnd = toBasisEU(end);\r\n            }\r\n            else {\r\n                [nStart, nEnd] = this.dateTimeHelper.toBasisUS(start, end);\r\n            }\r\n            return 360 * (nEnd.year - nStart.year) + 30 * (nEnd.month - nStart.month) + nEnd.day - nStart.day;\r\n        };\r\n    }\r\n    /**\r\n     * Corresponds to DATE(year, month, day)\r\n     *\r\n     * Converts a provided year, month and day into date\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    date(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DATE'), (year, month, day) => {\r\n            const d = Math.trunc(day);\r\n            let m = Math.trunc(month);\r\n            let y = Math.trunc(year);\r\n            if (y < this.dateTimeHelper.getEpochYearZero()) {\r\n                y += this.dateTimeHelper.getEpochYearZero();\r\n            }\r\n            const delta = Math.floor((m - 1) / 12);\r\n            y += delta;\r\n            m -= delta * 12;\r\n            const date = { year: y, month: m, day: 1 };\r\n            if (this.dateTimeHelper.isValidDate(date)) {\r\n                let ret = this.dateTimeHelper.dateToNumber(date) + (d - 1);\r\n                ret = this.dateTimeHelper.getWithinBounds(ret);\r\n                if (ret === undefined) {\r\n                    return new CellError(ErrorType.NUM, ErrorMessage.DateBounds);\r\n                }\r\n                return ret;\r\n            }\r\n            return new CellError(ErrorType.VALUE, ErrorMessage.InvalidDate);\r\n        });\r\n    }\r\n    time(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TIME'), (h, m, s) => {\r\n            const ret = timeToNumber({ hours: Math.trunc(h), minutes: Math.trunc(m), seconds: Math.trunc(s) });\r\n            if (ret < 0) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NegativeTime);\r\n            }\r\n            return ret % 1;\r\n        });\r\n    }\r\n    /**\r\n     * Implementation for the EOMONTH function\r\n     */\r\n    eomonth(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('EOMONTH'), (dateNumber, numberOfMonthsToShift) => {\r\n            const date = this.dateTimeHelper.numberToSimpleDate(dateNumber);\r\n            let ret = this.dateTimeHelper.dateToNumber(this.dateTimeHelper.endOfMonth(offsetMonth(date, numberOfMonthsToShift)));\r\n            ret = this.dateTimeHelper.getWithinBounds(ret);\r\n            if (ret === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.DateBounds);\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n    day(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DAY'), (dateNumber) => this.dateTimeHelper.numberToSimpleDate(dateNumber).day);\r\n    }\r\n    days(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DAYS'), (endDate, startDate) => Math.trunc(endDate) - Math.trunc(startDate));\r\n    }\r\n    /**\r\n     * Corresponds to MONTH(date)\r\n     *\r\n     * Returns the month of the year specified by a given date\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    month(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MONTH'), (dateNumber) => this.dateTimeHelper.numberToSimpleDate(dateNumber).month);\r\n    }\r\n    /**\r\n     * Corresponds to YEAR(date)\r\n     *\r\n     * Returns the year specified by a given date\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    year(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('YEAR'), (dateNumber) => this.dateTimeHelper.numberToSimpleDate(dateNumber).year);\r\n    }\r\n    hour(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HOUR'), (timeNumber) => numberToSimpleTime(roundToNearestSecond(timeNumber) % 1).hours);\r\n    }\r\n    minute(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MINUTE'), (timeNumber) => numberToSimpleTime(roundToNearestSecond(timeNumber) % 1).minutes);\r\n    }\r\n    second(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SECOND'), (timeNumber) => numberToSimpleTime(roundToNearestSecond(timeNumber) % 1).seconds);\r\n    }\r\n    /**\r\n     * Corresponds to TEXT(number, format)\r\n     *\r\n     * Tries to convert number to specified date format.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    text(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TEXT'), (numberRepresentation, formatArg) => format(numberRepresentation, formatArg, this.config, this.dateTimeHelper));\r\n    }\r\n    weekday(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('WEEKDAY'), (day, type) => {\r\n            const absoluteDay = Math.floor(this.dateTimeHelper.relativeNumberToAbsoluteNumber(day));\r\n            if (type === 3) {\r\n                return (absoluteDay - 1) % 7;\r\n            }\r\n            const offset = weekdayOffsets.get(type);\r\n            if (offset === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.BadMode);\r\n            }\r\n            return (absoluteDay - offset) % 7 + 1;\r\n        });\r\n    }\r\n    weeknum(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('WEEKNUM'), (day, type) => {\r\n            const absoluteDay = Math.floor(this.dateTimeHelper.relativeNumberToAbsoluteNumber(day));\r\n            const date = this.dateTimeHelper.numberToSimpleDate(day);\r\n            const yearStart = this.dateTimeHelper.dateToNumber({ year: date.year, month: 1, day: 1 });\r\n            const yearStartAbsolute = this.dateTimeHelper.relativeNumberToAbsoluteNumber(yearStart);\r\n            if (type === 21) {\r\n                return this.isoweeknumCore(day);\r\n            }\r\n            const offset = weekdayOffsets.get(type);\r\n            if (offset === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.BadMode);\r\n            }\r\n            return Math.floor((absoluteDay - offset) / 7) - Math.floor((yearStartAbsolute - offset) / 7) + 1;\r\n        });\r\n    }\r\n    isoweeknum(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISOWEEKNUM'), this.isoweeknumCore);\r\n    }\r\n    datevalue(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DATEVALUE'), (date) => {\r\n            const { dateTime } = this.dateTimeHelper.parseDateTimeFromConfigFormats(date);\r\n            if (dateTime === undefined) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.IncorrectDateTime);\r\n            }\r\n            if (!instanceOfSimpleDate(dateTime)) {\r\n                return 0;\r\n            }\r\n            return (instanceOfSimpleTime(dateTime) ? Math.trunc(timeToNumber(dateTime)) : 0) +\r\n                this.dateTimeHelper.dateToNumber(dateTime);\r\n        });\r\n    }\r\n    timevalue(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TIMEVALUE'), (date) => {\r\n            const dateNumber = this.dateTimeHelper.dateStringToDateNumber(date);\r\n            if (dateNumber === undefined) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.IncorrectDateTime);\r\n            }\r\n            return getRawValue(dateNumber) % 1;\r\n        });\r\n    }\r\n    now(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NOW'), () => {\r\n            const now = new Date(Date.now());\r\n            return timeToNumber({ hours: now.getHours(), minutes: now.getMinutes(), seconds: now.getSeconds() }) +\r\n                this.dateTimeHelper.dateToNumber({ year: now.getFullYear(), month: now.getMonth() + 1, day: now.getDate() });\r\n        });\r\n    }\r\n    today(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TODAY'), () => {\r\n            const now = new Date(Date.now());\r\n            return this.dateTimeHelper.dateToNumber({\r\n                year: now.getFullYear(),\r\n                month: now.getMonth() + 1,\r\n                day: now.getDate()\r\n            });\r\n        });\r\n    }\r\n    edate(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('EDATE'), (dateNumber, delta) => {\r\n            const date = this.dateTimeHelper.numberToSimpleDate(dateNumber);\r\n            const newDate = truncateDayInMonth(offsetMonth(date, delta));\r\n            let ret = this.dateTimeHelper.dateToNumber(newDate);\r\n            ret = this.dateTimeHelper.getWithinBounds(ret);\r\n            if (ret === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.DateBounds);\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n    datedif(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DATEDIF'), (startDate, endDate, unit) => {\r\n            if (startDate > endDate) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.StartEndDate);\r\n            }\r\n            if (unit === 'D') {\r\n                return Math.floor(endDate) - Math.floor(startDate);\r\n            }\r\n            const start = this.dateTimeHelper.numberToSimpleDate(startDate);\r\n            const end = this.dateTimeHelper.numberToSimpleDate(endDate);\r\n            switch (unit) {\r\n                case 'M':\r\n                    return (end.year - start.year) * 12 + (end.month - start.month) - (end.day < start.day ? 1 : 0);\r\n                case 'YM':\r\n                    return (12 + (end.month - start.month) - (end.day < start.day ? 1 : 0)) % 12;\r\n                case 'Y':\r\n                    if ((end.month > start.month) || (end.month === start.month && end.day >= start.day)) {\r\n                        return end.year - start.year;\r\n                    }\r\n                    else {\r\n                        return end.year - start.year - 1;\r\n                    }\r\n                case 'MD':\r\n                    if (end.day >= start.day) {\r\n                        return end.day - start.day;\r\n                    }\r\n                    else {\r\n                        const m = end.month === 1 ? 12 : end.month - 1;\r\n                        const y = end.month === 1 ? end.year - 1 : end.year;\r\n                        return this.dateTimeHelper.daysInMonth(y, m) + end.day - start.day;\r\n                    }\r\n                case 'YD':\r\n                    if (end.month > start.month || (end.month === start.month && end.day >= start.day)) {\r\n                        return Math.floor(endDate) - this.dateTimeHelper.dateToNumber({\r\n                            year: end.year,\r\n                            month: start.month,\r\n                            day: start.day\r\n                        });\r\n                    }\r\n                    else {\r\n                        return Math.floor(endDate)\r\n                            - Math.floor(startDate)\r\n                            - 365 * (end.year - start.year - 1)\r\n                            - this.dateTimeHelper.leapYearsCount(end.year - 1)\r\n                            + this.dateTimeHelper.leapYearsCount(start.year);\r\n                    }\r\n                default:\r\n                    return new CellError(ErrorType.NUM, ErrorMessage.BadMode);\r\n            }\r\n        });\r\n    }\r\n    days360(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DAYS360'), this.days360Core);\r\n    }\r\n    yearfrac(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('YEARFRAC'), (startDate, endDate, mode) => {\r\n            startDate = Math.trunc(startDate);\r\n            endDate = Math.trunc(endDate);\r\n            if (startDate > endDate) {\r\n                [startDate, endDate] = [endDate, startDate];\r\n            }\r\n            switch (mode) {\r\n                case 0:\r\n                    return this.days360Core(startDate, endDate, false) / 360;\r\n                case 1:\r\n                    return (endDate - startDate) / this.dateTimeHelper.yearLengthForBasis(this.dateTimeHelper.numberToSimpleDate(startDate), this.dateTimeHelper.numberToSimpleDate(endDate));\r\n                case 2:\r\n                    return (endDate - startDate) / 360;\r\n                case 3:\r\n                    return (endDate - startDate) / 365;\r\n                case 4:\r\n                    return this.days360Core(startDate, endDate, true) / 360;\r\n            }\r\n            throw new Error('Should not be reachable.');\r\n        });\r\n    }\r\n    interval(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('INTERVAL'), (arg) => {\r\n            arg = Math.trunc(arg);\r\n            const second = arg % 60;\r\n            arg = Math.trunc(arg / 60);\r\n            const minute = arg % 60;\r\n            arg = Math.trunc(arg / 60);\r\n            const hour = arg % 24;\r\n            arg = Math.trunc(arg / 24);\r\n            const day = arg % 30;\r\n            arg = Math.trunc(arg / 30);\r\n            const month = arg % 12;\r\n            const year = Math.trunc(arg / 12);\r\n            return 'P' + ((year > 0) ? year + 'Y' : '')\r\n                + ((month > 0) ? month + 'M' : '')\r\n                + ((day > 0) ? day + 'D' : '')\r\n                + 'T'\r\n                + ((hour > 0) ? hour + 'H' : '')\r\n                + ((minute > 0) ? minute + 'M' : '')\r\n                + ((second > 0) ? second + 'S' : '');\r\n        });\r\n    }\r\n    networkdays(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NETWORKDAYS'), (start, end, holidays) => this.networkdayscore(start, end, 1, holidays));\r\n    }\r\n    networkdaysintl(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NETWORKDAYS.INTL'), (start, end, weekend, holidays) => this.networkdayscore(start, end, weekend, holidays));\r\n    }\r\n    workday(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('WORKDAY'), (start, end, holidays) => this.workdaycore(start, end, 1, holidays));\r\n    }\r\n    workdayintl(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('WORKDAY.INTL'), (start, end, weekend, holidays) => this.workdaycore(start, end, weekend, holidays));\r\n    }\r\n    networkdayscore(start, end, weekend, holidays) {\r\n        start = Math.trunc(start);\r\n        end = Math.trunc(end);\r\n        let multiplier = 1;\r\n        if (start > end) {\r\n            [start, end] = [end, start];\r\n            multiplier = -1;\r\n        }\r\n        const weekendPattern = computeWeekendPattern(weekend);\r\n        if (weekendPattern instanceof CellError) {\r\n            return weekendPattern;\r\n        }\r\n        const filteredHolidays = this.simpleRangeToFilteredHolidays(weekendPattern, holidays);\r\n        if (filteredHolidays instanceof CellError) {\r\n            return filteredHolidays;\r\n        }\r\n        return multiplier * this.countWorkdays(start, end, weekendPattern, filteredHolidays);\r\n    }\r\n    workdaycore(start, delta, weekend, holidays) {\r\n        start = Math.trunc(start);\r\n        delta = Math.trunc(delta);\r\n        const weekendPattern = computeWeekendPattern(weekend);\r\n        if (weekendPattern instanceof CellError) {\r\n            return weekendPattern;\r\n        }\r\n        const filteredHolidays = this.simpleRangeToFilteredHolidays(weekendPattern, holidays);\r\n        if (filteredHolidays instanceof CellError) {\r\n            return filteredHolidays;\r\n        }\r\n        if (delta > 0) {\r\n            let upper = 1;\r\n            while (this.countWorkdays(start + 1, start + upper, weekendPattern, filteredHolidays) < delta) {\r\n                upper *= 2;\r\n            }\r\n            let lower = 1;\r\n            while (lower + 1 < upper) {\r\n                const mid = Math.trunc((lower + upper) / 2);\r\n                if (this.countWorkdays(start + 1, start + mid, weekendPattern, filteredHolidays) < delta) {\r\n                    lower = mid;\r\n                }\r\n                else {\r\n                    upper = mid;\r\n                }\r\n            }\r\n            return start + upper;\r\n        }\r\n        else if (delta < 0) {\r\n            delta *= -1;\r\n            let upper = 1;\r\n            while (this.countWorkdays(start - upper, start - 1, weekendPattern, filteredHolidays) < delta) {\r\n                upper *= 2;\r\n            }\r\n            let lower = 1;\r\n            while (lower + 1 < upper) {\r\n                const mid = Math.trunc((lower + upper) / 2);\r\n                if (this.countWorkdays(start - mid, start - 1, weekendPattern, filteredHolidays) < delta) {\r\n                    lower = mid;\r\n                }\r\n                else {\r\n                    upper = mid;\r\n                }\r\n            }\r\n            return start - upper;\r\n        }\r\n        else {\r\n            return start;\r\n        }\r\n    }\r\n    countWorkdays(start, end, weekendPattern, sortedHolidays) {\r\n        const absoluteEnd = Math.floor(this.dateTimeHelper.relativeNumberToAbsoluteNumber(end));\r\n        const absoluteStart = Math.floor(this.dateTimeHelper.relativeNumberToAbsoluteNumber(start));\r\n        let ans = 0;\r\n        for (let i = 0; i < 7; i++) {\r\n            if (weekendPattern.charAt(i) === '0') {\r\n                ans += Math.floor((absoluteEnd + 6 - i) / 7);\r\n                ans -= Math.floor((absoluteStart - 1 + 6 - i) / 7);\r\n            }\r\n        }\r\n        ans -= lowerBound(end + 1, sortedHolidays) - lowerBound(start, sortedHolidays);\r\n        return ans;\r\n    }\r\n    simpleRangeToFilteredHolidays(weekendPattern, holidays) {\r\n        var _a;\r\n        const holidaysArr = (_a = holidays === null || holidays === void 0 ? void 0 : holidays.valuesFromTopLeftCorner()) !== null && _a !== void 0 ? _a : [];\r\n        for (const val of holidaysArr) {\r\n            if (val instanceof CellError) {\r\n                return val;\r\n            }\r\n        }\r\n        const processedHolidays = [];\r\n        for (const val of holidaysArr) {\r\n            if (val === EmptyValue) {\r\n                continue;\r\n            }\r\n            if (isExtendedNumber(val)) {\r\n                processedHolidays.push(Math.trunc(getRawValue(val)));\r\n            }\r\n            else {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\r\n            }\r\n        }\r\n        return [...new Set(processedHolidays)].sort((a, b) => a - b)\r\n            .filter((arg) => {\r\n            const val = this.dateTimeHelper.relativeNumberToAbsoluteNumber(arg);\r\n            const i = (val - 1) % 7;\r\n            return (weekendPattern.charAt(i) === '0');\r\n        });\r\n    }\r\n}\r\nDateTimePlugin.implementedFunctions = {\r\n    'DATE': {\r\n        method: 'date',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_DATE\r\n    },\r\n    'TIME': {\r\n        method: 'time',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_TIME\r\n    },\r\n    'MONTH': {\r\n        method: 'month',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'YEAR': {\r\n        method: 'year',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'HOUR': {\r\n        method: 'hour',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'MINUTE': {\r\n        method: 'minute',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'SECOND': {\r\n        method: 'second',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'TEXT': {\r\n        method: 'text',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.STRING },\r\n        ]\r\n    },\r\n    'EOMONTH': {\r\n        method: 'eomonth',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_DATE\r\n    },\r\n    'DAY': {\r\n        method: 'day',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'DAYS': {\r\n        method: 'days',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'WEEKDAY': {\r\n        method: 'weekday',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n    'WEEKNUM': {\r\n        method: 'weeknum',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n    'ISOWEEKNUM': {\r\n        method: 'isoweeknum',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'DATEVALUE': {\r\n        method: 'datevalue',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_DATE\r\n    },\r\n    'TIMEVALUE': {\r\n        method: 'timevalue',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_TIME\r\n    },\r\n    'NOW': {\r\n        method: 'now',\r\n        parameters: [],\r\n        isVolatile: true,\r\n        returnNumberType: NumberType.NUMBER_DATETIME\r\n    },\r\n    'TODAY': {\r\n        method: 'today',\r\n        parameters: [],\r\n        isVolatile: true,\r\n        returnNumberType: NumberType.NUMBER_DATE\r\n    },\r\n    'EDATE': {\r\n        method: 'edate',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_DATE\r\n    },\r\n    'DAYS360': {\r\n        method: 'days360',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.BOOLEAN, defaultValue: false },\r\n        ],\r\n    },\r\n    'DATEDIF': {\r\n        method: 'datedif',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.STRING },\r\n        ],\r\n    },\r\n    'YEARFRAC': {\r\n        method: 'yearfrac',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.INTEGER, defaultValue: 0, minValue: 0, maxValue: 4 },\r\n        ],\r\n    },\r\n    'INTERVAL': {\r\n        method: 'interval',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ],\r\n    },\r\n    'NETWORKDAYS': {\r\n        method: 'networkdays',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.RANGE, optionalArg: true }\r\n        ],\r\n    },\r\n    'NETWORKDAYS.INTL': {\r\n        method: 'networkdaysintl',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NOERROR, defaultValue: 1 },\r\n            { argumentType: ArgumentTypes.RANGE, optionalArg: true }\r\n        ],\r\n    },\r\n    'WORKDAY': {\r\n        method: 'workday',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.RANGE, optionalArg: true }\r\n        ],\r\n    },\r\n    'WORKDAY.INTL': {\r\n        method: 'workdayintl',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NOERROR, defaultValue: 1 },\r\n            { argumentType: ArgumentTypes.RANGE, optionalArg: true }\r\n        ],\r\n    },\r\n};\r\n/**\r\n * Returns i such that:\r\n * sortedArray[i-1] < val <= sortedArray[i]\r\n *\r\n */\r\nfunction lowerBound(val, sortedArray) {\r\n    if (sortedArray.length === 0) {\r\n        return 0;\r\n    }\r\n    if (val <= sortedArray[0]) {\r\n        return 0;\r\n    }\r\n    if (sortedArray[sortedArray.length - 1] < val) {\r\n        return sortedArray.length;\r\n    }\r\n    let lower = 0; //sortedArray[lower] < val\r\n    let upper = sortedArray.length - 1; //sortedArray[upper] >= val\r\n    while (lower + 1 < upper) {\r\n        const mid = Math.floor((upper + lower) / 2);\r\n        if (sortedArray[mid] >= val) {\r\n            upper = mid;\r\n        }\r\n        else {\r\n            lower = mid;\r\n        }\r\n    }\r\n    return upper;\r\n}\r\nfunction computeWeekendPattern(weekend) {\r\n    var _a;\r\n    if (typeof weekend !== 'number' && typeof weekend !== 'string') {\r\n        return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\r\n    }\r\n    if (typeof weekend === 'string') {\r\n        if (weekend.length !== 7 || !/^(0|1)*$/.test(weekend) || weekend === '1111111') {\r\n            return new CellError(ErrorType.NUM, ErrorMessage.WeekendString);\r\n        }\r\n        else {\r\n            return weekend;\r\n        }\r\n    }\r\n    else {\r\n        return (_a = workdayPatterns.get(weekend)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.NUM, ErrorMessage.BadMode);\r\n    }\r\n}\r\nconst weekdayOffsets = new Map([[1, 0], [2, 1], [11, 1], [12, 2], [13, 3], [14, 4], [15, 5], [16, 6], [17, 0]]);\r\nconst workdayPatterns = new Map([\r\n    [1, '0000011'],\r\n    [2, '1000001'],\r\n    [3, '1100000'],\r\n    [4, '0110000'],\r\n    [5, '0011000'],\r\n    [6, '0001100'],\r\n    [7, '0000110'],\r\n    [11, '0000001'],\r\n    [12, '1000000'],\r\n    [13, '0100000'],\r\n    [14, '0010000'],\r\n    [15, '0001000'],\r\n    [16, '0000100'],\r\n    [17, '0000010'],\r\n]);\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class DegreesPlugin extends FunctionPlugin {\r\n    degrees(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DEGREES'), (arg) => arg * (180 / Math.PI));\r\n    }\r\n}\r\nDegreesPlugin.implementedFunctions = {\r\n    'DEGREES': {\r\n        method: 'degrees',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class DeltaPlugin extends FunctionPlugin {\r\n    delta(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DELTA'), (left, right) => (left === right ? 1 : 0));\r\n    }\r\n}\r\nDeltaPlugin.implementedFunctions = {\r\n    'DELTA': {\r\n        method: 'delta',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class ExpPlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to EXP(value)\r\n     *\r\n     * Calculates the exponent for basis e\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    exp(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('EXP'), Math.exp);\r\n    }\r\n}\r\nExpPlugin.implementedFunctions = {\r\n    'EXP': {\r\n        method: 'exp',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { EmptyValue, getRawValue, isExtendedNumber, NumberType } from '../InterpreterValue';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class FinancialPlugin extends FunctionPlugin {\r\n    pmt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('PMT'), pmtCore);\r\n    }\r\n    ipmt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IPMT'), ipmtCore);\r\n    }\r\n    ppmt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('PPMT'), ppmtCore);\r\n    }\r\n    fv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FV'), fvCore);\r\n    }\r\n    cumipmt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CUMIPMT'), (rate, periods, value, start, end, type) => {\r\n            if (start > end) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.EndStartPeriod);\r\n            }\r\n            let acc = 0;\r\n            for (let i = start; i <= end; i++) {\r\n                acc += ipmtCore(rate, i, periods, value, 0, type);\r\n            }\r\n            return acc;\r\n        });\r\n    }\r\n    cumprinc(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CUMPRINC'), (rate, periods, value, start, end, type) => {\r\n            if (start > end) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.EndStartPeriod);\r\n            }\r\n            let acc = 0;\r\n            for (let i = start; i <= end; i++) {\r\n                acc += ppmtCore(rate, i, periods, value, 0, type);\r\n            }\r\n            return acc;\r\n        });\r\n    }\r\n    db(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DB'), (cost, salvage, life, period, month) => {\r\n            if ((month === 12 && period > life) || (period > life + 1)) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.PeriodLong);\r\n            }\r\n            if (salvage >= cost) {\r\n                return 0;\r\n            }\r\n            const rate = Math.round((1 - Math.pow(salvage / cost, 1 / life)) * 1000) / 1000;\r\n            const initial = cost * rate * month / 12;\r\n            if (period === 1) {\r\n                return initial;\r\n            }\r\n            let total = initial;\r\n            for (let i = 0; i < period - 2; i++) {\r\n                total += (cost - total) * rate;\r\n            }\r\n            if (period === life + 1) {\r\n                return (cost - total) * rate * (12 - month) / 12;\r\n            }\r\n            return (cost - total) * rate;\r\n        });\r\n    }\r\n    ddb(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DDB'), (cost, salvage, life, period, factor) => {\r\n            if (period > life) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            let rate = factor / life;\r\n            let oldValue;\r\n            if (rate >= 1) {\r\n                rate = 1;\r\n                if (period === 1) {\r\n                    oldValue = cost;\r\n                }\r\n                else {\r\n                    oldValue = 0;\r\n                }\r\n            }\r\n            else {\r\n                oldValue = cost * Math.pow(1 - rate, period - 1);\r\n            }\r\n            const newValue = cost * Math.pow(1 - rate, period);\r\n            return Math.max(oldValue - Math.max(salvage, newValue), 0);\r\n        });\r\n    }\r\n    dollarde(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DOLLARDE'), (dollar, fraction) => {\r\n            if (fraction < 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            fraction = Math.trunc(fraction);\r\n            while (fraction > 10) {\r\n                fraction /= 10;\r\n            }\r\n            return Math.trunc(dollar) + (dollar - Math.trunc(dollar)) * 10 / fraction;\r\n        });\r\n    }\r\n    dollarfr(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DOLLARFR'), (dollar, fraction) => {\r\n            if (fraction < 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            fraction = Math.trunc(fraction);\r\n            while (fraction > 10) {\r\n                fraction /= 10;\r\n            }\r\n            return Math.trunc(dollar) + (dollar - Math.trunc(dollar)) * fraction / 10;\r\n        });\r\n    }\r\n    effect(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('EFFECT'), (rate, periods) => {\r\n            periods = Math.trunc(periods);\r\n            return Math.pow(1 + rate / periods, periods) - 1;\r\n        });\r\n    }\r\n    ispmt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISPMT'), (rate, period, periods, value) => {\r\n            if (periods === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            return value * rate * (period / periods - 1);\r\n        });\r\n    }\r\n    nominal(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NOMINAL'), (rate, periods) => {\r\n            periods = Math.trunc(periods);\r\n            return (Math.pow(rate + 1, 1 / periods) - 1) * periods;\r\n        });\r\n    }\r\n    nper(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NPER'), (rate, payment, present, future, type) => {\r\n            if (rate === 0) {\r\n                if (payment === 0) {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO);\r\n                }\r\n                return (-present - future) / payment;\r\n            }\r\n            if (type) {\r\n                payment *= 1 + rate;\r\n            }\r\n            return Math.log((payment - future * rate) / (present * rate + payment)) / Math.log(1 + rate);\r\n        });\r\n    }\r\n    rate(ast, state) {\r\n        // Newton's method: https://en.wikipedia.org/wiki/Newton%27s_method\r\n        return this.runFunction(ast.args, state, this.metadata('RATE'), (periods, payment, present, future, type, guess) => {\r\n            if (guess <= -1) {\r\n                return new CellError(ErrorType.VALUE);\r\n            }\r\n            const epsMax = 1e-7;\r\n            const iterMax = 50;\r\n            let rate = guess;\r\n            type = type ? 1 : 0;\r\n            for (let i = 0; i < iterMax; i++) {\r\n                if (rate <= -1) {\r\n                    return new CellError(ErrorType.NUM);\r\n                }\r\n                let y;\r\n                if (Math.abs(rate) < epsMax) {\r\n                    y = present * (1 + periods * rate) + payment * (1 + rate * type) * periods + future;\r\n                }\r\n                else {\r\n                    const f = Math.pow(1 + rate, periods);\r\n                    y = present * f + payment * (1 / rate + type) * (f - 1) + future;\r\n                }\r\n                if (Math.abs(y) < epsMax) {\r\n                    return rate;\r\n                }\r\n                let dy;\r\n                if (Math.abs(rate) < epsMax) {\r\n                    dy = present * periods + payment * type * periods;\r\n                }\r\n                else {\r\n                    const f = Math.pow(1 + rate, periods);\r\n                    const df = periods * Math.pow(1 + rate, periods - 1);\r\n                    dy = present * df + payment * (1 / rate + type) * df + payment * (-1 / (rate * rate)) * (f - 1);\r\n                }\r\n                rate -= y / dy;\r\n            }\r\n            return new CellError(ErrorType.NUM);\r\n        });\r\n    }\r\n    pv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('PV'), (rate, periods, payment, future, type) => {\r\n            type = type ? 1 : 0;\r\n            if (rate === -1) {\r\n                if (periods === 0) {\r\n                    return new CellError(ErrorType.NUM);\r\n                }\r\n                else {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO);\r\n                }\r\n            }\r\n            if (rate === 0) {\r\n                return -payment * periods - future;\r\n            }\r\n            else {\r\n                return ((1 - Math.pow(1 + rate, periods)) * payment * (1 + rate * type) / rate - future) / Math.pow(1 + rate, periods);\r\n            }\r\n        });\r\n    }\r\n    rri(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('RRI'), (periods, present, future) => {\r\n            if (present === 0 || (future < 0 && present > 0) || (future > 0 && present < 0)) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            return Math.pow(future / present, 1 / periods) - 1;\r\n        });\r\n    }\r\n    sln(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SLN'), (cost, salvage, life) => {\r\n            if (life === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            return (cost - salvage) / life;\r\n        });\r\n    }\r\n    syd(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SYD'), (cost, salvage, life, period) => {\r\n            if (period > life) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            return ((cost - salvage) * (life - period + 1) * 2) / (life * (life + 1));\r\n        });\r\n    }\r\n    tbilleq(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TBILLEQ'), (settlement, maturity, discount) => {\r\n            settlement = Math.round(settlement);\r\n            maturity = Math.round(maturity);\r\n            if (settlement >= maturity) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            const startDate = this.dateTimeHelper.numberToSimpleDate(settlement);\r\n            const endDate = this.dateTimeHelper.numberToSimpleDate(maturity);\r\n            if (endDate.year > startDate.year + 1 || (endDate.year === startDate.year + 1 && (endDate.month > startDate.month || (endDate.month === startDate.month && endDate.day > startDate.day)))) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            const denom = 360 - discount * (maturity - settlement);\r\n            if (denom === 0) {\r\n                return 0;\r\n            }\r\n            if (denom < 0) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            return 365 * discount / denom;\r\n        });\r\n    }\r\n    tbillprice(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TBILLPRICE'), (settlement, maturity, discount) => {\r\n            settlement = Math.round(settlement);\r\n            maturity = Math.round(maturity);\r\n            if (settlement >= maturity) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            const startDate = this.dateTimeHelper.numberToSimpleDate(settlement);\r\n            const endDate = this.dateTimeHelper.numberToSimpleDate(maturity);\r\n            if (endDate.year > startDate.year + 1 || (endDate.year === startDate.year + 1 && (endDate.month > startDate.month || (endDate.month === startDate.month && endDate.day > startDate.day)))) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            const denom = 360 - discount * (maturity - settlement);\r\n            if (denom === 0) {\r\n                return 0;\r\n            }\r\n            if (denom < 0) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            return 100 * (1 - discount * (maturity - settlement) / 360);\r\n        });\r\n    }\r\n    tbillyield(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TBILLYIELD'), (settlement, maturity, price) => {\r\n            settlement = Math.round(settlement);\r\n            maturity = Math.round(maturity);\r\n            if (settlement >= maturity) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            const startDate = this.dateTimeHelper.numberToSimpleDate(settlement);\r\n            const endDate = this.dateTimeHelper.numberToSimpleDate(maturity);\r\n            if (endDate.year > startDate.year + 1 || (endDate.year === startDate.year + 1 && (endDate.month > startDate.month || (endDate.month === startDate.month && endDate.day > startDate.day)))) {\r\n                return new CellError(ErrorType.NUM);\r\n            }\r\n            return (100 - price) * 360 / (price * (maturity - settlement));\r\n        });\r\n    }\r\n    fvschedule(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FVSCHEDULE'), (value, ratios) => {\r\n            const vals = ratios.valuesFromTopLeftCorner();\r\n            for (const val of vals) {\r\n                if (val instanceof CellError) {\r\n                    return val;\r\n                }\r\n            }\r\n            for (const val of vals) {\r\n                if (isExtendedNumber(val)) {\r\n                    value *= 1 + getRawValue(val);\r\n                }\r\n                else if (val !== EmptyValue) {\r\n                    return new CellError(ErrorType.VALUE, ErrorMessage.NumberExpected);\r\n                }\r\n            }\r\n            return value;\r\n        });\r\n    }\r\n    npv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NPV'), (rate, ...args) => {\r\n            const coerced = this.arithmeticHelper.coerceNumbersExactRanges(args);\r\n            if (coerced instanceof CellError) {\r\n                return coerced;\r\n            }\r\n            return npvCore(rate, coerced);\r\n        });\r\n    }\r\n    mirr(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MIRR'), (range, frate, rrate) => {\r\n            const vals = this.arithmeticHelper.manyToExactNumbers(range.valuesFromTopLeftCorner());\r\n            if (vals instanceof CellError) {\r\n                return vals;\r\n            }\r\n            let posFlag = false;\r\n            let negFlag = false;\r\n            const posValues = [];\r\n            const negValues = [];\r\n            for (const val of vals) {\r\n                if (val > 0) {\r\n                    posFlag = true;\r\n                    posValues.push(val);\r\n                    negValues.push(0);\r\n                }\r\n                else if (val < 0) {\r\n                    negFlag = true;\r\n                    negValues.push(val);\r\n                    posValues.push(0);\r\n                }\r\n                else {\r\n                    negValues.push(0);\r\n                    posValues.push(0);\r\n                }\r\n            }\r\n            if (!posFlag || !negFlag) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            const n = vals.length;\r\n            const nom = npvCore(rrate, posValues);\r\n            if (nom instanceof CellError) {\r\n                return nom;\r\n            }\r\n            const denom = npvCore(frate, negValues);\r\n            if (denom instanceof CellError) {\r\n                return denom;\r\n            }\r\n            return Math.pow((-nom * Math.pow(1 + rrate, n) / denom / (1 + frate)), 1 / (n - 1)) - 1;\r\n        });\r\n    }\r\n    pduration(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('PDURATION'), (rate, pv, fv) => (Math.log(fv) - Math.log(pv)) / Math.log(1 + rate));\r\n    }\r\n    xnpv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('XNPV'), (rate, values, dates) => {\r\n            const valArr = values.valuesFromTopLeftCorner();\r\n            for (const val of valArr) {\r\n                if (typeof val !== 'number') {\r\n                    return new CellError(ErrorType.VALUE, ErrorMessage.NumberExpected);\r\n                }\r\n            }\r\n            const valArrNum = valArr;\r\n            const dateArr = dates.valuesFromTopLeftCorner();\r\n            for (const date of dateArr) {\r\n                if (typeof date !== 'number') {\r\n                    return new CellError(ErrorType.VALUE, ErrorMessage.NumberExpected);\r\n                }\r\n            }\r\n            const dateArrNum = dateArr;\r\n            if (dateArrNum.length !== valArrNum.length) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.EqualLength);\r\n            }\r\n            const n = dateArrNum.length;\r\n            let ret = 0;\r\n            if (dateArrNum[0] < 0) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n            }\r\n            for (let i = 0; i < n; i++) {\r\n                dateArrNum[i] = Math.floor(dateArrNum[i]);\r\n                if (dateArrNum[i] < dateArrNum[0]) {\r\n                    return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n                }\r\n                ret += valArrNum[i] / Math.pow(1 + rate, (dateArrNum[i] - dateArrNum[0]) / 365);\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n}\r\nFinancialPlugin.implementedFunctions = {\r\n    'PMT': {\r\n        method: 'pmt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'IPMT': {\r\n        method: 'ipmt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'PPMT': {\r\n        method: 'ppmt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'FV': {\r\n        method: 'fv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'CUMIPMT': {\r\n        method: 'cumipmt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0, maxValue: 1 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'CUMPRINC': {\r\n        method: 'cumprinc',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0, maxValue: 1 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'DB': {\r\n        method: 'db',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1, maxValue: 12, defaultValue: 12 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'DDB': {\r\n        method: 'ddb',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, defaultValue: 2 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'DOLLARDE': {\r\n        method: 'dollarde',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ],\r\n    },\r\n    'DOLLARFR': {\r\n        method: 'dollarfr',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ],\r\n    },\r\n    'EFFECT': {\r\n        method: 'effect',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_PERCENT\r\n    },\r\n    'ISPMT': {\r\n        method: 'ispmt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n    },\r\n    'NOMINAL': {\r\n        method: 'nominal',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_PERCENT\r\n    },\r\n    'NPER': {\r\n        method: 'nper',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n        ],\r\n    },\r\n    'PV': {\r\n        method: 'pv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'RATE': {\r\n        method: 'rate',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0.1 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_PERCENT\r\n    },\r\n    'RRI': {\r\n        method: 'rri',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_PERCENT\r\n    },\r\n    'SLN': {\r\n        method: 'sln',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'SYD': {\r\n        method: 'syd',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'TBILLEQ': {\r\n        method: 'tbilleq',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_PERCENT\r\n    },\r\n    'TBILLPRICE': {\r\n        method: 'tbillprice',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'TBILLYIELD': {\r\n        method: 'tbillyield',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_PERCENT\r\n    },\r\n    'FVSCHEDULE': {\r\n        method: 'fvschedule',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'NPV': {\r\n        method: 'npv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n        returnNumberType: NumberType.NUMBER_CURRENCY\r\n    },\r\n    'MIRR': {\r\n        method: 'mirr',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n        returnNumberType: NumberType.NUMBER_PERCENT\r\n    },\r\n    'PDURATION': {\r\n        method: 'pduration',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n        ],\r\n    },\r\n    'XNPV': {\r\n        method: 'xnpv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: -1 },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n    },\r\n};\r\nfunction pmtCore(rate, periods, present, future, type) {\r\n    if (rate === 0) {\r\n        return (-present - future) / periods;\r\n    }\r\n    else {\r\n        const term = Math.pow(1 + rate, periods);\r\n        return (future * rate + present * rate * term) * (type ? 1 / (1 + rate) : 1) / (1 - term);\r\n    }\r\n}\r\nfunction ipmtCore(rate, period, periods, present, future, type) {\r\n    const payment = pmtCore(rate, periods, present, future, type);\r\n    if (period === 1) {\r\n        return rate * (type ? 0 : -present);\r\n    }\r\n    else {\r\n        return rate * (type ? fvCore(rate, period - 2, payment, present, type) - payment : fvCore(rate, period - 1, payment, present, type));\r\n    }\r\n}\r\nfunction fvCore(rate, periods, payment, value, type) {\r\n    if (rate === 0) {\r\n        return -value - payment * periods;\r\n    }\r\n    else {\r\n        const term = Math.pow(1 + rate, periods);\r\n        return payment * (type ? (1 + rate) : 1) * (1 - term) / rate - value * term;\r\n    }\r\n}\r\nfunction ppmtCore(rate, period, periods, present, future, type) {\r\n    return pmtCore(rate, periods, present, future, type) - ipmtCore(rate, period, periods, present, future, type);\r\n}\r\nfunction npvCore(rate, args) {\r\n    let acc = 0;\r\n    for (let i = args.length - 1; i >= 0; i--) {\r\n        acc += args[i];\r\n        if (rate === -1) {\r\n            if (acc === 0) {\r\n                continue;\r\n            }\r\n            else {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n        }\r\n        acc /= 1 + rate;\r\n    }\r\n    return acc;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { FunctionPlugin } from '../index';\r\nimport { ArgumentTypes } from './FunctionPlugin';\r\nexport class FormulaTextPlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to FORMULATEXT(value)\r\n     *\r\n     * Returns a formula in a given cell as a string.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    formulatext(ast, state) {\r\n        return this.runFunctionWithReferenceArgument(ast.args, state, this.metadata('FORMULATEXT'), () => new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber), (cellReference) => { var _a; return (_a = this.serialization.getCellFormula(cellReference)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.NA, ErrorMessage.Formula); });\r\n    }\r\n}\r\nFormulaTextPlugin.implementedFunctions = {\r\n    'FORMULATEXT': {\r\n        method: 'formulatext',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR }\r\n        ],\r\n        doesNotNeedArgumentsToBeComputed: true,\r\n        isDependentOnSheetStructureChange: true,\r\n        vectorizationForbidden: true,\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { FormulaVertex } from '../../DependencyGraph/FormulaCellVertex';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { AstNodeType } from '../../parser';\r\nimport { EmptyValue, isExtendedNumber } from '../InterpreterValue';\r\nimport { SimpleRangeValue } from '../SimpleRangeValue';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\n/**\r\n * Interpreter plugin containing information functions\r\n */\r\nexport class InformationPlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to ISBINARY(value)\r\n     *\r\n     * Returns true if provided value is a valid binary number\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    isbinary(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISBINARY'), (arg) => /^[01]{1,10}$/.test(arg));\r\n    }\r\n    /**\r\n     * Corresponds to ISERR(value)\r\n     *\r\n     * Returns true if provided value is an error except #N/A!\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    iserr(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISERR'), (arg) => (arg instanceof CellError && arg.type !== ErrorType.NA));\r\n    }\r\n    /**\r\n     * Corresponds to ISERROR(value)\r\n     *\r\n     * Checks whether provided value is an error\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    iserror(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISERROR'), (arg) => (arg instanceof CellError));\r\n    }\r\n    /**\r\n     * Corresponds to ISFORMULA(value)\r\n     *\r\n     * Checks whether referenced cell is a formula\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    isformula(ast, state) {\r\n        return this.runFunctionWithReferenceArgument(ast.args, state, this.metadata('ISFORMULA'), () => new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber), (reference) => {\r\n            const vertex = this.dependencyGraph.addressMapping.getCell(reference);\r\n            return vertex instanceof FormulaVertex;\r\n        });\r\n    }\r\n    /**\r\n     * Corresponds to ISBLANK(value)\r\n     *\r\n     * Checks whether provided cell reference is empty\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    isblank(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISBLANK'), (arg) => (arg === EmptyValue));\r\n    }\r\n    /**\r\n     * Corresponds to ISNA(value)\r\n     *\r\n     * Returns true if provided value is #N/A! error\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    isna(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISNA'), (arg) => (arg instanceof CellError && arg.type == ErrorType.NA));\r\n    }\r\n    /**\r\n     * Corresponds to ISNUMBER(value)\r\n     *\r\n     * Checks whether provided cell reference is a number\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    isnumber(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISNUMBER'), isExtendedNumber);\r\n    }\r\n    /**\r\n     * Corresponds to ISLOGICAL(value)\r\n     *\r\n     * Checks whether provided cell reference is of logical type\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    islogical(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISLOGICAL'), (arg) => (typeof arg === 'boolean'));\r\n    }\r\n    /**\r\n     * Corresponds to ISREF(value)\r\n     *\r\n     * Returns true if provided value is #REF! error\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    isref(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISREF'), (arg) => (arg instanceof CellError && (arg.type == ErrorType.REF || arg.type == ErrorType.CYCLE)));\r\n    }\r\n    /**\r\n     * Corresponds to ISTEXT(value)\r\n     *\r\n     * Checks whether provided cell reference is of logical type\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    istext(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISTEXT'), (arg) => (typeof arg === 'string'));\r\n    }\r\n    /**\r\n     * Corresponds to ISNONTEXT(value)\r\n     *\r\n     * Checks whether provided cell reference is of logical type\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    isnontext(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISNONTEXT'), (arg) => !(typeof arg === 'string'));\r\n    }\r\n    /**\r\n     * Corresponds to COLUMN(reference)\r\n     *\r\n     * Returns column number of a reference or a formula cell if reference not provided\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    column(ast, state) {\r\n        return this.runFunctionWithReferenceArgument(ast.args, state, this.metadata('COLUMN'), () => state.formulaAddress.col + 1, (reference) => reference.col + 1);\r\n    }\r\n    /**\r\n     * Corresponds to COLUMNS(range)\r\n     *\r\n     * Returns number of columns in provided range of cells\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    columns(ast, state) {\r\n        if (ast.args.length !== 1) {\r\n            return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\r\n        }\r\n        if (ast.args.some((astIt) => astIt.type === AstNodeType.EMPTY)) {\r\n            return new CellError(ErrorType.NUM, ErrorMessage.EmptyArg);\r\n        }\r\n        let argAst = ast.args[0];\r\n        while (argAst.type === AstNodeType.PARENTHESIS) {\r\n            argAst = argAst.expression;\r\n        }\r\n        if (argAst.type === AstNodeType.CELL_RANGE || argAst.type === AstNodeType.COLUMN_RANGE) {\r\n            return argAst.end.col - argAst.start.col + 1;\r\n        }\r\n        else if (argAst.type === AstNodeType.CELL_REFERENCE) {\r\n            return 1;\r\n        }\r\n        else if (argAst.type === AstNodeType.ROW_RANGE) {\r\n            return this.config.maxColumns;\r\n        }\r\n        else {\r\n            const val = this.evaluateAst(argAst, state);\r\n            if (val instanceof SimpleRangeValue) {\r\n                return val.width();\r\n            }\r\n            else if (val instanceof CellError) {\r\n                return val;\r\n            }\r\n            else {\r\n                return 1;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Corresponds to ROW(reference)\r\n     *\r\n     * Returns row number of a reference or a formula cell if reference not provided\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    row(ast, state) {\r\n        return this.runFunctionWithReferenceArgument(ast.args, state, this.metadata('ROW'), () => state.formulaAddress.row + 1, (reference) => reference.row + 1);\r\n    }\r\n    /**\r\n     * Corresponds to ROWS(range)\r\n     *\r\n     * Returns number of rows in provided range of cells\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    rows(ast, state) {\r\n        if (ast.args.length !== 1) {\r\n            return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\r\n        }\r\n        if (ast.args.some((astIt) => astIt.type === AstNodeType.EMPTY)) {\r\n            return new CellError(ErrorType.NUM, ErrorMessage.EmptyArg);\r\n        }\r\n        let argAst = ast.args[0];\r\n        while (argAst.type === AstNodeType.PARENTHESIS) {\r\n            argAst = argAst.expression;\r\n        }\r\n        if (argAst.type === AstNodeType.CELL_RANGE || argAst.type === AstNodeType.ROW_RANGE) {\r\n            return argAst.end.row - argAst.start.row + 1;\r\n        }\r\n        else if (argAst.type === AstNodeType.CELL_REFERENCE) {\r\n            return 1;\r\n        }\r\n        else if (argAst.type === AstNodeType.COLUMN_RANGE) {\r\n            return this.config.maxRows;\r\n        }\r\n        else {\r\n            const val = this.evaluateAst(argAst, state);\r\n            if (val instanceof SimpleRangeValue) {\r\n                return val.height();\r\n            }\r\n            else if (val instanceof CellError) {\r\n                return val;\r\n            }\r\n            else {\r\n                return 1;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Corresponds to INDEX\r\n     *\r\n     * Returns specific position in 2d array.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    index(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('INDEX'), (rangeValue, row, col) => {\r\n            var _a, _b, _c, _d, _e, _f;\r\n            if (col < 1 || row < 1) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\r\n            }\r\n            if (col > rangeValue.width() || row > rangeValue.height()) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            return (_f = (_c = (_b = (_a = rangeValue === null || rangeValue === void 0 ? void 0 : rangeValue.data) === null || _a === void 0 ? void 0 : _a[row - 1]) === null || _b === void 0 ? void 0 : _b[col - 1]) !== null && _c !== void 0 ? _c : (_e = (_d = rangeValue === null || rangeValue === void 0 ? void 0 : rangeValue.data) === null || _d === void 0 ? void 0 : _d[0]) === null || _e === void 0 ? void 0 : _e[0]) !== null && _f !== void 0 ? _f : new CellError(ErrorType.VALUE, ErrorMessage.CellRangeExpected);\r\n        });\r\n    }\r\n    /**\r\n     * Corresponds to NA()\r\n     *\r\n     * Returns #N/A!\r\n     *\r\n     * @param _ast\r\n     * @param _state\r\n     */\r\n    na(_ast, _state) {\r\n        return new CellError(ErrorType.NA);\r\n    }\r\n    /**\r\n     * Corresponds to SHEET(value)\r\n     *\r\n     * Returns sheet number of a given value or a formula sheet number if no argument is provided\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     * */\r\n    sheet(ast, state) {\r\n        return this.runFunctionWithReferenceArgument(ast.args, state, this.metadata('SHEET'), () => state.formulaAddress.sheet + 1, (reference) => reference.sheet + 1, (value) => {\r\n            const sheetNumber = this.dependencyGraph.sheetMapping.get(value);\r\n            if (sheetNumber !== undefined) {\r\n                return sheetNumber + 1;\r\n            }\r\n            else {\r\n                return new CellError(ErrorType.NA, ErrorMessage.SheetRef);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Corresponds to SHEETS(value)\r\n     *\r\n     * Returns number of sheet of a given reference or number of all sheets in workbook when no argument is provided.\r\n     * It returns always 1 for a valid reference as 3D references are not supported.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     * */\r\n    sheets(ast, state) {\r\n        return this.runFunctionWithReferenceArgument(ast.args, state, this.metadata('SHEETS'), () => this.dependencyGraph.sheetMapping.numberOfSheets(), // return number of sheets if no argument\r\n        () => 1, // return 1 for valid reference\r\n        () => new CellError(ErrorType.VALUE, ErrorMessage.CellRefExpected) // error otherwise\r\n        );\r\n    }\r\n}\r\nInformationPlugin.implementedFunctions = {\r\n    'COLUMN': {\r\n        method: 'column',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR, optional: true }\r\n        ],\r\n        isDependentOnSheetStructureChange: true,\r\n        doesNotNeedArgumentsToBeComputed: true,\r\n        vectorizationForbidden: true,\r\n    },\r\n    'COLUMNS': {\r\n        method: 'columns',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE }\r\n        ],\r\n        isDependentOnSheetStructureChange: true,\r\n        doesNotNeedArgumentsToBeComputed: true,\r\n        vectorizationForbidden: true,\r\n    },\r\n    'ISBINARY': {\r\n        method: 'isbinary',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ]\r\n    },\r\n    'ISERR': {\r\n        method: 'iserr',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR }\r\n        ]\r\n    },\r\n    'ISFORMULA': {\r\n        method: 'isformula',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR }\r\n        ],\r\n        doesNotNeedArgumentsToBeComputed: true,\r\n        vectorizationForbidden: true,\r\n    },\r\n    'ISNA': {\r\n        method: 'isna',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR }\r\n        ]\r\n    },\r\n    'ISREF': {\r\n        method: 'isref',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR }\r\n        ],\r\n        vectorizationForbidden: true,\r\n    },\r\n    'ISERROR': {\r\n        method: 'iserror',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR }\r\n        ]\r\n    },\r\n    'ISBLANK': {\r\n        method: 'isblank',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR }\r\n        ]\r\n    },\r\n    'ISNUMBER': {\r\n        method: 'isnumber',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR }\r\n        ]\r\n    },\r\n    'ISLOGICAL': {\r\n        method: 'islogical',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR }\r\n        ]\r\n    },\r\n    'ISTEXT': {\r\n        method: 'istext',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR }\r\n        ]\r\n    },\r\n    'ISNONTEXT': {\r\n        method: 'isnontext',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR }\r\n        ]\r\n    },\r\n    'INDEX': {\r\n        method: 'index',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n    'NA': {\r\n        method: 'na',\r\n        parameters: [],\r\n    },\r\n    'ROW': {\r\n        method: 'row',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR, optional: true }\r\n        ],\r\n        isDependentOnSheetStructureChange: true,\r\n        doesNotNeedArgumentsToBeComputed: true,\r\n        vectorizationForbidden: true,\r\n    },\r\n    'ROWS': {\r\n        method: 'rows',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE }\r\n        ],\r\n        isDependentOnSheetStructureChange: true,\r\n        doesNotNeedArgumentsToBeComputed: true,\r\n        vectorizationForbidden: true,\r\n    },\r\n    'SHEET': {\r\n        method: 'sheet',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ],\r\n        doesNotNeedArgumentsToBeComputed: true,\r\n        vectorizationForbidden: true,\r\n    },\r\n    'SHEETS': {\r\n        method: 'sheets',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ],\r\n        doesNotNeedArgumentsToBeComputed: true,\r\n        vectorizationForbidden: true,\r\n    }\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class IsEvenPlugin extends FunctionPlugin {\r\n    iseven(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISEVEN'), (val) => (val % 2 === 0));\r\n    }\r\n}\r\nIsEvenPlugin.implementedFunctions = {\r\n    'ISEVEN': {\r\n        method: 'iseven',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class IsOddPlugin extends FunctionPlugin {\r\n    isodd(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ISODD'), (val) => (val % 2 === 1));\r\n    }\r\n}\r\nIsOddPlugin.implementedFunctions = {\r\n    'ISODD': {\r\n        method: 'isodd',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class LogarithmPlugin extends FunctionPlugin {\r\n    log10(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LOG10'), Math.log10);\r\n    }\r\n    log(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LOG'), (arg, base) => Math.log(arg) / Math.log(base));\r\n    }\r\n    ln(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LN'), Math.log);\r\n    }\r\n}\r\nLogarithmPlugin.implementedFunctions = {\r\n    'LOG10': {\r\n        method: 'log10',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'LOG': {\r\n        method: 'log',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 10, greaterThan: 0 },\r\n        ]\r\n    },\r\n    'LN': {\r\n        method: 'ln',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport const PI = parseFloat(Math.PI.toFixed(14));\r\nexport class MathConstantsPlugin extends FunctionPlugin {\r\n    pi(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('PI'), () => PI);\r\n    }\r\n    sqrtpi(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SQRTPI'), (arg) => Math.sqrt(PI * arg));\r\n    }\r\n}\r\nMathConstantsPlugin.implementedFunctions = {\r\n    'PI': {\r\n        method: 'pi',\r\n        parameters: [],\r\n    },\r\n    'SQRTPI': {\r\n        method: 'sqrtpi',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 }\r\n        ],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArraySize } from '../../ArraySize';\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { AstNodeType } from '../../parser';\r\nimport { InterpreterState } from '../InterpreterState';\r\nimport { SimpleRangeValue } from '../SimpleRangeValue';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nfunction arraySizeForMultiplication(leftArraySize, rightArraySize) {\r\n    return new ArraySize(rightArraySize.width, leftArraySize.height);\r\n}\r\nfunction arraySizeForPoolFunction(inputArray, windowSize, stride) {\r\n    return new ArraySize(1 + (inputArray.width - windowSize) / stride, 1 + (inputArray.height - windowSize) / stride);\r\n}\r\nexport class MatrixPlugin extends FunctionPlugin {\r\n    mmult(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MMULT'), (leftMatrix, rightMatrix) => {\r\n            if (!leftMatrix.hasOnlyNumbers() || !rightMatrix.hasOnlyNumbers()) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.NumberRange);\r\n            }\r\n            if (rightMatrix.height() !== leftMatrix.width()) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.ArrayDimensions);\r\n            }\r\n            const outputSize = arraySizeForMultiplication(leftMatrix.size, rightMatrix.size);\r\n            const result = this.createKernel(function (a, b, width) {\r\n                let sum = 0;\r\n                for (let i = 0; i < width; ++i) {\r\n                    sum += a[this.thread.y][i] * b[i][this.thread.x];\r\n                }\r\n                return sum;\r\n            }, outputSize)(leftMatrix.rawNumbers(), rightMatrix.rawNumbers(), leftMatrix.width());\r\n            return SimpleRangeValue.onlyNumbers(result);\r\n        });\r\n    }\r\n    mmultArraySize(ast, state) {\r\n        if (ast.args.length !== 2) {\r\n            return ArraySize.error();\r\n        }\r\n        const metadata = this.metadata('MMULT');\r\n        const subChecks = ast.args.map((arg) => { var _a; return this.arraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false))); });\r\n        const [left, right] = subChecks;\r\n        return arraySizeForMultiplication(left, right);\r\n    }\r\n    maxpool(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MAXPOOL'), (matrix, windowSize, stride = windowSize) => {\r\n            if (!matrix.hasOnlyNumbers()) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.NumberRange);\r\n            }\r\n            const outputSize = arraySizeForPoolFunction(matrix.size, windowSize, stride);\r\n            const result = this.createKernel(function (a, windowSize, stride) {\r\n                const leftCornerX = this.thread.x * stride;\r\n                const leftCornerY = this.thread.y * stride;\r\n                let currentMax = a[leftCornerY][leftCornerX];\r\n                for (let i = 0; i < windowSize; i++) {\r\n                    for (let j = 0; j < windowSize; j++) {\r\n                        currentMax = Math.max(currentMax, a[leftCornerY + i][leftCornerX + j]);\r\n                    }\r\n                }\r\n                return currentMax;\r\n            }, outputSize)(matrix.rawNumbers(), windowSize, stride);\r\n            return SimpleRangeValue.onlyNumbers(result);\r\n        });\r\n    }\r\n    medianpool(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MEDIANPOOL'), (matrix, windowSize, stride = windowSize) => {\r\n            if (!matrix.hasOnlyNumbers()) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.NumberRange);\r\n            }\r\n            const outputSize = arraySizeForPoolFunction(matrix.size, windowSize, stride);\r\n            const result = this.createKernel(function (a, windowSize, stride) {\r\n                const leftCornerX = this.thread.x * stride;\r\n                const leftCornerY = this.thread.y * stride;\r\n                let currentMax = a[leftCornerY][leftCornerX];\r\n                for (let i = 0; i < windowSize; i++) {\r\n                    for (let j = 0; j < windowSize; j++) {\r\n                        currentMax = Math.max(currentMax, a[leftCornerY + i][leftCornerX + j]);\r\n                    }\r\n                }\r\n                let currentMin = a[leftCornerY][leftCornerX];\r\n                for (let i2 = 0; i2 < windowSize; i2++) {\r\n                    for (let j2 = 0; j2 < windowSize; j2++) {\r\n                        currentMin = Math.min(currentMin, a[leftCornerY + i2][leftCornerX + j2]);\r\n                    }\r\n                }\r\n                const numberOfElements = windowSize * windowSize;\r\n                let leftEnd = currentMin;\r\n                let rightEnd = currentMax;\r\n                let result = 42;\r\n                for (let iter = 0; iter < 32; iter++) {\r\n                    const medianGuess = (leftEnd + rightEnd) / 2;\r\n                    let medianGuessCount = 0;\r\n                    for (let i3 = 0; i3 < windowSize; i3++) {\r\n                        for (let j3 = 0; j3 < windowSize; j3++) {\r\n                            if (a[leftCornerY + i3][leftCornerX + j3] > medianGuess) {\r\n                                medianGuessCount++;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (windowSize % 2 === 0) {\r\n                        if (medianGuessCount === numberOfElements / 2) {\r\n                            result = medianGuess;\r\n                            break;\r\n                        }\r\n                        else if (medianGuessCount > numberOfElements / 2) {\r\n                            leftEnd = medianGuess;\r\n                        }\r\n                        else {\r\n                            rightEnd = medianGuess;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (medianGuessCount === (numberOfElements - 1) / 2) {\r\n                            result = medianGuess;\r\n                            break;\r\n                        }\r\n                        else if (medianGuessCount > (numberOfElements - 1) / 2) {\r\n                            leftEnd = medianGuess;\r\n                        }\r\n                        else {\r\n                            rightEnd = medianGuess;\r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n            }, outputSize)(matrix.rawNumbers(), windowSize, stride);\r\n            return SimpleRangeValue.onlyNumbers(result);\r\n        });\r\n    }\r\n    maxpoolArraySize(ast, state) {\r\n        if (ast.args.length < 2 || ast.args.length > 3) {\r\n            return ArraySize.error();\r\n        }\r\n        const metadata = this.metadata('MAXPOOL');\r\n        const subChecks = ast.args.map((arg) => { var _a; return this.arraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false))); });\r\n        const array = subChecks[0];\r\n        const windowArg = ast.args[1];\r\n        let window;\r\n        if (windowArg.type === AstNodeType.NUMBER) {\r\n            window = windowArg.value;\r\n        }\r\n        else {\r\n            window = 1;\r\n        }\r\n        let stride = window;\r\n        if (ast.args.length === 3) {\r\n            const strideArg = ast.args[2];\r\n            if (strideArg.type === AstNodeType.NUMBER) {\r\n                stride = strideArg.value;\r\n            }\r\n            else {\r\n                stride = 1;\r\n            }\r\n        }\r\n        if (window > array.width || window > array.height\r\n            || stride > window\r\n            || (array.width - window) % stride !== 0 || (array.height - window) % stride !== 0) {\r\n            return ArraySize.error();\r\n        }\r\n        return arraySizeForPoolFunction(array, window, stride);\r\n    }\r\n    medianpoolArraySize(ast, state) {\r\n        return this.maxpoolArraySize(ast, state);\r\n    }\r\n    transpose(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TRANSPOSE'), (matrix) => {\r\n            const input = matrix.rawData();\r\n            const inputSize = matrix.size;\r\n            const result = [];\r\n            for (let i = 0; i < inputSize.width; ++i) {\r\n                result[i] = [];\r\n                for (let j = 0; j < inputSize.height; ++j) {\r\n                    result[i][j] = input[j][i];\r\n                }\r\n            }\r\n            return SimpleRangeValue.onlyValues(result);\r\n        });\r\n    }\r\n    transposeArraySize(ast, state) {\r\n        if (ast.args.length !== 1) {\r\n            return ArraySize.error();\r\n        }\r\n        const metadata = this.metadata('MMULT');\r\n        const subChecks = ast.args.map((arg) => { var _a; return this.arraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false))); });\r\n        const [size] = subChecks;\r\n        return new ArraySize(size.height, size.width);\r\n    }\r\n    createKernel(kernel, outputSize) {\r\n        return function (...args) {\r\n            const result = [];\r\n            for (let y = 0; y < outputSize.height; ++y) {\r\n                result.push([]);\r\n                for (let x = 0; x < outputSize.width; ++x) {\r\n                    result[y][x] = kernel.apply({ thread: { x, y } }, args);\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n    }\r\n}\r\nMatrixPlugin.implementedFunctions = {\r\n    'MMULT': {\r\n        method: 'mmult',\r\n        arraySizeMethod: 'mmultArraySize',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n        vectorizationForbidden: true,\r\n    },\r\n    'TRANSPOSE': {\r\n        method: 'transpose',\r\n        arraySizeMethod: 'transposeArraySize',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n        vectorizationForbidden: true,\r\n    },\r\n    'MAXPOOL': {\r\n        method: 'maxpool',\r\n        arraySizeMethod: 'maxpoolArraySize',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true },\r\n        ],\r\n        vectorizationForbidden: true,\r\n    },\r\n    'MEDIANPOOL': {\r\n        method: 'medianpool',\r\n        arraySizeMethod: 'medianpoolArraySize',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true },\r\n        ],\r\n        vectorizationForbidden: true,\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\n/**\r\n * Interpreter plugin containing MEDIAN function\r\n */\r\nexport class MedianPlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to MEDIAN(Number1, Number2, ...).\r\n     *\r\n     * Returns a median of given numbers.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    median(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MEDIAN'), (...args) => {\r\n            const values = this.arithmeticHelper.coerceNumbersExactRanges(args);\r\n            if (values instanceof CellError) {\r\n                return values;\r\n            }\r\n            if (values.length === 0) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.OneValue);\r\n            }\r\n            values.sort((a, b) => (a - b));\r\n            if (values.length % 2 === 0) {\r\n                return (values[(values.length / 2) - 1] + values[values.length / 2]) / 2;\r\n            }\r\n            else {\r\n                return values[Math.floor(values.length / 2)];\r\n            }\r\n        });\r\n    }\r\n    large(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LARGE'), (range, n) => {\r\n            const vals = this.arithmeticHelper.manyToExactNumbers(range.valuesFromTopLeftCorner());\r\n            if (vals instanceof CellError) {\r\n                return vals;\r\n            }\r\n            vals.sort((a, b) => a - b);\r\n            n = Math.trunc(n);\r\n            if (n > vals.length) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            return vals[vals.length - n];\r\n        });\r\n    }\r\n    small(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SMALL'), (range, n) => {\r\n            const vals = this.arithmeticHelper.manyToExactNumbers(range.valuesFromTopLeftCorner());\r\n            if (vals instanceof CellError) {\r\n                return vals;\r\n            }\r\n            vals.sort((a, b) => a - b);\r\n            n = Math.trunc(n);\r\n            if (n > vals.length) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            return vals[n - 1];\r\n        });\r\n    }\r\n}\r\nMedianPlugin.implementedFunctions = {\r\n    'MEDIAN': {\r\n        method: 'median',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'LARGE': {\r\n        method: 'large',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ],\r\n    },\r\n    'SMALL': {\r\n        method: 'small',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class ModuloPlugin extends FunctionPlugin {\r\n    mod(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MOD'), (dividend, divisor) => {\r\n            if (divisor === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            else {\r\n                return dividend % divisor;\r\n            }\r\n        });\r\n    }\r\n}\r\nModuloPlugin.implementedFunctions = {\r\n    'MOD': {\r\n        method: 'mod',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from '../../AbsoluteCellRange';\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { SheetsNotEqual } from '../../errors';\r\nimport { AstNodeType } from '../../parser';\r\nimport { coerceBooleanToNumber } from '../ArithmeticHelper';\r\nimport { EmptyValue, getRawValue, isExtendedNumber } from '../InterpreterValue';\r\nimport { SimpleRangeValue } from '../SimpleRangeValue';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nfunction zeroForInfinite(value) {\r\n    if (isExtendedNumber(value) && !Number.isFinite(getRawValue(value))) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\r\nclass MomentsAggregate {\r\n    constructor(sumsq, sum, count) {\r\n        this.sumsq = sumsq;\r\n        this.sum = sum;\r\n        this.count = count;\r\n    }\r\n    static single(arg) {\r\n        return new MomentsAggregate(arg * arg, arg, 1);\r\n    }\r\n    compose(other) {\r\n        return new MomentsAggregate(this.sumsq + other.sumsq, this.sum + other.sum, this.count + other.count);\r\n    }\r\n    averageValue() {\r\n        if (this.count > 0) {\r\n            return this.sum / this.count;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    varSValue() {\r\n        if (this.count > 1) {\r\n            return (this.sumsq - (this.sum * this.sum) / this.count) / (this.count - 1);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    varPValue() {\r\n        if (this.count > 0) {\r\n            return (this.sumsq - (this.sum * this.sum) / this.count) / this.count;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\nMomentsAggregate.empty = new MomentsAggregate(0, 0, 0);\r\nexport class NumericAggregationPlugin extends FunctionPlugin {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.addWithEpsilonRaw = (left, right) => this.arithmeticHelper.addWithEpsilonRaw(left, right);\r\n    }\r\n    /**\r\n     * Corresponds to SUM(Number1, Number2, ...).\r\n     *\r\n     * Returns a sum of given numbers.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    sum(ast, state) {\r\n        return this.doSum(ast.args, state);\r\n    }\r\n    sumsq(ast, state) {\r\n        return this.reduce(ast.args, state, 0, 'SUMSQ', this.addWithEpsilonRaw, (arg) => Math.pow(getRawValue(arg), 2), strictlyNumbers);\r\n    }\r\n    /**\r\n     * Corresponds to MAX(Number1, Number2, ...).\r\n     *\r\n     * Returns a max of given numbers.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    max(ast, state) {\r\n        return this.doMax(ast.args, state);\r\n    }\r\n    maxa(ast, state) {\r\n        const value = this.reduce(ast.args, state, Number.NEGATIVE_INFINITY, 'MAXA', (left, right) => Math.max(left, right), getRawValue, numbersBooleans);\r\n        return zeroForInfinite(value);\r\n    }\r\n    /**\r\n     * Corresponds to MIN(Number1, Number2, ...).\r\n     *\r\n     * Returns a min of given numbers.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    min(ast, state) {\r\n        return this.doMin(ast.args, state);\r\n    }\r\n    mina(ast, state) {\r\n        const value = this.reduce(ast.args, state, Number.POSITIVE_INFINITY, 'MINA', (left, right) => Math.min(left, right), getRawValue, numbersBooleans);\r\n        return zeroForInfinite(value);\r\n    }\r\n    count(ast, state) {\r\n        return this.doCount(ast.args, state);\r\n    }\r\n    counta(ast, state) {\r\n        return this.doCounta(ast.args, state);\r\n    }\r\n    average(ast, state) {\r\n        return this.doAverage(ast.args, state);\r\n    }\r\n    averagea(ast, state) {\r\n        var _a;\r\n        const result = this.reduce(ast.args, state, MomentsAggregate.empty, '_AGGREGATE_A', (left, right) => left.compose(right), (arg) => MomentsAggregate.single(getRawValue(arg)), numbersBooleans);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            return (_a = result.averageValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\r\n        }\r\n    }\r\n    vars(ast, state) {\r\n        return this.doVarS(ast.args, state);\r\n    }\r\n    varp(ast, state) {\r\n        return this.doVarP(ast.args, state);\r\n    }\r\n    vara(ast, state) {\r\n        var _a;\r\n        const result = this.reduceAggregateA(ast.args, state);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            return (_a = result.varSValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\r\n        }\r\n    }\r\n    varpa(ast, state) {\r\n        var _a;\r\n        const result = this.reduceAggregateA(ast.args, state);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            return (_a = result.varPValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\r\n        }\r\n    }\r\n    stdevs(ast, state) {\r\n        return this.doStdevS(ast.args, state);\r\n    }\r\n    stdevp(ast, state) {\r\n        return this.doStdevP(ast.args, state);\r\n    }\r\n    stdeva(ast, state) {\r\n        const result = this.reduceAggregateA(ast.args, state);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            const val = result.varSValue();\r\n            return val === undefined ? new CellError(ErrorType.DIV_BY_ZERO) : Math.sqrt(val);\r\n        }\r\n    }\r\n    stdevpa(ast, state) {\r\n        const result = this.reduceAggregateA(ast.args, state);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            const val = result.varPValue();\r\n            return val === undefined ? new CellError(ErrorType.DIV_BY_ZERO) : Math.sqrt(val);\r\n        }\r\n    }\r\n    product(ast, state) {\r\n        return this.doProduct(ast.args, state);\r\n    }\r\n    subtotal(ast, state) {\r\n        if (ast.args.length < 2) {\r\n            return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\r\n        }\r\n        const functionType = this.coerceToType(this.evaluateAst(ast.args[0], state), { argumentType: ArgumentTypes.NUMBER }, state);\r\n        const args = ast.args.slice(1);\r\n        switch (functionType) {\r\n            case 1:\r\n            case 101:\r\n                return this.doAverage(args, state);\r\n            case 2:\r\n            case 102:\r\n                return this.doCount(args, state);\r\n            case 3:\r\n            case 103:\r\n                return this.doCounta(args, state);\r\n            case 4:\r\n            case 104:\r\n                return this.doMax(args, state);\r\n            case 5:\r\n            case 105:\r\n                return this.doMin(args, state);\r\n            case 6:\r\n            case 106:\r\n                return this.doProduct(args, state);\r\n            case 7:\r\n            case 107:\r\n                return this.doStdevS(args, state);\r\n            case 8:\r\n            case 108:\r\n                return this.doStdevP(args, state);\r\n            case 9:\r\n            case 109:\r\n                return this.doSum(args, state);\r\n            case 10:\r\n            case 110:\r\n                return this.doVarS(args, state);\r\n            case 11:\r\n            case 111:\r\n                return this.doVarP(args, state);\r\n            default:\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.BadMode);\r\n        }\r\n    }\r\n    reduceAggregate(args, state) {\r\n        return this.reduce(args, state, MomentsAggregate.empty, '_AGGREGATE', (left, right) => {\r\n            return left.compose(right);\r\n        }, (arg) => {\r\n            return MomentsAggregate.single(getRawValue(arg));\r\n        }, strictlyNumbers);\r\n    }\r\n    reduceAggregateA(args, state) {\r\n        return this.reduce(args, state, MomentsAggregate.empty, '_AGGREGATE_A', (left, right) => {\r\n            return left.compose(right);\r\n        }, (arg) => {\r\n            return MomentsAggregate.single(getRawValue(arg));\r\n        }, numbersBooleans);\r\n    }\r\n    doAverage(args, state) {\r\n        var _a;\r\n        const result = this.reduceAggregate(args, state);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            return (_a = result.averageValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\r\n        }\r\n    }\r\n    doVarS(args, state) {\r\n        var _a;\r\n        const result = this.reduceAggregate(args, state);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            return (_a = result.varSValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\r\n        }\r\n    }\r\n    doVarP(args, state) {\r\n        var _a;\r\n        const result = this.reduceAggregate(args, state);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            return (_a = result.varPValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\r\n        }\r\n    }\r\n    doStdevS(args, state) {\r\n        const result = this.reduceAggregate(args, state);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            const val = result.varSValue();\r\n            return val === undefined ? new CellError(ErrorType.DIV_BY_ZERO) : Math.sqrt(val);\r\n        }\r\n    }\r\n    doStdevP(args, state) {\r\n        const result = this.reduceAggregate(args, state);\r\n        if (result instanceof CellError) {\r\n            return result;\r\n        }\r\n        else {\r\n            const val = result.varPValue();\r\n            return val === undefined ? new CellError(ErrorType.DIV_BY_ZERO) : Math.sqrt(val);\r\n        }\r\n    }\r\n    doCount(args, state) {\r\n        return this.reduce(args, state, 0, 'COUNT', (left, right) => left + right, getRawValue, (arg) => (isExtendedNumber(arg)) ? 1 : 0);\r\n    }\r\n    doCounta(args, state) {\r\n        return this.reduce(args, state, 0, 'COUNTA', (left, right) => left + right, getRawValue, (arg) => (arg === EmptyValue) ? 0 : 1);\r\n    }\r\n    doMax(args, state) {\r\n        const value = this.reduce(args, state, Number.NEGATIVE_INFINITY, 'MAX', (left, right) => Math.max(left, right), getRawValue, strictlyNumbers);\r\n        return zeroForInfinite(value);\r\n    }\r\n    doMin(args, state) {\r\n        const value = this.reduce(args, state, Number.POSITIVE_INFINITY, 'MIN', (left, right) => Math.min(left, right), getRawValue, strictlyNumbers);\r\n        return zeroForInfinite(value);\r\n    }\r\n    doSum(args, state) {\r\n        return this.reduce(args, state, 0, 'SUM', this.addWithEpsilonRaw, getRawValue, strictlyNumbers);\r\n    }\r\n    doProduct(args, state) {\r\n        return this.reduce(args, state, 1, 'PRODUCT', (left, right) => left * right, getRawValue, strictlyNumbers);\r\n    }\r\n    /**\r\n     * Reduces procedure arguments with given reducing function\r\n     *\r\n     * @param args\r\n     * @param state\r\n     * @param initialAccValue - \"neutral\" value (equivalent of 0)\r\n     * @param functionName - function name to use as cache key\r\n     * @param reducingFunction - reducing function\r\n     * @param mapFunction\r\n     * @param coercionFunction\r\n     * */\r\n    reduce(args, state, initialAccValue, functionName, reducingFunction, mapFunction, coercionFunction) {\r\n        if (args.length < 1) {\r\n            return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\r\n        }\r\n        return args.reduce((acc, arg) => {\r\n            if (acc instanceof CellError) {\r\n                return acc;\r\n            }\r\n            if (arg.type === AstNodeType.CELL_RANGE || arg.type === AstNodeType.COLUMN_RANGE || arg.type === AstNodeType.ROW_RANGE) {\r\n                const val = this.evaluateRange(arg, state, initialAccValue, functionName, reducingFunction, mapFunction, coercionFunction);\r\n                if (val instanceof CellError) {\r\n                    return val;\r\n                }\r\n                return reducingFunction(val, acc);\r\n            }\r\n            let value;\r\n            value = this.evaluateAst(arg, state);\r\n            if (value instanceof SimpleRangeValue) {\r\n                const coercedRangeValues = Array.from(value.valuesFromTopLeftCorner())\r\n                    .map(coercionFunction)\r\n                    .filter((arg) => (arg !== undefined));\r\n                return coercedRangeValues\r\n                    .map((arg) => {\r\n                    if (arg instanceof CellError) {\r\n                        return arg;\r\n                    }\r\n                    else {\r\n                        return mapFunction(arg);\r\n                    }\r\n                })\r\n                    .reduce((left, right) => {\r\n                    if (left instanceof CellError) {\r\n                        return left;\r\n                    }\r\n                    else if (right instanceof CellError) {\r\n                        return right;\r\n                    }\r\n                    else {\r\n                        return reducingFunction(left, right);\r\n                    }\r\n                }, acc);\r\n            }\r\n            else if (arg.type === AstNodeType.CELL_REFERENCE) {\r\n                value = coercionFunction(value);\r\n                if (value === undefined) {\r\n                    return acc;\r\n                }\r\n            }\r\n            else {\r\n                value = this.coerceScalarToNumberOrError(value);\r\n                value = coercionFunction(value);\r\n                if (value === undefined) {\r\n                    return acc;\r\n                }\r\n            }\r\n            if (value instanceof CellError) {\r\n                return value;\r\n            }\r\n            return reducingFunction(acc, mapFunction(value));\r\n        }, initialAccValue);\r\n    }\r\n    /**\r\n     * Performs range operation on given range\r\n     *\r\n     * @param ast - cell range ast\r\n     * @param state\r\n     * @param initialAccValue - initial accumulator value for reducing function\r\n     * @param functionName - function name to use as cache key\r\n     * @param reducingFunction - reducing function\r\n     * @param mapFunction\r\n     * @param coercionFunction\r\n     */\r\n    evaluateRange(ast, state, initialAccValue, functionName, reducingFunction, mapFunction, coercionFunction) {\r\n        let range;\r\n        try {\r\n            range = AbsoluteCellRange.fromAst(ast, state.formulaAddress);\r\n        }\r\n        catch (err) {\r\n            if (err instanceof SheetsNotEqual) {\r\n                return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\r\n            }\r\n            else {\r\n                throw err;\r\n            }\r\n        }\r\n        const rangeVertex = this.dependencyGraph.getRange(range.start, range.end);\r\n        if (rangeVertex === undefined) {\r\n            throw new Error('Range does not exists in graph');\r\n        }\r\n        let value = rangeVertex.getFunctionValue(functionName);\r\n        if (value === undefined) {\r\n            const rangeValues = this.getRangeValues(functionName, range, rangeVertex, mapFunction, coercionFunction);\r\n            value = rangeValues.reduce((arg1, arg2) => {\r\n                if (arg1 instanceof CellError) {\r\n                    return arg1;\r\n                }\r\n                else if (arg2 instanceof CellError) {\r\n                    return arg2;\r\n                }\r\n                else {\r\n                    return reducingFunction(arg1, arg2);\r\n                }\r\n            }, initialAccValue);\r\n            rangeVertex.setFunctionValue(functionName, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Returns list of values for given range and function name\r\n     *\r\n     * If range is dependent on smaller range, list will contain value of smaller range for this function\r\n     * and values of cells that are not present in smaller range\r\n     *\r\n     * @param functionName - function name (e.g. SUM)\r\n     * @param range - cell range\r\n     * @param rangeVertex\r\n     * @param mapFunction\r\n     * @param coercionFunction\r\n     */\r\n    getRangeValues(functionName, range, rangeVertex, mapFunction, coercionFunction) {\r\n        const rangeResult = [];\r\n        const { smallerRangeVertex, restRange } = this.dependencyGraph.rangeMapping.findSmallerRange(range);\r\n        let actualRange;\r\n        if (smallerRangeVertex !== undefined && this.dependencyGraph.existsEdge(smallerRangeVertex, rangeVertex)) {\r\n            const cachedValue = smallerRangeVertex.getFunctionValue(functionName);\r\n            if (cachedValue !== undefined) {\r\n                rangeResult.push(cachedValue);\r\n            }\r\n            else {\r\n                for (const cellFromRange of smallerRangeVertex.range.addresses(this.dependencyGraph)) {\r\n                    const val = coercionFunction(this.dependencyGraph.getScalarValue(cellFromRange));\r\n                    if (val instanceof CellError) {\r\n                        rangeResult.push(val);\r\n                    }\r\n                    else if (val !== undefined) {\r\n                        rangeResult.push(mapFunction(val));\r\n                    }\r\n                }\r\n            }\r\n            actualRange = restRange;\r\n        }\r\n        else {\r\n            actualRange = range;\r\n        }\r\n        for (const cellFromRange of actualRange.addresses(this.dependencyGraph)) {\r\n            const val = coercionFunction(this.dependencyGraph.getScalarValue(cellFromRange));\r\n            if (val instanceof CellError) {\r\n                rangeResult.push(val);\r\n            }\r\n            else if (val !== undefined) {\r\n                rangeResult.push(mapFunction(val));\r\n            }\r\n        }\r\n        return rangeResult;\r\n    }\r\n}\r\nNumericAggregationPlugin.implementedFunctions = {\r\n    'SUM': {\r\n        method: 'sum',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'SUMSQ': {\r\n        method: 'sumsq',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'MAX': {\r\n        method: 'max',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'MIN': {\r\n        method: 'min',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'MAXA': {\r\n        method: 'maxa',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'MINA': {\r\n        method: 'mina',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'COUNT': {\r\n        method: 'count',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'COUNTA': {\r\n        method: 'counta',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'AVERAGE': {\r\n        method: 'average',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'AVERAGEA': {\r\n        method: 'averagea',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'PRODUCT': {\r\n        method: 'product',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'VAR.S': {\r\n        method: 'vars',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'VAR.P': {\r\n        method: 'varp',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'VARA': {\r\n        method: 'vara',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'VARPA': {\r\n        method: 'varpa',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'STDEV.S': {\r\n        method: 'stdevs',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'STDEV.P': {\r\n        method: 'stdevp',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'STDEVA': {\r\n        method: 'stdeva',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'STDEVPA': {\r\n        method: 'stdevpa',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'SUBTOTAL': {\r\n        method: 'subtotal',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.ANY }\r\n        ],\r\n        repeatLastArgs: 1,\r\n    }\r\n};\r\nNumericAggregationPlugin.aliases = {\r\n    VAR: 'VAR.S',\r\n    VARP: 'VAR.P',\r\n    STDEV: 'STDEV.S',\r\n    STDEVP: 'STDEV.P',\r\n    VARS: 'VAR.S',\r\n    STDEVS: 'STDEV.S',\r\n};\r\nfunction strictlyNumbers(arg) {\r\n    if (isExtendedNumber(arg) || arg instanceof CellError) {\r\n        return arg;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nfunction numbersBooleans(arg) {\r\n    if (typeof arg === 'boolean') {\r\n        return coerceBooleanToNumber(arg);\r\n    }\r\n    else if (isExtendedNumber(arg) || arg instanceof CellError) {\r\n        return arg;\r\n    }\r\n    else if (typeof arg === 'string') {\r\n        return 0;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class PowerPlugin extends FunctionPlugin {\r\n    power(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('POWER'), Math.pow);\r\n    }\r\n}\r\nPowerPlugin.implementedFunctions = {\r\n    'POWER': {\r\n        method: 'power',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class RadiansPlugin extends FunctionPlugin {\r\n    radians(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('RADIANS'), (arg) => arg * (Math.PI / 180));\r\n    }\r\n}\r\nRadiansPlugin.implementedFunctions = {\r\n    'RADIANS': {\r\n        method: 'radians',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { padLeft } from '../../format/format';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nconst MAX_LENGTH = 10;\r\nconst DECIMAL_NUMBER_OF_BITS = 255;\r\nconst MIN_BASE = 2;\r\nconst MAX_BASE = 36;\r\nconst ALPHABET = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nexport class RadixConversionPlugin extends FunctionPlugin {\r\n    dec2bin(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DEC2BIN'), (value, places) => decimalToBaseWithExactPadding(value, 2, places));\r\n    }\r\n    dec2oct(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DEC2OCT'), (value, places) => decimalToBaseWithExactPadding(value, 8, places));\r\n    }\r\n    dec2hex(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DEC2HEX'), (value, places) => decimalToBaseWithExactPadding(value, 16, places));\r\n    }\r\n    bin2dec(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BIN2DEC'), (binary) => {\r\n            const binaryWithSign = coerceStringToBase(binary, 2, MAX_LENGTH);\r\n            if (binaryWithSign === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotBinary);\r\n            }\r\n            return twoComplementToDecimal(binaryWithSign, 2);\r\n        });\r\n    }\r\n    bin2oct(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BIN2OCT'), (binary, places) => {\r\n            const binaryWithSign = coerceStringToBase(binary, 2, MAX_LENGTH);\r\n            if (binaryWithSign === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotBinary);\r\n            }\r\n            return decimalToBaseWithExactPadding(twoComplementToDecimal(binaryWithSign, 2), 8, places);\r\n        });\r\n    }\r\n    bin2hex(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BIN2HEX'), (binary, places) => {\r\n            const binaryWithSign = coerceStringToBase(binary, 2, MAX_LENGTH);\r\n            if (binaryWithSign === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotBinary);\r\n            }\r\n            return decimalToBaseWithExactPadding(twoComplementToDecimal(binaryWithSign, 2), 16, places);\r\n        });\r\n    }\r\n    oct2dec(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('OCT2DEC'), (octal) => {\r\n            const octalWithSign = coerceStringToBase(octal, 8, MAX_LENGTH);\r\n            if (octalWithSign === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotOctal);\r\n            }\r\n            return twoComplementToDecimal(octalWithSign, 8);\r\n        });\r\n    }\r\n    oct2bin(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('OCT2BIN'), (octal, places) => {\r\n            const octalWithSign = coerceStringToBase(octal, 8, MAX_LENGTH);\r\n            if (octalWithSign === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotOctal);\r\n            }\r\n            return decimalToBaseWithExactPadding(twoComplementToDecimal(octalWithSign, 8), 2, places);\r\n        });\r\n    }\r\n    oct2hex(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('OCT2HEX'), (octal, places) => {\r\n            const octalWithSign = coerceStringToBase(octal, 8, MAX_LENGTH);\r\n            if (octalWithSign === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotOctal);\r\n            }\r\n            return decimalToBaseWithExactPadding(twoComplementToDecimal(octalWithSign, 8), 16, places);\r\n        });\r\n    }\r\n    hex2dec(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HEX2DEC'), (hexadecimal) => {\r\n            const hexadecimalWithSign = coerceStringToBase(hexadecimal, 16, MAX_LENGTH);\r\n            if (hexadecimalWithSign === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotHex);\r\n            }\r\n            return twoComplementToDecimal(hexadecimalWithSign, 16);\r\n        });\r\n    }\r\n    hex2bin(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HEX2BIN'), (hexadecimal, places) => {\r\n            const hexadecimalWithSign = coerceStringToBase(hexadecimal, 16, MAX_LENGTH);\r\n            if (hexadecimalWithSign === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotHex);\r\n            }\r\n            return decimalToBaseWithExactPadding(twoComplementToDecimal(hexadecimalWithSign, 16), 2, places);\r\n        });\r\n    }\r\n    hex2oct(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HEX2OCT'), (hexadecimal, places) => {\r\n            const hexadecimalWithSign = coerceStringToBase(hexadecimal, 16, MAX_LENGTH);\r\n            if (hexadecimalWithSign === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotHex);\r\n            }\r\n            return decimalToBaseWithExactPadding(twoComplementToDecimal(hexadecimalWithSign, 16), 8, places);\r\n        });\r\n    }\r\n    base(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BASE'), decimalToBaseWithMinimumPadding);\r\n    }\r\n    decimal(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DECIMAL'), (arg, base) => {\r\n            const input = coerceStringToBase(arg, base, DECIMAL_NUMBER_OF_BITS);\r\n            if (input === undefined) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NotHex);\r\n            }\r\n            return parseInt(input, base);\r\n        });\r\n    }\r\n}\r\nRadixConversionPlugin.implementedFunctions = {\r\n    'DEC2BIN': {\r\n        method: 'dec2bin',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 1, maxValue: 10 },\r\n        ],\r\n    },\r\n    'DEC2OCT': {\r\n        method: 'dec2oct',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 1, maxValue: 10 },\r\n        ],\r\n    },\r\n    'DEC2HEX': {\r\n        method: 'dec2hex',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 1, maxValue: 10 },\r\n        ],\r\n    },\r\n    'BIN2DEC': {\r\n        method: 'bin2dec',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ],\r\n    },\r\n    'BIN2OCT': {\r\n        method: 'bin2oct',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 0, maxValue: MAX_LENGTH },\r\n        ],\r\n    },\r\n    'BIN2HEX': {\r\n        method: 'bin2hex',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 0, maxValue: MAX_LENGTH },\r\n        ],\r\n    },\r\n    'OCT2DEC': {\r\n        method: 'oct2dec',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ],\r\n    },\r\n    'OCT2BIN': {\r\n        method: 'oct2bin',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 0, maxValue: MAX_LENGTH },\r\n        ],\r\n    },\r\n    'OCT2HEX': {\r\n        method: 'oct2hex',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 0, maxValue: MAX_LENGTH },\r\n        ],\r\n    },\r\n    'HEX2DEC': {\r\n        method: 'hex2dec',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ],\r\n    },\r\n    'HEX2BIN': {\r\n        method: 'hex2bin',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 0, maxValue: MAX_LENGTH },\r\n        ],\r\n    },\r\n    'HEX2OCT': {\r\n        method: 'hex2oct',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 0, maxValue: MAX_LENGTH },\r\n        ],\r\n    },\r\n    'DECIMAL': {\r\n        method: 'decimal',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: MIN_BASE, maxValue: MAX_BASE },\r\n        ],\r\n    },\r\n    'BASE': {\r\n        method: 'base',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: MIN_BASE, maxValue: MAX_BASE },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 0, maxValue: DECIMAL_NUMBER_OF_BITS },\r\n        ],\r\n    },\r\n};\r\nfunction coerceStringToBase(value, base, maxLength) {\r\n    const baseAlphabet = ALPHABET.substr(0, base);\r\n    const regex = new RegExp(`^[${baseAlphabet}]+$`);\r\n    if (value.length > maxLength || !regex.test(value)) {\r\n        return undefined;\r\n    }\r\n    return value;\r\n}\r\nfunction decimalToBaseWithExactPadding(value, base, places) {\r\n    if (value > maxValFromBase(base)) {\r\n        return new CellError(ErrorType.NUM, ErrorMessage.ValueBaseLarge);\r\n    }\r\n    if (value < minValFromBase(base)) {\r\n        return new CellError(ErrorType.NUM, ErrorMessage.ValueBaseSmall);\r\n    }\r\n    const result = decimalToRadixComplement(value, base);\r\n    if (places === undefined || value < 0) {\r\n        return result;\r\n    }\r\n    else if (result.length > places) {\r\n        return new CellError(ErrorType.NUM, ErrorMessage.ValueBaseLong);\r\n    }\r\n    else {\r\n        return padLeft(result, places);\r\n    }\r\n}\r\nfunction minValFromBase(base) {\r\n    return -Math.pow(base, MAX_LENGTH) / 2;\r\n}\r\nfunction maxValFromBase(base) {\r\n    return -minValFromBase(base) - 1;\r\n}\r\nfunction decimalToBaseWithMinimumPadding(value, base, places) {\r\n    const result = decimalToRadixComplement(value, base);\r\n    if (places !== undefined && places > result.length) {\r\n        return padLeft(result, places);\r\n    }\r\n    else {\r\n        return result;\r\n    }\r\n}\r\nfunction decimalToRadixComplement(value, base) {\r\n    const offset = value < 0 ? Math.pow(base, MAX_LENGTH) : 0;\r\n    return (value + offset).toString(base).toUpperCase();\r\n}\r\nfunction twoComplementToDecimal(value, base) {\r\n    const parsed = parseInt(value, base);\r\n    const offset = Math.pow(base, MAX_LENGTH);\r\n    return (parsed >= offset / 2) ? parsed - offset : parsed;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class RandomPlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to RAND()\r\n     *\r\n     * Returns a pseudo-random floating-point random number\r\n     * in the range [0,1).\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    rand(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('RAND'), Math.random);\r\n    }\r\n    randbetween(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('RANDBETWEEN'), (lower, upper) => {\r\n            if (upper < lower) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.WrongOrder);\r\n            }\r\n            lower = Math.ceil(lower);\r\n            upper = Math.floor(upper) + 1;\r\n            if (lower === upper) {\r\n                upper += 1;\r\n            }\r\n            return lower + Math.floor(Math.random() * (upper - lower));\r\n        });\r\n    }\r\n}\r\nRandomPlugin.implementedFunctions = {\r\n    'RAND': {\r\n        method: 'rand',\r\n        parameters: [],\r\n        isVolatile: true,\r\n    },\r\n    'RANDBETWEEN': {\r\n        method: 'randbetween',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n        isVolatile: true,\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport function findNextOddNumber(arg) {\r\n    const ceiled = Math.ceil(arg);\r\n    return (ceiled % 2 === 1) ? ceiled : ceiled + 1;\r\n}\r\nexport function findNextEvenNumber(arg) {\r\n    const ceiled = Math.ceil(arg);\r\n    return (ceiled % 2 === 0) ? ceiled : ceiled + 1;\r\n}\r\nexport class RoundingPlugin extends FunctionPlugin {\r\n    roundup(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ROUNDDOWN'), (numberToRound, places) => {\r\n            const placesMultiplier = Math.pow(10, places);\r\n            if (numberToRound < 0) {\r\n                return -Math.ceil(-numberToRound * placesMultiplier) / placesMultiplier;\r\n            }\r\n            else {\r\n                return Math.ceil(numberToRound * placesMultiplier) / placesMultiplier;\r\n            }\r\n        });\r\n    }\r\n    rounddown(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ROUNDDOWN'), (numberToRound, places) => {\r\n            const placesMultiplier = Math.pow(10, places);\r\n            if (numberToRound < 0) {\r\n                return -Math.floor(-numberToRound * placesMultiplier) / placesMultiplier;\r\n            }\r\n            else {\r\n                return Math.floor(numberToRound * placesMultiplier) / placesMultiplier;\r\n            }\r\n        });\r\n    }\r\n    round(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ROUND'), (numberToRound, places) => {\r\n            const placesMultiplier = Math.pow(10, places);\r\n            if (numberToRound < 0) {\r\n                return -Math.round(-numberToRound * placesMultiplier) / placesMultiplier;\r\n            }\r\n            else {\r\n                return Math.round(numberToRound * placesMultiplier) / placesMultiplier;\r\n            }\r\n        });\r\n    }\r\n    intFunc(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('INT'), (coercedNumberToRound) => {\r\n            if (coercedNumberToRound < 0) {\r\n                return -Math.floor(-coercedNumberToRound);\r\n            }\r\n            else {\r\n                return Math.floor(coercedNumberToRound);\r\n            }\r\n        });\r\n    }\r\n    even(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('EVEN'), (coercedNumberToRound) => {\r\n            if (coercedNumberToRound < 0) {\r\n                return -findNextEvenNumber(-coercedNumberToRound);\r\n            }\r\n            else {\r\n                return findNextEvenNumber(coercedNumberToRound);\r\n            }\r\n        });\r\n    }\r\n    odd(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ODD'), (coercedNumberToRound) => {\r\n            if (coercedNumberToRound < 0) {\r\n                return -findNextOddNumber(-coercedNumberToRound);\r\n            }\r\n            else {\r\n                return findNextOddNumber(coercedNumberToRound);\r\n            }\r\n        });\r\n    }\r\n    ceilingmath(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CEILING.MATH'), (value, significance, mode) => {\r\n            if (significance === 0 || value === 0) {\r\n                return 0;\r\n            }\r\n            significance = Math.abs(significance);\r\n            if (mode === 1 && value < 0) {\r\n                significance = -significance;\r\n            }\r\n            return Math.ceil(value / significance) * significance;\r\n        });\r\n    }\r\n    ceiling(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CEILING'), (value, significance) => {\r\n            if (value === 0) {\r\n                return 0;\r\n            }\r\n            if (significance === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            if ((value > 0) && (significance < 0)) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.DistinctSigns);\r\n            }\r\n            return Math.ceil(value / significance) * significance;\r\n        });\r\n    }\r\n    ceilingprecise(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CEILING.PRECISE'), (value, significance) => {\r\n            if (significance === 0 || value === 0) {\r\n                return 0;\r\n            }\r\n            significance = Math.abs(significance);\r\n            return Math.ceil(value / significance) * significance;\r\n        });\r\n    }\r\n    floormath(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FLOOR.MATH'), (value, significance, mode) => {\r\n            if (significance === 0 || value === 0) {\r\n                return 0;\r\n            }\r\n            significance = Math.abs(significance);\r\n            if (mode === 1 && value < 0) {\r\n                significance *= -1;\r\n            }\r\n            return Math.floor(value / significance) * significance;\r\n        });\r\n    }\r\n    floor(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FLOOR'), (value, significance) => {\r\n            if (value === 0) {\r\n                return 0;\r\n            }\r\n            if (significance === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            if ((value > 0) && (significance < 0)) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.DistinctSigns);\r\n            }\r\n            return Math.floor(value / significance) * significance;\r\n        });\r\n    }\r\n    floorprecise(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FLOOR.PRECISE'), (value, significance) => {\r\n            if (significance === 0 || value === 0) {\r\n                return 0;\r\n            }\r\n            significance = Math.abs(significance);\r\n            return Math.floor(value / significance) * significance;\r\n        });\r\n    }\r\n}\r\nRoundingPlugin.implementedFunctions = {\r\n    'ROUNDUP': {\r\n        method: 'roundup',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n        ],\r\n    },\r\n    'ROUNDDOWN': {\r\n        method: 'rounddown',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n        ],\r\n    },\r\n    'ROUND': {\r\n        method: 'round',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n        ],\r\n    },\r\n    'INT': {\r\n        method: 'intFunc',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ],\r\n    },\r\n    'EVEN': {\r\n        method: 'even',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ],\r\n    },\r\n    'ODD': {\r\n        method: 'odd',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ],\r\n    },\r\n    'CEILING.MATH': {\r\n        method: 'ceilingmath',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n        ],\r\n    },\r\n    'CEILING': {\r\n        method: 'ceiling',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n    },\r\n    'CEILING.PRECISE': {\r\n        method: 'ceilingprecise',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n        ],\r\n    },\r\n    'FLOOR.MATH': {\r\n        method: 'floormath',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n        ],\r\n    },\r\n    'FLOOR': {\r\n        method: 'floor',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n    },\r\n    'FLOOR.PRECISE': {\r\n        method: 'floorprecise',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n        ],\r\n    },\r\n};\r\nRoundingPlugin.aliases = {\r\n    'ISO.CEILING': 'CEILING.PRECISE',\r\n    'TRUNC': 'ROUNDDOWN',\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class SqrtPlugin extends FunctionPlugin {\r\n    sqrt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SQRT'), Math.sqrt);\r\n    }\r\n}\r\nSqrtPlugin.implementedFunctions = {\r\n    'SQRT': {\r\n        method: 'sqrt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { Condition, CriterionFunctionCompute } from '../CriterionFunctionCompute';\r\nimport { getRawValue, isExtendedNumber } from '../InterpreterValue';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nclass AverageResult {\r\n    constructor(sum, count) {\r\n        this.sum = sum;\r\n        this.count = count;\r\n    }\r\n    static single(arg) {\r\n        return new AverageResult(arg, 1);\r\n    }\r\n    compose(other) {\r\n        return new AverageResult(this.sum + other.sum, this.count + other.count);\r\n    }\r\n    averageValue() {\r\n        if (this.count > 0) {\r\n            return this.sum / this.count;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\nAverageResult.empty = new AverageResult(0, 0);\r\n/** Computes key for criterion function cache */\r\nfunction conditionalAggregationFunctionCacheKey(functionName) {\r\n    return (conditions) => {\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        const conditionsStrings = conditions.map((c) => `${c.conditionRange.range.sheet},${c.conditionRange.range.start.col},${c.conditionRange.range.start.row}`);\r\n        return [functionName, ...conditionsStrings].join(',');\r\n    };\r\n}\r\nfunction zeroForInfinite(value) {\r\n    if (isExtendedNumber(value) && !Number.isFinite(getRawValue(value))) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\r\nfunction mapToRawScalarValue(arg) {\r\n    if (arg instanceof CellError) {\r\n        return arg;\r\n    }\r\n    if (isExtendedNumber(arg)) {\r\n        return getRawValue(arg);\r\n    }\r\n    return undefined;\r\n}\r\nexport class ConditionalAggregationPlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to SUMIF(Range, Criterion, SumRange)\r\n     *\r\n     * Range is the range to which criterion is to be applied.\r\n     * Criterion is the criteria used to choose which cells will be included in sum.\r\n     * SumRange is the range on which adding will be performed.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    sumif(ast, state) {\r\n        const functionName = 'SUMIF';\r\n        const computeFn = (conditionRange, criterion, values) => this.computeConditionalAggregationFunction(values !== null && values !== void 0 ? values : conditionRange, [conditionRange, criterion], functionName, 0, (left, right) => this.arithmeticHelper.nonstrictadd(left, right), mapToRawScalarValue);\r\n        return this.runFunction(ast.args, state, this.metadata(functionName), computeFn);\r\n    }\r\n    sumifs(ast, state) {\r\n        const functionName = 'SUMIFS';\r\n        const computeFn = (values, ...args) => this.computeConditionalAggregationFunction(values, args, functionName, 0, (left, right) => this.arithmeticHelper.nonstrictadd(left, right), mapToRawScalarValue);\r\n        return this.runFunction(ast.args, state, this.metadata(functionName), computeFn);\r\n    }\r\n    averageif(ast, state) {\r\n        const functionName = 'AVERAGEIF';\r\n        const computeFn = (conditionRange, criterion, values) => {\r\n            const averageResult = this.computeConditionalAggregationFunction(values !== null && values !== void 0 ? values : conditionRange, [conditionRange, criterion], functionName, AverageResult.empty, (left, right) => left.compose(right), (arg) => isExtendedNumber(arg) ? AverageResult.single(getRawValue(arg)) : AverageResult.empty);\r\n            if (averageResult instanceof CellError) {\r\n                return averageResult;\r\n            }\r\n            else {\r\n                return averageResult.averageValue() || new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n        };\r\n        return this.runFunction(ast.args, state, this.metadata(functionName), computeFn);\r\n    }\r\n    /**\r\n     * Corresponds to COUNTIF(Range, Criterion)\r\n     *\r\n     * Range is the range to which criterion is to be applied.\r\n     * Criterion is the criteria used to choose which cells will be included in sum.\r\n     *\r\n     * Returns number of cells on which criteria evaluate to true.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    countif(ast, state) {\r\n        const functionName = 'COUNTIF';\r\n        const computeFn = (conditionRange, criterion) => this.computeConditionalAggregationFunction(conditionRange, [conditionRange, criterion], functionName, 0, (left, right) => left + right, () => 1);\r\n        return this.runFunction(ast.args, state, this.metadata(functionName), computeFn);\r\n    }\r\n    countifs(ast, state) {\r\n        const functionName = 'COUNTIFS';\r\n        const computeFn = (...args) => this.computeConditionalAggregationFunction(args[0], args, functionName, 0, (left, right) => left + right, () => 1);\r\n        return this.runFunction(ast.args, state, this.metadata(functionName), computeFn);\r\n    }\r\n    minifs(ast, state) {\r\n        const functionName = 'MINIFS';\r\n        const composeFunction = (left, right) => {\r\n            if (right === undefined || left === undefined) {\r\n                return right === undefined ? left : right;\r\n            }\r\n            return Math.min(left, right);\r\n        };\r\n        const computeFn = (values, ...args) => {\r\n            const minResult = this.computeConditionalAggregationFunction(values, args, functionName, Number.POSITIVE_INFINITY, composeFunction, mapToRawScalarValue);\r\n            return zeroForInfinite(minResult);\r\n        };\r\n        return this.runFunction(ast.args, state, this.metadata(functionName), computeFn);\r\n    }\r\n    maxifs(ast, state) {\r\n        const functionName = 'MAXIFS';\r\n        const composeFunction = (left, right) => {\r\n            if (right === undefined || left === undefined) {\r\n                return right === undefined ? left : right;\r\n            }\r\n            return Math.max(left, right);\r\n        };\r\n        const computeFn = (values, ...args) => {\r\n            const maxResult = this.computeConditionalAggregationFunction(values, args, functionName, Number.NEGATIVE_INFINITY, composeFunction, mapToRawScalarValue);\r\n            return zeroForInfinite(maxResult);\r\n        };\r\n        return this.runFunction(ast.args, state, this.metadata(functionName), computeFn);\r\n    }\r\n    computeConditionalAggregationFunction(valuesRange, conditionArgs, functionName, reduceInitialValue, composeFunction, mapFunction) {\r\n        const conditions = [];\r\n        for (let i = 0; i < conditionArgs.length; i += 2) {\r\n            const conditionArg = conditionArgs[i];\r\n            const criterionPackage = this.interpreter.criterionBuilder.fromCellValue(conditionArgs[i + 1], this.arithmeticHelper);\r\n            if (criterionPackage === undefined) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.BadCriterion);\r\n            }\r\n            conditions.push(new Condition(conditionArg, criterionPackage));\r\n        }\r\n        return new CriterionFunctionCompute(this.interpreter, conditionalAggregationFunctionCacheKey(functionName), reduceInitialValue, composeFunction, mapFunction).compute(valuesRange, conditions);\r\n    }\r\n}\r\nConditionalAggregationPlugin.implementedFunctions = {\r\n    SUMIF: {\r\n        method: 'sumif',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NOERROR },\r\n            { argumentType: ArgumentTypes.RANGE, optionalArg: true },\r\n        ],\r\n    },\r\n    COUNTIF: {\r\n        method: 'countif',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NOERROR },\r\n        ],\r\n    },\r\n    AVERAGEIF: {\r\n        method: 'averageif',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NOERROR },\r\n            { argumentType: ArgumentTypes.RANGE, optionalArg: true },\r\n        ],\r\n    },\r\n    SUMIFS: {\r\n        method: 'sumifs',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NOERROR },\r\n        ],\r\n        repeatLastArgs: 2,\r\n    },\r\n    COUNTIFS: {\r\n        method: 'countifs',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NOERROR },\r\n        ],\r\n        repeatLastArgs: 2,\r\n    },\r\n    MINIFS: {\r\n        method: 'minifs',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NOERROR },\r\n        ],\r\n        repeatLastArgs: 2,\r\n    },\r\n    MAXIFS: {\r\n        method: 'maxifs',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NOERROR },\r\n        ],\r\n        repeatLastArgs: 2,\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType, simpleCellAddress } from '../Cell';\r\nimport { ErrorMessage } from '../error-message';\r\nimport { split } from '../generatorUtils';\r\nimport { getRawValue } from './InterpreterValue';\r\nconst findSmallerRangeForMany = (dependencyGraph, conditionRanges, valuesRange) => {\r\n    if (valuesRange.end.row > valuesRange.start.row) {\r\n        const valuesRangeEndRowLess = simpleCellAddress(valuesRange.end.sheet, valuesRange.end.col, valuesRange.end.row - 1);\r\n        const rowLessVertex = dependencyGraph.getRange(valuesRange.start, valuesRangeEndRowLess);\r\n        if (rowLessVertex !== undefined) {\r\n            return {\r\n                smallerRangeVertex: rowLessVertex,\r\n                restValuesRange: valuesRange.withStart(simpleCellAddress(valuesRange.start.sheet, valuesRange.start.col, valuesRange.end.row)),\r\n                restConditionRanges: conditionRanges.map((conditionRange) => conditionRange.withStart(simpleCellAddress(conditionRange.start.sheet, conditionRange.start.col, conditionRange.end.row))),\r\n            };\r\n        }\r\n    }\r\n    return {\r\n        restValuesRange: valuesRange,\r\n        restConditionRanges: conditionRanges,\r\n    };\r\n};\r\nexport class CriterionFunctionCompute {\r\n    constructor(interpreter, cacheKey, reduceInitialValue, composeFunction, mapFunction) {\r\n        this.interpreter = interpreter;\r\n        this.cacheKey = cacheKey;\r\n        this.reduceInitialValue = reduceInitialValue;\r\n        this.composeFunction = composeFunction;\r\n        this.mapFunction = mapFunction;\r\n        this.dependencyGraph = this.interpreter.dependencyGraph;\r\n    }\r\n    compute(simpleValuesRange, conditions) {\r\n        for (const condition of conditions) {\r\n            if (!condition.conditionRange.sameDimensionsAs(simpleValuesRange)) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.EqualLength);\r\n            }\r\n        }\r\n        const valuesRangeVertex = this.tryToGetRangeVertexForRangeValue(simpleValuesRange);\r\n        const conditionsVertices = conditions.map((c) => this.tryToGetRangeVertexForRangeValue(c.conditionRange));\r\n        if (valuesRangeVertex && conditionsVertices.every((e) => e !== undefined)) {\r\n            const fullCriterionString = conditions.map((c) => c.criterionPackage.raw).join(',');\r\n            const cachedResult = this.findAlreadyComputedValueInCache(valuesRangeVertex, this.cacheKey(conditions), fullCriterionString);\r\n            if (cachedResult !== undefined) {\r\n                this.interpreter.stats.incrementCriterionFunctionFullCacheUsed();\r\n                return cachedResult;\r\n            }\r\n            const cache = this.buildNewCriterionCache(this.cacheKey(conditions), conditions.map((c) => c.conditionRange.range), simpleValuesRange.range);\r\n            if (!cache.has(fullCriterionString)) {\r\n                cache.set(fullCriterionString, [\r\n                    this.evaluateRangeValue(simpleValuesRange, conditions),\r\n                    conditions.map((condition) => condition.criterionPackage.lambda),\r\n                ]);\r\n            }\r\n            valuesRangeVertex.setCriterionFunctionValues(this.cacheKey(conditions), cache);\r\n            conditionsVertices.forEach(range => {\r\n                if (range !== undefined) {\r\n                    range.addDependentCacheRange(valuesRangeVertex);\r\n                }\r\n            });\r\n            return cache.get(fullCriterionString)[0];\r\n        }\r\n        else {\r\n            return this.evaluateRangeValue(simpleValuesRange, conditions);\r\n        }\r\n    }\r\n    tryToGetRangeVertexForRangeValue(rangeValue) {\r\n        const maybeRange = rangeValue.range;\r\n        if (maybeRange === undefined) {\r\n            return undefined;\r\n        }\r\n        else {\r\n            return this.dependencyGraph.getRange(maybeRange.start, maybeRange.end);\r\n        }\r\n    }\r\n    reduceFunction(iterable) {\r\n        let acc = this.reduceInitialValue;\r\n        for (const val of iterable) {\r\n            acc = this.composeFunction(acc, val);\r\n        }\r\n        return acc;\r\n    }\r\n    findAlreadyComputedValueInCache(rangeVertex, cacheKey, criterionString) {\r\n        return rangeVertex.getCriterionFunctionValue(cacheKey, criterionString);\r\n    }\r\n    evaluateRangeValue(simpleValuesRange, conditions) {\r\n        const criterionLambdas = conditions.map((condition) => condition.criterionPackage.lambda);\r\n        const values = Array.from(simpleValuesRange.valuesFromTopLeftCorner()).map(this.mapFunction)[Symbol.iterator]();\r\n        const conditionsIterators = conditions.map((condition) => condition.conditionRange.iterateValuesFromTopLeftCorner());\r\n        const filteredValues = ifFilter(criterionLambdas, conditionsIterators, values);\r\n        return this.reduceFunction(filteredValues);\r\n    }\r\n    buildNewCriterionCache(cacheKey, simpleConditionRanges, simpleValuesRange) {\r\n        const currentRangeVertex = this.dependencyGraph.getRange(simpleValuesRange.start, simpleValuesRange.end);\r\n        const { smallerRangeVertex, restConditionRanges, restValuesRange } = findSmallerRangeForMany(this.dependencyGraph, simpleConditionRanges, simpleValuesRange);\r\n        let smallerCache;\r\n        if (smallerRangeVertex !== undefined && this.dependencyGraph.existsEdge(smallerRangeVertex, currentRangeVertex)) {\r\n            smallerCache = smallerRangeVertex.getCriterionFunctionValues(cacheKey);\r\n        }\r\n        else {\r\n            smallerCache = new Map();\r\n        }\r\n        const newCache = new Map();\r\n        smallerCache.forEach(([value, criterionLambdas], key) => {\r\n            const filteredValues = ifFilter(criterionLambdas, restConditionRanges.map((rcr) => getRangeValues(this.dependencyGraph, rcr)), Array.from(getRangeValues(this.dependencyGraph, restValuesRange)).map(this.mapFunction)[Symbol.iterator]());\r\n            const newCacheValue = this.composeFunction(value, this.reduceFunction(filteredValues));\r\n            this.interpreter.stats.incrementCriterionFunctionPartialCacheUsed();\r\n            newCache.set(key, [newCacheValue, criterionLambdas]);\r\n        });\r\n        return newCache;\r\n    }\r\n}\r\nexport class Condition {\r\n    constructor(conditionRange, criterionPackage) {\r\n        this.conditionRange = conditionRange;\r\n        this.criterionPackage = criterionPackage;\r\n    }\r\n}\r\nfunction* getRangeValues(dependencyGraph, cellRange) {\r\n    for (const cellFromRange of cellRange.addresses(dependencyGraph)) {\r\n        yield getRawValue(dependencyGraph.getScalarValue(cellFromRange));\r\n    }\r\n}\r\nfunction* ifFilter(criterionLambdas, conditionalIterables, computableIterable) {\r\n    for (const computable of computableIterable) {\r\n        const conditionalSplits = conditionalIterables.map((conditionalIterable) => split(conditionalIterable));\r\n        if (!conditionalSplits.every((cs) => Object.prototype.hasOwnProperty.call(cs, 'value'))) {\r\n            return;\r\n        }\r\n        const conditionalFirsts = conditionalSplits.map((cs) => getRawValue(cs.value));\r\n        if (zip(conditionalFirsts, criterionLambdas).every(([conditionalFirst, criterionLambda]) => criterionLambda(conditionalFirst))) {\r\n            yield computable;\r\n        }\r\n        conditionalIterables = conditionalSplits.map((cs) => cs.rest);\r\n    }\r\n}\r\nfunction zip(arr1, arr2) {\r\n    const result = [];\r\n    for (let i = 0; i < Math.min(arr1.length, arr2.length); i++) {\r\n        result.push([arr1[i], arr2[i]]);\r\n    }\r\n    return result;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nexport function* empty() {\r\n}\r\nexport function split(iterable) {\r\n    const iterator = iterable[Symbol.iterator]();\r\n    const { done, value } = iterator.next();\r\n    if (done) {\r\n        return { rest: empty() };\r\n    }\r\n    else {\r\n        return { value, rest: iterator };\r\n    }\r\n}\r\nexport function first(iterable) {\r\n    const iterator = iterable[Symbol.iterator]();\r\n    const { done, value } = iterator.next();\r\n    if (!done) {\r\n        return value;\r\n    }\r\n    return undefined;\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { getRawValue, isExtendedNumber } from '../InterpreterValue';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class SumprodPlugin extends FunctionPlugin {\r\n    sumproduct(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SUMPRODUCT'), (...args) => {\r\n            const width = args[0].width();\r\n            const height = args[0].height();\r\n            for (const arg of args) {\r\n                if (arg.width() !== width || arg.height() !== height) {\r\n                    return new CellError(ErrorType.VALUE, ErrorMessage.EqualLength);\r\n                }\r\n            }\r\n            let ret = 0;\r\n            const iterators = args.map(arg => arg.iterateValuesFromTopLeftCorner());\r\n            for (let i = 0; i < width * height; i++) {\r\n                let acc = 1;\r\n                for (const it of iterators) {\r\n                    const val = it.next().value;\r\n                    if (val instanceof CellError) {\r\n                        return val;\r\n                    }\r\n                    const coercedVal = this.coerceScalarToNumberOrError(val);\r\n                    if (isExtendedNumber(coercedVal)) {\r\n                        acc *= getRawValue(coercedVal);\r\n                    }\r\n                    else {\r\n                        acc = 0;\r\n                    }\r\n                }\r\n                ret += acc;\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n}\r\nSumprodPlugin.implementedFunctions = {\r\n    'SUMPRODUCT': {\r\n        method: 'sumproduct',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\n/**\r\n * Interpreter plugin containing text-specific functions\r\n */\r\nexport class TextPlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to CONCATENATE(value1, [value2, ...])\r\n     *\r\n     * Concatenates provided arguments to one string.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    concatenate(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CONCATENATE'), (...args) => {\r\n            return ''.concat(...args);\r\n        });\r\n    }\r\n    /**\r\n     * Corresponds to SPLIT(string, index)\r\n     *\r\n     * Splits provided string using space separator and returns chunk at zero-based position specified by second argument\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    split(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SPLIT'), (stringToSplit, indexToUse) => {\r\n            const splittedString = stringToSplit.split(' ');\r\n            if (indexToUse >= splittedString.length || indexToUse < 0) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.IndexBounds);\r\n            }\r\n            return splittedString[indexToUse];\r\n        });\r\n    }\r\n    len(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LEN'), (arg) => {\r\n            return arg.length;\r\n        });\r\n    }\r\n    lower(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LOWER'), (arg) => {\r\n            return arg.toLowerCase();\r\n        });\r\n    }\r\n    trim(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TRIM'), (arg) => {\r\n            return arg.replace(/^ +| +$/g, '').replace(/ +/g, ' ');\r\n        });\r\n    }\r\n    proper(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('PROPER'), (arg) => {\r\n            return arg.replace(/\\p{L}+/gu, word => word.charAt(0).toUpperCase() + word.substring(1).toLowerCase());\r\n        });\r\n    }\r\n    clean(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CLEAN'), (arg) => {\r\n            // eslint-disable-next-line no-control-regex\r\n            return arg.replace(/[\\u0000-\\u001F]/g, '');\r\n        });\r\n    }\r\n    exact(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('EXACT'), (left, right) => {\r\n            return left === right;\r\n        });\r\n    }\r\n    rept(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('REPT'), (text, count) => {\r\n            if (count < 0) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.NegativeCount);\r\n            }\r\n            return text.repeat(count);\r\n        });\r\n    }\r\n    right(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('RIGHT'), (text, length) => {\r\n            if (length < 0) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.NegativeLength);\r\n            }\r\n            else if (length === 0) {\r\n                return '';\r\n            }\r\n            return text.slice(-length);\r\n        });\r\n    }\r\n    left(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LEFT'), (text, length) => {\r\n            if (length < 0) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.NegativeLength);\r\n            }\r\n            return text.slice(0, length);\r\n        });\r\n    }\r\n    mid(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MID'), (text, startPosition, numberOfChars) => {\r\n            if (startPosition < 1) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\r\n            }\r\n            if (numberOfChars < 0) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.NegativeLength);\r\n            }\r\n            return text.substring(startPosition - 1, startPosition + numberOfChars - 1);\r\n        });\r\n    }\r\n    replace(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('REPLACE'), (text, startPosition, numberOfChars, newText) => {\r\n            if (startPosition < 1) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\r\n            }\r\n            if (numberOfChars < 0) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.NegativeLength);\r\n            }\r\n            return text.substring(0, startPosition - 1) + newText + text.substring(startPosition + numberOfChars - 1);\r\n        });\r\n    }\r\n    search(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SEARCH'), (pattern, text, startIndex) => {\r\n            if (startIndex < 1 || startIndex > text.length) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.LengthBounds);\r\n            }\r\n            const normalizedText = text.substring(startIndex - 1).toLowerCase();\r\n            let index;\r\n            if (this.arithmeticHelper.requiresRegex(pattern)) {\r\n                index = this.arithmeticHelper.searchString(pattern, normalizedText);\r\n            }\r\n            else {\r\n                index = normalizedText.indexOf(pattern.toLowerCase());\r\n            }\r\n            index = index + startIndex;\r\n            return index > 0 ? index : new CellError(ErrorType.VALUE, ErrorMessage.PatternNotFound);\r\n        });\r\n    }\r\n    substitute(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SUBSTITUTE'), (text, oldText, newText, occurrence) => {\r\n            const oldTextRegexp = new RegExp(oldText, 'g');\r\n            if (occurrence === undefined) {\r\n                return text.replace(oldTextRegexp, newText);\r\n            }\r\n            if (occurrence < 1) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\r\n            }\r\n            let match;\r\n            let i = 0;\r\n            while ((match = oldTextRegexp.exec(text)) !== null) {\r\n                if (occurrence === ++i) {\r\n                    return text.substring(0, match.index) + newText + text.substring(oldTextRegexp.lastIndex);\r\n                }\r\n            }\r\n            return text;\r\n        });\r\n    }\r\n    find(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FIND'), (pattern, text, startIndex) => {\r\n            if (startIndex < 1 || startIndex > text.length) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.IndexBounds);\r\n            }\r\n            const shiftedText = text.substring(startIndex - 1);\r\n            const index = shiftedText.indexOf(pattern) + startIndex;\r\n            return index > 0 ? index : new CellError(ErrorType.VALUE, ErrorMessage.PatternNotFound);\r\n        });\r\n    }\r\n    t(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('T'), (arg) => {\r\n            if (arg instanceof CellError) {\r\n                return arg;\r\n            }\r\n            return typeof arg === 'string' ? arg : '';\r\n        });\r\n    }\r\n    upper(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('UPPER'), (arg) => {\r\n            return arg.toUpperCase();\r\n        });\r\n    }\r\n}\r\nTextPlugin.implementedFunctions = {\r\n    'CONCATENATE': {\r\n        method: 'concatenate',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ],\r\n        repeatLastArgs: 1,\r\n        expandRanges: true,\r\n    },\r\n    'EXACT': {\r\n        method: 'exact',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ]\r\n    },\r\n    'SPLIT': {\r\n        method: 'split',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ]\r\n    },\r\n    'LEN': {\r\n        method: 'len',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ]\r\n    },\r\n    'LOWER': {\r\n        method: 'lower',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ]\r\n    },\r\n    'MID': {\r\n        method: 'mid',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ]\r\n    },\r\n    'TRIM': {\r\n        method: 'trim',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ]\r\n    },\r\n    'T': {\r\n        method: 't',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.SCALAR }\r\n        ]\r\n    },\r\n    'PROPER': {\r\n        method: 'proper',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ]\r\n    },\r\n    'CLEAN': {\r\n        method: 'clean',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ]\r\n    },\r\n    'REPT': {\r\n        method: 'rept',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ]\r\n    },\r\n    'RIGHT': {\r\n        method: 'right',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n    'LEFT': {\r\n        method: 'left',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n    'REPLACE': {\r\n        method: 'replace',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ]\r\n    },\r\n    'SEARCH': {\r\n        method: 'search',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n    'SUBSTITUTE': {\r\n        method: 'substitute',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true }\r\n        ]\r\n    },\r\n    'FIND': {\r\n        method: 'find',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.STRING },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n    'UPPER': {\r\n        method: 'upper',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING }\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nimport { PI } from './MathConstantsPlugin';\r\n/**\r\n * Interpreter plugin containing trigonometric functions\r\n */\r\nexport class TrigonometryPlugin extends FunctionPlugin {\r\n    /**\r\n     * Corresponds to ACOS(value)\r\n     *\r\n     * Returns the arc cosine (or inverse cosine) of a number.\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    acos(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ACOS'), Math.acos);\r\n    }\r\n    asin(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ASIN'), Math.asin);\r\n    }\r\n    cos(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COS'), Math.cos);\r\n    }\r\n    sin(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SIN'), Math.sin);\r\n    }\r\n    tan(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TAN'), Math.tan);\r\n    }\r\n    atan(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ATAN'), Math.atan);\r\n    }\r\n    atan2(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ATAN2'), (x, y) => {\r\n            if (x === 0 && y === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            return Math.atan2(y, x);\r\n        });\r\n    }\r\n    cot(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COT'), (arg) => (arg === 0) ? new CellError(ErrorType.DIV_BY_ZERO) : (1 / Math.tan(arg)));\r\n    }\r\n    acot(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ACOT'), (arg) => (arg === 0) ? PI / 2 : Math.atan(1 / arg));\r\n    }\r\n    sec(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SEC'), (arg) => 1 / Math.cos(arg));\r\n    }\r\n    csc(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CSC'), (arg) => (arg === 0) ? new CellError(ErrorType.DIV_BY_ZERO) : (1 / Math.sin(arg)));\r\n    }\r\n    sinh(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SINH'), Math.sinh);\r\n    }\r\n    asinh(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ASINH'), Math.asinh);\r\n    }\r\n    cosh(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COSH'), Math.cosh);\r\n    }\r\n    acosh(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ACOSH'), Math.acosh);\r\n    }\r\n    tanh(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TANH'), Math.tanh);\r\n    }\r\n    atanh(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ATANH'), Math.atanh);\r\n    }\r\n    coth(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COTH'), (arg) => (arg === 0) ? new CellError(ErrorType.DIV_BY_ZERO) : (1 / Math.tanh(arg)));\r\n    }\r\n    acoth(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ACOTH'), (arg) => (arg === 0) ? new CellError(ErrorType.NUM, ErrorMessage.NonZero) : Math.atanh(1 / arg));\r\n    }\r\n    sech(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SECH'), (arg) => 1 / Math.cosh(arg));\r\n    }\r\n    csch(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CSCH'), (arg) => (arg === 0) ? new CellError(ErrorType.DIV_BY_ZERO) : (1 / Math.sinh(arg)));\r\n    }\r\n}\r\nTrigonometryPlugin.implementedFunctions = {\r\n    'ACOS': {\r\n        method: 'acos',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'ASIN': {\r\n        method: 'asin',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'COS': {\r\n        method: 'cos',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'SIN': {\r\n        method: 'sin',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'TAN': {\r\n        method: 'tan',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'ATAN': {\r\n        method: 'atan',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'ATAN2': {\r\n        method: 'atan2',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ]\r\n    },\r\n    'COT': {\r\n        method: 'cot',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'SEC': {\r\n        method: 'sec',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'CSC': {\r\n        method: 'csc',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'SINH': {\r\n        method: 'sinh',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'COSH': {\r\n        method: 'cosh',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'TANH': {\r\n        method: 'tanh',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'COTH': {\r\n        method: 'coth',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'SECH': {\r\n        method: 'sech',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'CSCH': {\r\n        method: 'csch',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'ACOT': {\r\n        method: 'acot',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'ASINH': {\r\n        method: 'asinh',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'ACOSH': {\r\n        method: 'acosh',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'ATANH': {\r\n        method: 'atanh',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'ACOTH': {\r\n        method: 'acoth',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AbsoluteCellRange } from '../../AbsoluteCellRange';\r\nimport { CellError, ErrorType, simpleCellAddress } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { RowSearchStrategy } from '../../Lookup/RowSearchStrategy';\r\nimport { StatType } from '../../statistics';\r\nimport { zeroIfEmpty } from '../ArithmeticHelper';\r\nimport { SimpleRangeValue } from '../SimpleRangeValue';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class LookupPlugin extends FunctionPlugin {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.rowSearch = new RowSearchStrategy(this.dependencyGraph);\r\n    }\r\n    /**\r\n     * Corresponds to VLOOKUP(key, range, index, [sorted])\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    vlookup(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('VLOOKUP'), (key, rangeValue, index, sorted) => {\r\n            const range = rangeValue.range;\r\n            if (range === undefined) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\r\n            }\r\n            if (index < 1) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\r\n            }\r\n            if (index > range.width()) {\r\n                return new CellError(ErrorType.REF, ErrorMessage.IndexLarge);\r\n            }\r\n            return this.doVlookup(zeroIfEmpty(key), rangeValue, index - 1, sorted);\r\n        });\r\n    }\r\n    /**\r\n     * Corresponds to HLOOKUP(key, range, index, [sorted])\r\n     *\r\n     * @param ast\r\n     * @param state\r\n     */\r\n    hlookup(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HLOOKUP'), (key, rangeValue, index, sorted) => {\r\n            const range = rangeValue.range;\r\n            if (range === undefined) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\r\n            }\r\n            if (index < 1) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\r\n            }\r\n            if (index > range.height()) {\r\n                return new CellError(ErrorType.REF, ErrorMessage.IndexLarge);\r\n            }\r\n            return this.doHlookup(zeroIfEmpty(key), rangeValue, index - 1, sorted);\r\n        });\r\n    }\r\n    match(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MATCH'), (key, rangeValue, type) => {\r\n            return this.doMatch(zeroIfEmpty(key), rangeValue, type);\r\n        });\r\n    }\r\n    searchInRange(key, range, sorted, searchStrategy) {\r\n        if (!sorted && typeof key === 'string' && this.arithmeticHelper.requiresRegex(key)) {\r\n            return searchStrategy.advancedFind(this.arithmeticHelper.eqMatcherFunction(key), range);\r\n        }\r\n        else {\r\n            const searchOptions = sorted ? { ordering: 'asc' } : { ordering: 'none', matchExactly: true };\r\n            return searchStrategy.find(key, range, searchOptions);\r\n        }\r\n    }\r\n    doVlookup(key, rangeValue, index, sorted) {\r\n        this.dependencyGraph.stats.start(StatType.VLOOKUP);\r\n        const range = rangeValue.range;\r\n        let searchedRange;\r\n        if (range === undefined) {\r\n            searchedRange = SimpleRangeValue.onlyValues(rangeValue.data.map((arg) => [arg[0]]));\r\n        }\r\n        else {\r\n            searchedRange = SimpleRangeValue.onlyRange(AbsoluteCellRange.spanFrom(range.start, 1, range.height()), this.dependencyGraph);\r\n        }\r\n        const rowIndex = this.searchInRange(key, searchedRange, sorted, this.columnSearch);\r\n        this.dependencyGraph.stats.end(StatType.VLOOKUP);\r\n        if (rowIndex === -1) {\r\n            return new CellError(ErrorType.NA, ErrorMessage.ValueNotFound);\r\n        }\r\n        let value;\r\n        if (range === undefined) {\r\n            value = rangeValue.data[rowIndex][index];\r\n        }\r\n        else {\r\n            const address = simpleCellAddress(range.sheet, range.start.col + index, range.start.row + rowIndex);\r\n            value = this.dependencyGraph.getCellValue(address);\r\n        }\r\n        if (value instanceof SimpleRangeValue) {\r\n            return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\r\n        }\r\n        return value;\r\n    }\r\n    doHlookup(key, rangeValue, index, sorted) {\r\n        const range = rangeValue.range;\r\n        let searchedRange;\r\n        if (range === undefined) {\r\n            searchedRange = SimpleRangeValue.onlyValues([rangeValue.data[0]]);\r\n        }\r\n        else {\r\n            searchedRange = SimpleRangeValue.onlyRange(AbsoluteCellRange.spanFrom(range.start, range.width(), 1), this.dependencyGraph);\r\n        }\r\n        const colIndex = this.searchInRange(key, searchedRange, sorted, this.rowSearch);\r\n        if (colIndex === -1) {\r\n            return new CellError(ErrorType.NA, ErrorMessage.ValueNotFound);\r\n        }\r\n        let value;\r\n        if (range === undefined) {\r\n            value = rangeValue.data[index][colIndex];\r\n        }\r\n        else {\r\n            const address = simpleCellAddress(range.sheet, range.start.col + colIndex, range.start.row + index);\r\n            value = this.dependencyGraph.getCellValue(address);\r\n        }\r\n        if (value instanceof SimpleRangeValue) {\r\n            return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\r\n        }\r\n        return value;\r\n    }\r\n    doMatch(key, rangeValue, type) {\r\n        if (![-1, 0, 1].includes(type)) {\r\n            return new CellError(ErrorType.VALUE, ErrorMessage.BadMode);\r\n        }\r\n        if (rangeValue.width() > 1 && rangeValue.height() > 1) {\r\n            return new CellError(ErrorType.NA);\r\n        }\r\n        const searchStrategy = rangeValue.width() === 1 ? this.columnSearch : this.rowSearch;\r\n        const searchOptions = type === 0\r\n            ? { ordering: 'none', matchExactly: true }\r\n            : { ordering: type === -1 ? 'desc' : 'asc' };\r\n        const index = searchStrategy.find(key, rangeValue, searchOptions);\r\n        if (index === -1) {\r\n            return new CellError(ErrorType.NA, ErrorMessage.ValueNotFound);\r\n        }\r\n        return index + 1;\r\n    }\r\n}\r\nLookupPlugin.implementedFunctions = {\r\n    'VLOOKUP': {\r\n        method: 'vlookup',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.BOOLEAN, defaultValue: true },\r\n        ]\r\n    },\r\n    'HLOOKUP': {\r\n        method: 'hlookup',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.BOOLEAN, defaultValue: true },\r\n        ]\r\n    },\r\n    'MATCH': {\r\n        method: 'match',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { AdvancedFind } from './AdvancedFind';\r\nexport class RowSearchStrategy extends AdvancedFind {\r\n    constructor(dependencyGraph) {\r\n        super(dependencyGraph);\r\n        this.dependencyGraph = dependencyGraph;\r\n    }\r\n    /*\r\n     * WARNING: Finding lower/upper bounds in unordered ranges is not supported. When ordering === 'none', assumes matchExactly === true\r\n     */\r\n    find(searchKey, rangeValue, searchOptions) {\r\n        return this.basicFind(searchKey, rangeValue, 'col', searchOptions);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { getRawValue } from '../InterpreterValue';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class RomanPlugin extends FunctionPlugin {\r\n    roman(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ROMAN'), (val, mode) => {\r\n            val = Math.trunc(val);\r\n            if (mode === false) {\r\n                mode = 4;\r\n            }\r\n            else if (mode === true) {\r\n                mode = 0;\r\n            }\r\n            mode = getRawValue(this.coerceScalarToNumberOrError(mode));\r\n            if (mode instanceof CellError) {\r\n                return mode;\r\n            }\r\n            mode = Math.trunc(mode);\r\n            if (mode < 0) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.ValueSmall);\r\n            }\r\n            if (mode > 4) {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.ValueLarge);\r\n            }\r\n            return romanMode(val, mode);\r\n        });\r\n    }\r\n    arabic(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ARABIC'), (inputString) => {\r\n            inputString = inputString.trim().toUpperCase();\r\n            let minusSign = false;\r\n            if (inputString.startsWith('-')) {\r\n                inputString = inputString.slice(1);\r\n                minusSign = true;\r\n                if (inputString === '') {\r\n                    return new CellError(ErrorType.VALUE, ErrorMessage.InvalidRoman);\r\n                }\r\n            }\r\n            const work = { input: inputString, acc: 0 };\r\n            eatToken(work, { token: 'MMM', val: 3000 }, { token: 'MM', val: 2000 }, { token: 'M', val: 1000 });\r\n            eatToken(work, { token: 'IM', val: 999 }, { token: 'VM', val: 995 }, { token: 'XM', val: 990 }, { token: 'LM', val: 950 }, { token: 'CM', val: 900 });\r\n            eatToken(work, { token: 'D', val: 500 }, { token: 'ID', val: 499 }, { token: 'VD', val: 495 }, { token: 'XD', val: 490 }, { token: 'LD', val: 450 }, { token: 'CD', val: 400 });\r\n            eatToken(work, { token: 'CCC', val: 300 }, { token: 'CC', val: 200 }, { token: 'C', val: 100 });\r\n            eatToken(work, { token: 'IC', val: 99 }, { token: 'VC', val: 95 }, { token: 'XC', val: 90 });\r\n            eatToken(work, { token: 'L', val: 50 }, { token: 'IL', val: 49 }, { token: 'VL', val: 45 }, { token: 'XL', val: 40 });\r\n            eatToken(work, { token: 'XXX', val: 30 }, { token: 'XX', val: 20 }, { token: 'X', val: 10 });\r\n            eatToken(work, { token: 'IX', val: 9 });\r\n            eatToken(work, { token: 'V', val: 5 }, { token: 'IV', val: 4 });\r\n            eatToken(work, { token: 'III', val: 3 }, { token: 'II', val: 2 }, { token: 'I', val: 1 });\r\n            if (work.input !== '') {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.InvalidRoman);\r\n            }\r\n            else {\r\n                return minusSign ? -work.acc : work.acc;\r\n            }\r\n        });\r\n    }\r\n}\r\nRomanPlugin.implementedFunctions = {\r\n    'ROMAN': {\r\n        method: 'roman',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1, lessThan: 4000 },\r\n            { argumentType: ArgumentTypes.NOERROR, optionalArg: true, defaultValue: 0 }\r\n        ],\r\n    },\r\n    'ARABIC': {\r\n        method: 'arabic',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING },\r\n        ],\r\n    },\r\n};\r\nfunction eatToken(inputAcc, ...tokens) {\r\n    for (const token of tokens) {\r\n        if (inputAcc.input.startsWith(token.token)) {\r\n            inputAcc.input = inputAcc.input.slice(token.token.length);\r\n            inputAcc.acc += token.val;\r\n            break;\r\n        }\r\n    }\r\n}\r\nfunction romanMode(input, mode) {\r\n    const work = { val: input % 1000, acc: 'M'.repeat(Math.floor(input / 1000)) };\r\n    if (mode === 4) {\r\n        absorb(work, 'IM', 999, 1000);\r\n        absorb(work, 'ID', 499, 500);\r\n    }\r\n    if (mode >= 3) {\r\n        absorb(work, 'VM', 995, 1000);\r\n        absorb(work, 'VD', 495, 500);\r\n    }\r\n    if (mode >= 2) {\r\n        absorb(work, 'XM', 990, 1000);\r\n        absorb(work, 'XD', 490, 500);\r\n    }\r\n    if (mode >= 1) {\r\n        absorb(work, 'LM', 950, 1000);\r\n        absorb(work, 'LD', 450, 500);\r\n    }\r\n    absorb(work, 'CM', 900, 1000);\r\n    absorb(work, 'CD', 400, 500);\r\n    absorb(work, 'D', 500, 900);\r\n    work.acc += 'C'.repeat(Math.floor(work.val / 100));\r\n    work.val %= 100;\r\n    if (mode >= 2) {\r\n        absorb(work, 'IC', 99, 100);\r\n        absorb(work, 'IL', 49, 50);\r\n    }\r\n    if (mode >= 1) {\r\n        absorb(work, 'VC', 95, 100);\r\n        absorb(work, 'VL', 45, 50);\r\n    }\r\n    absorb(work, 'XC', 90, 100);\r\n    absorb(work, 'XL', 40, 50);\r\n    absorb(work, 'L', 50, 90);\r\n    work.acc += 'X'.repeat(Math.floor(work.val / 10));\r\n    work.val %= 10;\r\n    absorb(work, 'IX', 9, 10);\r\n    absorb(work, 'IV', 4, 5);\r\n    absorb(work, 'V', 5, 9);\r\n    work.acc += 'I'.repeat(work.val);\r\n    return work.acc;\r\n}\r\nfunction absorb(valAcc, token, lower, upper) {\r\n    if (valAcc.val >= lower && valAcc.val < upper) {\r\n        valAcc.val -= lower;\r\n        valAcc.acc += token;\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class SimpleArithmerticPlugin extends FunctionPlugin {\r\n    add(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.ADD'), this.arithmeticHelper.addWithEpsilon);\r\n    }\r\n    concat(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.CONCAT'), this.arithmeticHelper.concat);\r\n    }\r\n    divide(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.DIVIDE'), this.arithmeticHelper.divide);\r\n    }\r\n    eq(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.EQ'), this.arithmeticHelper.eq);\r\n    }\r\n    gt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.GT'), this.arithmeticHelper.gt);\r\n    }\r\n    gte(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.GTE'), this.arithmeticHelper.geq);\r\n    }\r\n    lt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.LT'), this.arithmeticHelper.lt);\r\n    }\r\n    lte(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.LTE'), this.arithmeticHelper.leq);\r\n    }\r\n    minus(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.MINUS'), this.arithmeticHelper.subtract);\r\n    }\r\n    multiply(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.MULTIPLY'), this.arithmeticHelper.multiply);\r\n    }\r\n    ne(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.NE'), this.arithmeticHelper.neq);\r\n    }\r\n    pow(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.POW'), this.arithmeticHelper.pow);\r\n    }\r\n    uminus(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.UMINUS'), this.arithmeticHelper.unaryMinus);\r\n    }\r\n    upercent(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.UNARY_PERCENT'), this.arithmeticHelper.unaryPercent);\r\n    }\r\n    uplus(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HF.UPLUS'), this.arithmeticHelper.unaryPlus);\r\n    }\r\n}\r\nSimpleArithmerticPlugin.implementedFunctions = {\r\n    'HF.ADD': {\r\n        method: 'add',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\r\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\r\n        ],\r\n    },\r\n    'HF.CONCAT': {\r\n        method: 'concat',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.STRING, passSubtype: true },\r\n            { argumentType: ArgumentTypes.STRING, passSubtype: true },\r\n        ],\r\n    },\r\n    'HF.DIVIDE': {\r\n        method: 'divide',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\r\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\r\n        ],\r\n    },\r\n    'HF.EQ': {\r\n        method: 'eq',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\r\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\r\n        ]\r\n    },\r\n    'HF.GT': {\r\n        method: 'gt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\r\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\r\n        ]\r\n    },\r\n    'HF.GTE': {\r\n        method: 'gte',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\r\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\r\n        ]\r\n    },\r\n    'HF.LT': {\r\n        method: 'lt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\r\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\r\n        ]\r\n    },\r\n    'HF.LTE': {\r\n        method: 'lte',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\r\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\r\n        ]\r\n    },\r\n    'HF.MINUS': {\r\n        method: 'minus',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\r\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\r\n        ],\r\n    },\r\n    'HF.MULTIPLY': {\r\n        method: 'multiply',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\r\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\r\n        ],\r\n    },\r\n    'HF.NE': {\r\n        method: 'ne',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\r\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\r\n        ]\r\n    },\r\n    'HF.POW': {\r\n        method: 'pow',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\r\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\r\n        ],\r\n    },\r\n    'HF.UMINUS': {\r\n        method: 'uminus',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\r\n        ],\r\n    },\r\n    'HF.UNARY_PERCENT': {\r\n        method: 'upercent',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\r\n        ],\r\n    },\r\n    'HF.UPLUS': {\r\n        method: 'uplus',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\r\n        ],\r\n    },\r\n};\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { besseli, besselj, besselk, bessely } from './3rdparty/bessel/bessel';\r\nimport { beta, binomial, centralF, chisquare, erf, erfc, exponential, gamma, gammafn, gammaln, hypgeom, lognormal, negbin, normal, normalci, poisson, studentt, tci, weibull } from './3rdparty/jstat/jstat';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class StatisticalPlugin extends FunctionPlugin {\r\n    erf(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ERF'), (lowerBound, upperBound) => {\r\n            if (upperBound === undefined) {\r\n                return erf(lowerBound);\r\n            }\r\n            else {\r\n                return erf(upperBound) - erf(lowerBound);\r\n            }\r\n        });\r\n    }\r\n    erfc(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('ERFC'), erfc);\r\n    }\r\n    expondist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('EXPON.DIST'), (x, lambda, cumulative) => {\r\n            if (cumulative) {\r\n                return exponential.cdf(x, lambda);\r\n            }\r\n            else {\r\n                return exponential.pdf(x, lambda);\r\n            }\r\n        });\r\n    }\r\n    fisher(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FISHER'), (x) => Math.log((1 + x) / (1 - x)) / 2);\r\n    }\r\n    fisherinv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FISHERINV'), (y) => 1 - 2 / (Math.exp(2 * y) + 1));\r\n    }\r\n    gamma(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('GAMMA'), gammafn);\r\n    }\r\n    gammadist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('GAMMA.DIST'), (value, alphaVal, betaVal, cumulative) => {\r\n            if (cumulative) {\r\n                return gamma.cdf(value, alphaVal, betaVal);\r\n            }\r\n            else {\r\n                return gamma.pdf(value, alphaVal, betaVal);\r\n            }\r\n        });\r\n    }\r\n    gammaln(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('GAMMALN'), gammaln);\r\n    }\r\n    gammainv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('GAMMA.INV'), gamma.inv);\r\n    }\r\n    gauss(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('GAUSS'), (z) => normal.cdf(z, 0, 1) - 0.5);\r\n    }\r\n    betadist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BETA.DIST'), (x, alphaVal, betaVal, cumulative, A, B) => {\r\n            if (x <= A) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n            }\r\n            else if (x >= B) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            x = (x - A) / (B - A);\r\n            if (cumulative) {\r\n                return beta.cdf(x, alphaVal, betaVal);\r\n            }\r\n            else {\r\n                return beta.pdf(x, alphaVal, betaVal);\r\n            }\r\n        });\r\n    }\r\n    betainv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BETA.INV'), (x, alphaVal, betaVal, A, B) => {\r\n            if (A >= B) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.WrongOrder);\r\n            }\r\n            else {\r\n                return beta.inv(x, alphaVal, betaVal) * (B - A) + A;\r\n            }\r\n        });\r\n    }\r\n    binomialdist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BINOM.DIST'), (succ, trials, prob, cumulative) => {\r\n            if (succ > trials) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.WrongOrder);\r\n            }\r\n            succ = Math.trunc(succ);\r\n            trials = Math.trunc(trials);\r\n            if (cumulative) {\r\n                return binomial.cdf(succ, trials, prob);\r\n            }\r\n            else {\r\n                return binomial.pdf(succ, trials, prob);\r\n            }\r\n        });\r\n    }\r\n    binomialinv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BINOM.INV'), (trials, prob, alpha) => {\r\n            trials = Math.trunc(trials);\r\n            let lower = -1;\r\n            let upper = trials;\r\n            while (upper > lower + 1) {\r\n                const mid = Math.trunc((lower + upper) / 2);\r\n                if (binomial.cdf(mid, trials, prob) >= alpha) {\r\n                    upper = mid;\r\n                }\r\n                else {\r\n                    lower = mid;\r\n                }\r\n            }\r\n            return upper;\r\n        });\r\n    }\r\n    besselifn(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BESSELI'), (x, n) => besseli(x, Math.trunc(n)));\r\n    }\r\n    besseljfn(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BESSELJ'), (x, n) => besselj(x, Math.trunc(n)));\r\n    }\r\n    besselkfn(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BESSELK'), (x, n) => besselk(x, Math.trunc(n)));\r\n    }\r\n    besselyfn(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('BESSELY'), (x, n) => bessely(x, Math.trunc(n)));\r\n    }\r\n    chisqdist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CHISQ.DIST'), (x, deg, cumulative) => {\r\n            deg = Math.trunc(deg);\r\n            if (cumulative) {\r\n                return chisquare.cdf(x, deg);\r\n            }\r\n            else {\r\n                return chisquare.pdf(x, deg);\r\n            }\r\n        });\r\n    }\r\n    chisqdistrt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CHISQ.DIST.RT'), (x, deg) => 1 - chisquare.cdf(x, Math.trunc(deg)));\r\n    }\r\n    chisqinv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CHISQ.INV'), (p, deg) => chisquare.inv(p, Math.trunc(deg)));\r\n    }\r\n    chisqinvrt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CHISQ.INV.RT'), (p, deg) => chisquare.inv(1.0 - p, Math.trunc(deg)));\r\n    }\r\n    fdist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('F.DIST'), (x, deg1, deg2, cumulative) => {\r\n            deg1 = Math.trunc(deg1);\r\n            deg2 = Math.trunc(deg2);\r\n            if (cumulative) {\r\n                return centralF.cdf(x, deg1, deg2);\r\n            }\r\n            else {\r\n                return centralF.pdf(x, deg1, deg2);\r\n            }\r\n        });\r\n    }\r\n    fdistrt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('F.DIST.RT'), (x, deg1, deg2) => 1 - centralF.cdf(x, Math.trunc(deg1), Math.trunc(deg2)));\r\n    }\r\n    finv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('F.INV'), (p, deg1, deg2) => centralF.inv(p, Math.trunc(deg1), Math.trunc(deg2)));\r\n    }\r\n    finvrt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('F.INV.RT'), (p, deg1, deg2) => centralF.inv(1.0 - p, Math.trunc(deg1), Math.trunc(deg2)));\r\n    }\r\n    weibulldist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('WEIBULL.DIST'), (x, shape, scale, cumulative) => {\r\n            if (cumulative) {\r\n                return weibull.cdf(x, scale, shape);\r\n            }\r\n            else {\r\n                return weibull.pdf(x, scale, shape);\r\n            }\r\n        });\r\n    }\r\n    poissondist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('POISSON.DIST'), (x, mean, cumulative) => {\r\n            x = Math.trunc(x);\r\n            if (cumulative) {\r\n                return poisson.cdf(x, mean);\r\n            }\r\n            else {\r\n                return poisson.pdf(x, mean);\r\n            }\r\n        });\r\n    }\r\n    hypgeomdist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HYPGEOM.DIST'), (s, numberS, populationS, numberPop, cumulative) => {\r\n            if (s > numberS || s > populationS || numberS > numberPop || populationS > numberPop) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            if (s + numberPop < populationS + numberS) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            s = Math.trunc(s);\r\n            numberS = Math.trunc(numberS);\r\n            populationS = Math.trunc(populationS);\r\n            numberPop = Math.trunc(numberPop);\r\n            if (cumulative) {\r\n                return hypgeom.cdf(s, numberPop, populationS, numberS);\r\n            }\r\n            else {\r\n                return hypgeom.pdf(s, numberPop, populationS, numberS);\r\n            }\r\n        });\r\n    }\r\n    tdist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('T.DIST'), (x, deg, cumulative) => {\r\n            deg = Math.trunc(deg);\r\n            if (cumulative) {\r\n                return studentt.cdf(x, deg);\r\n            }\r\n            else {\r\n                return studentt.pdf(x, deg);\r\n            }\r\n        });\r\n    }\r\n    tdist2t(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('T.DIST.2T'), (x, deg) => (1 - studentt.cdf(x, Math.trunc(deg))) * 2);\r\n    }\r\n    tdistrt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('T.DIST.RT'), (x, deg) => 1 - studentt.cdf(x, Math.trunc(deg)));\r\n    }\r\n    tdistold(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('TDIST'), (x, deg, mode) => mode * (1 - studentt.cdf(x, Math.trunc(deg))));\r\n    }\r\n    tinv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('T.INV'), (p, deg) => studentt.inv(p, Math.trunc(deg)));\r\n    }\r\n    tinv2t(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('T.INV.2T'), (p, deg) => studentt.inv(1 - p / 2, Math.trunc(deg)));\r\n    }\r\n    lognormdist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LOGNORM.DIST'), (x, mean, stddev, cumulative) => {\r\n            if (cumulative) {\r\n                return lognormal.cdf(x, mean, stddev);\r\n            }\r\n            else {\r\n                return lognormal.pdf(x, mean, stddev);\r\n            }\r\n        });\r\n    }\r\n    lognorminv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LOGNORM.INV'), (p, mean, stddev) => lognormal.inv(p, mean, stddev));\r\n    }\r\n    normdist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NORM.DIST'), (x, mean, stddev, cumulative) => {\r\n            if (cumulative) {\r\n                return normal.cdf(x, mean, stddev);\r\n            }\r\n            else {\r\n                return normal.pdf(x, mean, stddev);\r\n            }\r\n        });\r\n    }\r\n    norminv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NORM.INV'), (p, mean, stddev) => normal.inv(p, mean, stddev));\r\n    }\r\n    normsdist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NORM.S.DIST'), (x, cumulative) => {\r\n            if (cumulative) {\r\n                return normal.cdf(x, 0, 1);\r\n            }\r\n            else {\r\n                return normal.pdf(x, 0, 1);\r\n            }\r\n        });\r\n    }\r\n    normsinv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NORM.S.INV'), (p) => normal.inv(p, 0, 1));\r\n    }\r\n    phi(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('PHI'), (x) => normal.pdf(x, 0, 1));\r\n    }\r\n    negbinomdist(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('NEGBINOM.DIST'), (nf, ns, p, cumulative) => {\r\n            nf = Math.trunc(nf);\r\n            ns = Math.trunc(ns);\r\n            if (cumulative) {\r\n                return negbin.cdf(nf, ns, p);\r\n            }\r\n            else {\r\n                return negbin.pdf(nf, ns, p);\r\n            }\r\n        });\r\n    }\r\n    confidencenorm(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CONFIDENCE.NORM'), \r\n        // eslint-disable-next-line\r\n        // @ts-ignore\r\n        (alpha, stddev, size) => normalci(1, alpha, stddev, Math.trunc(size))[1] - 1);\r\n    }\r\n    confidencet(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CONFIDENCE.T'), (alpha, stddev, size) => {\r\n            size = Math.trunc(size);\r\n            if (size === 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            // eslint-disable-next-line\r\n            // @ts-ignore\r\n            return tci(1, alpha, stddev, size)[1] - 1;\r\n        });\r\n    }\r\n    standardize(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('STANDARDIZE'), (x, mean, stddev) => (x - mean) / stddev);\r\n    }\r\n}\r\nStatisticalPlugin.implementedFunctions = {\r\n    'ERF': {\r\n        method: 'erf',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true },\r\n        ]\r\n    },\r\n    'ERFC': {\r\n        method: 'erfc',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'EXPON.DIST': {\r\n        method: 'expondist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'FISHER': {\r\n        method: 'fisher',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: -1, lessThan: 1 }\r\n        ]\r\n    },\r\n    'FISHERINV': {\r\n        method: 'fisherinv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'GAMMA': {\r\n        method: 'gamma',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'GAMMA.DIST': {\r\n        method: 'gammadist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'GAMMALN': {\r\n        method: 'gammaln',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 }\r\n        ]\r\n    },\r\n    'GAMMA.INV': {\r\n        method: 'gammainv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, lessThan: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n        ]\r\n    },\r\n    'GAUSS': {\r\n        method: 'gauss',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'BETA.DIST': {\r\n        method: 'betadist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n    'BETA.INV': {\r\n        method: 'betainv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, maxValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\r\n        ]\r\n    },\r\n    'BINOM.DIST': {\r\n        method: 'binomialdist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, maxValue: 1 },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'BINOM.INV': {\r\n        method: 'binomialinv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, maxValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, lessThan: 1 },\r\n        ]\r\n    },\r\n    'BESSELI': {\r\n        method: 'besselifn',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'BESSELJ': {\r\n        method: 'besseljfn',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'BESSELK': {\r\n        method: 'besselkfn',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'BESSELY': {\r\n        method: 'besselyfn',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n        ]\r\n    },\r\n    'CHISQ.DIST': {\r\n        method: 'chisqdist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1, maxValue: 1e10 },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'CHISQ.DIST.RT': {\r\n        method: 'chisqdistrt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1, maxValue: 1e10 },\r\n        ]\r\n    },\r\n    'CHISQ.INV': {\r\n        method: 'chisqinv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, maxValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1, maxValue: 1e10 },\r\n        ]\r\n    },\r\n    'CHISQ.INV.RT': {\r\n        method: 'chisqinvrt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, maxValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ]\r\n    },\r\n    'F.DIST': {\r\n        method: 'fdist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'F.DIST.RT': {\r\n        method: 'fdistrt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ]\r\n    },\r\n    'F.INV': {\r\n        method: 'finv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, maxValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ]\r\n    },\r\n    'F.INV.RT': {\r\n        method: 'finvrt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, maxValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ]\r\n    },\r\n    'WEIBULL.DIST': {\r\n        method: 'weibulldist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'POISSON.DIST': {\r\n        method: 'poissondist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'HYPGEOM.DIST': {\r\n        method: 'hypgeomdist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'T.DIST': {\r\n        method: 'tdist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'T.DIST.2T': {\r\n        method: 'tdist2t',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ]\r\n    },\r\n    'T.DIST.RT': {\r\n        method: 'tdistrt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ]\r\n    },\r\n    'TDIST': {\r\n        method: 'tdistold',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1, maxValue: 2 },\r\n        ]\r\n    },\r\n    'T.INV': {\r\n        method: 'tinv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, lessThan: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ]\r\n    },\r\n    'T.INV.2T': {\r\n        method: 'tinv2t',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, maxValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ]\r\n    },\r\n    'LOGNORM.DIST': {\r\n        method: 'lognormdist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'LOGNORM.INV': {\r\n        method: 'lognorminv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, lessThan: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n        ]\r\n    },\r\n    'NORM.DIST': {\r\n        method: 'normdist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'NORM.INV': {\r\n        method: 'norminv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, lessThan: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n        ]\r\n    },\r\n    'NORM.S.DIST': {\r\n        method: 'normsdist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'NORM.S.INV': {\r\n        method: 'normsinv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, lessThan: 1 },\r\n        ]\r\n    },\r\n    'PHI': {\r\n        method: 'phi',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER }\r\n        ]\r\n    },\r\n    'NEGBINOM.DIST': {\r\n        method: 'negbinomdist',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, maxValue: 1 },\r\n            { argumentType: ArgumentTypes.BOOLEAN },\r\n        ]\r\n    },\r\n    'CONFIDENCE.NORM': {\r\n        method: 'confidencenorm',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, lessThan: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ],\r\n    },\r\n    'CONFIDENCE.T': {\r\n        method: 'confidencet',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, lessThan: 1 },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\r\n        ],\r\n    },\r\n    'STANDARDIZE': {\r\n        method: 'standardize',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\r\n        ],\r\n    },\r\n};\r\nStatisticalPlugin.aliases = {\r\n    NEGBINOMDIST: 'NEGBINOM.DIST',\r\n    EXPONDIST: 'EXPON.DIST',\r\n    BETADIST: 'BETA.DIST',\r\n    NORMDIST: 'NORM.DIST',\r\n    NORMINV: 'NORM.INV',\r\n    NORMSDIST: 'NORM.S.DIST',\r\n    NORMSINV: 'NORM.S.INV',\r\n    LOGNORMDIST: 'LOGNORM.DIST',\r\n    LOGINV: 'LOGNORM.INV',\r\n    TINV: 'T.INV.2T',\r\n    HYPGEOMDIST: 'HYPGEOM.DIST',\r\n    POISSON: 'POISSON.DIST',\r\n    WEIBULL: 'WEIBULL.DIST',\r\n    FINV: 'F.INV.RT',\r\n    FDIST: 'F.DIST.RT',\r\n    CHIDIST: 'CHISQ.DIST.RT',\r\n    CHIINV: 'CHISQ.INV.RT',\r\n    GAMMADIST: 'GAMMA.DIST',\r\n    'GAMMALN.PRECISE': 'GAMMALN',\r\n    GAMMAINV: 'GAMMA.INV',\r\n    BETAINV: 'BETA.INV',\r\n    BINOMDIST: 'BINOM.DIST',\r\n    CONFIDENCE: 'CONFIDENCE.NORM',\r\n    CRITBINOM: 'BINOM.INV',\r\n    WEIBULLDIST: 'WEIBULL.DIST',\r\n    TINV2T: 'T.INV.2T',\r\n    TDISTRT: 'T.DIST.RT',\r\n    TDIST2T: 'T.DIST.2T',\r\n    FINVRT: 'F.INV.RT',\r\n    FDISTRT: 'F.DIST.RT',\r\n    CHIDISTRT: 'CHISQ.DIST.RT',\r\n    CHIINVRT: 'CHISQ.INV.RT',\r\n    LOGNORMINV: 'LOGNORM.INV',\r\n    POISSONDIST: 'POISSON.DIST',\r\n};\r\n","/**\r\n * @license\r\n bessel.js (C) 2013-present SheetJS -- http://sheetjs.com\r\n\r\n Apache License\r\n Version 2.0, January 2004\r\n http://www.apache.org/licenses/\r\n\r\n TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\r\n\r\n 1. Definitions.\r\n\r\n \"License\" shall mean the terms and conditions for use, reproduction,\r\n and distribution as defined by Sections 1 through 9 of this document.\r\n\r\n \"Licensor\" shall mean the copyright owner or entity authorized by\r\n the copyright owner that is granting the License.\r\n\r\n \"Legal Entity\" shall mean the union of the acting entity and all\r\n other entities that control, are controlled by, or are under common\r\n control with that entity. For the purposes of this definition,\r\n \"control\" means (i) the power, direct or indirect, to cause the\r\n direction or management of such entity, whether by contract or\r\n otherwise, or (ii) ownership of fifty percent (50%) or more of the\r\n outstanding shares, or (iii) beneficial ownership of such entity.\r\n\r\n \"You\" (or \"Your\") shall mean an individual or Legal Entity\r\n exercising permissions granted by this License.\r\n\r\n \"Source\" form shall mean the preferred form for making modifications,\r\n including but not limited to software source code, documentation\r\n source, and configuration files.\r\n\r\n \"Object\" form shall mean any form resulting from mechanical\r\n transformation or translation of a Source form, including but\r\n not limited to compiled object code, generated documentation,\r\n and conversions to other media types.\r\n\r\n \"Work\" shall mean the work of authorship, whether in Source or\r\n Object form, made available under the License, as indicated by a\r\n copyright notice that is included in or attached to the work\r\n (an example is provided in the Appendix below).\r\n\r\n \"Derivative Works\" shall mean any work, whether in Source or Object\r\n form, that is based on (or derived from) the Work and for which the\r\n editorial revisions, annotations, elaborations, or other modifications\r\n represent, as a whole, an original work of authorship. For the purposes\r\n of this License, Derivative Works shall not include works that remain\r\n separable from, or merely link (or bind by name) to the interfaces of,\r\n the Work and Derivative Works thereof.\r\n\r\n \"Contribution\" shall mean any work of authorship, including\r\n the original version of the Work and any modifications or additions\r\n to that Work or Derivative Works thereof, that is intentionally\r\n submitted to Licensor for inclusion in the Work by the copyright owner\r\n or by an individual or Legal Entity authorized to submit on behalf of\r\n the copyright owner. For the purposes of this definition, \"submitted\"\r\n means any form of electronic, verbal, or written communication sent\r\n to the Licensor or its representatives, including but not limited to\r\n communication on electronic mailing lists, source code control systems,\r\n and issue tracking systems that are managed by, or on behalf of, the\r\n Licensor for the purpose of discussing and improving the Work, but\r\n excluding communication that is conspicuously marked or otherwise\r\n designated in writing by the copyright owner as \"Not a Contribution.\"\r\n\r\n \"Contributor\" shall mean Licensor and any individual or Legal Entity\r\n on behalf of whom a Contribution has been received by Licensor and\r\n subsequently incorporated within the Work.\r\n\r\n 2. Grant of Copyright License. Subject to the terms and conditions of\r\n this License, each Contributor hereby grants to You a perpetual,\r\n worldwide, non-exclusive, no-charge, royalty-free, irrevocable\r\n copyright license to reproduce, prepare Derivative Works of,\r\n publicly display, publicly perform, sublicense, and distribute the\r\n Work and such Derivative Works in Source or Object form.\r\n\r\n 3. Grant of Patent License. Subject to the terms and conditions of\r\n this License, each Contributor hereby grants to You a perpetual,\r\n worldwide, non-exclusive, no-charge, royalty-free, irrevocable\r\n (except as stated in this section) patent license to make, have made,\r\n use, offer to sell, sell, import, and otherwise transfer the Work,\r\n where such license applies only to those patent claims licensable\r\n by such Contributor that are necessarily infringed by their\r\n Contribution(s) alone or by combination of their Contribution(s)\r\n with the Work to which such Contribution(s) was submitted. If You\r\n institute patent litigation against any entity (including a\r\n cross-claim or counterclaim in a lawsuit) alleging that the Work\r\n or a Contribution incorporated within the Work constitutes direct\r\n or contributory patent infringement, then any patent licenses\r\n granted to You under this License for that Work shall terminate\r\n as of the date such litigation is filed.\r\n\r\n 4. Redistribution. You may reproduce and distribute copies of the\r\n Work or Derivative Works thereof in any medium, with or without\r\n modifications, and in Source or Object form, provided that You\r\n meet the following conditions:\r\n\r\n (a) You must give any other recipients of the Work or\r\n Derivative Works a copy of this License; and\r\n\r\n (b) You must cause any modified files to carry prominent notices\r\n stating that You changed the files; and\r\n\r\n (c) You must retain, in the Source form of any Derivative Works\r\n that You distribute, all copyright, patent, trademark, and\r\n attribution notices from the Source form of the Work,\r\n excluding those notices that do not pertain to any part of\r\n the Derivative Works; and\r\n\r\n (d) If the Work includes a \"NOTICE\" text file as part of its\r\n distribution, then any Derivative Works that You distribute must\r\n include a readable copy of the attribution notices contained\r\n within such NOTICE file, excluding those notices that do not\r\n pertain to any part of the Derivative Works, in at least one\r\n of the following places: within a NOTICE text file distributed\r\n as part of the Derivative Works; within the Source form or\r\n documentation, if provided along with the Derivative Works; or,\r\n within a display generated by the Derivative Works, if and\r\n wherever such third-party notices normally appear. The contents\r\n of the NOTICE file are for informational purposes only and\r\n do not modify the License. You may add Your own attribution\r\n notices within Derivative Works that You distribute, alongside\r\n or as an addendum to the NOTICE text from the Work, provided\r\n that such additional attribution notices cannot be construed\r\n as modifying the License.\r\n\r\n You may add Your own copyright statement to Your modifications and\r\n may provide additional or different license terms and conditions\r\n for use, reproduction, or distribution of Your modifications, or\r\n for any such Derivative Works as a whole, provided Your use,\r\n reproduction, and distribution of the Work otherwise complies with\r\n the conditions stated in this License.\r\n\r\n 5. Submission of Contributions. Unless You explicitly state otherwise,\r\n any Contribution intentionally submitted for inclusion in the Work\r\n by You to the Licensor shall be under the terms and conditions of\r\n this License, without any additional terms or conditions.\r\n Notwithstanding the above, nothing herein shall supersede or modify\r\n the terms of any separate license agreement you may have executed\r\n with Licensor regarding such Contributions.\r\n\r\n 6. Trademarks. This License does not grant permission to use the trade\r\n names, trademarks, service marks, or product names of the Licensor,\r\n except as required for reasonable and customary use in describing the\r\n origin of the Work and reproducing the content of the NOTICE file.\r\n\r\n 7. Disclaimer of Warranty. Unless required by applicable law or\r\n agreed to in writing, Licensor provides the Work (and each\r\n Contributor provides its Contributions) on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\r\n implied, including, without limitation, any warranties or conditions\r\n of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\r\n PARTICULAR PURPOSE. You are solely responsible for determining the\r\n appropriateness of using or redistributing the Work and assume any\r\n risks associated with Your exercise of permissions under this License.\r\n\r\n 8. Limitation of Liability. In no event and under no legal theory,\r\n whether in tort (including negligence), contract, or otherwise,\r\n unless required by applicable law (such as deliberate and grossly\r\n negligent acts) or agreed to in writing, shall any Contributor be\r\n liable to You for damages, including any direct, indirect, special,\r\n incidental, or consequential damages of any character arising as a\r\n result of this License or out of the use or inability to use the\r\n Work (including but not limited to damages for loss of goodwill,\r\n work stoppage, computer failure or malfunction, or any and all\r\n other commercial damages or losses), even if such Contributor\r\n has been advised of the possibility of such damages.\r\n\r\n 9. Accepting Warranty or Additional Liability. While redistributing\r\n the Work or Derivative Works thereof, You may choose to offer,\r\n and charge a fee for, acceptance of support, warranty, indemnity,\r\n or other liability obligations and/or rights consistent with this\r\n License. However, in accepting such obligations, You may act only\r\n on Your own behalf and on Your sole responsibility, not on behalf\r\n of any other Contributor, and only if You agree to indemnify,\r\n defend, and hold each Contributor harmless for any liability\r\n incurred by, or claims asserted against, such Contributor by reason\r\n of your accepting any such warranty or additional liability.\r\n\r\n END OF TERMS AND CONDITIONS\r\n\r\n APPENDIX: How to apply the Apache License to your work.\r\n\r\n To apply the Apache License to your work, attach the following\r\n boilerplate notice, with the fields enclosed by brackets \"{}\"\r\n replaced with your own identifying information. (Don't include\r\n the brackets!)  The text should be enclosed in the appropriate\r\n comment syntax for the file format. We also recommend that a\r\n file or class name and description of purpose be included on the\r\n same \"printed page\" as the copyright notice for easier\r\n identification within third-party archives.\r\n\r\n Copyright (C) 2013-present   SheetJS LLC\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n\r\n */\r\nvar M = Math;\r\n// @ts-ignore\r\nfunction _horner(arr, v) {\r\n    for (var i = 0, z = 0; i < arr.length; ++i) {\r\n        z = v * z + arr[i];\r\n    }\r\n    return z;\r\n}\r\n// @ts-ignore\r\nfunction _bessel_iter(x, n, f0, f1, sign) {\r\n    if (n === 0) {\r\n        return f0;\r\n    }\r\n    if (n === 1) {\r\n        return f1;\r\n    }\r\n    var tdx = 2 / x, f2 = f1;\r\n    for (var o = 1; o < n; ++o) {\r\n        f2 = f1 * o * tdx + sign * f0;\r\n        f0 = f1;\r\n        f1 = f2;\r\n    }\r\n    return f2;\r\n}\r\n// @ts-ignore\r\nfunction _bessel_wrap(bessel0, bessel1, name, nonzero, sign) {\r\n    // @ts-ignore\r\n    return function bessel(x, n) {\r\n        if (nonzero) {\r\n            if (x === 0) {\r\n                return (nonzero == 1 ? -Infinity : Infinity);\r\n            }\r\n            else if (x < 0) {\r\n                return NaN;\r\n            }\r\n        }\r\n        if (n === 0) {\r\n            return bessel0(x);\r\n        }\r\n        if (n === 1) {\r\n            return bessel1(x);\r\n        }\r\n        if (n < 0) {\r\n            return NaN;\r\n        }\r\n        n |= 0;\r\n        var b0 = bessel0(x), b1 = bessel1(x);\r\n        return _bessel_iter(x, n, b0, b1, sign);\r\n    };\r\n}\r\nexport var besselj = (function () {\r\n    var W = 0.636619772; // 2 / Math.PI\r\n    var b0_a1a = [57568490574.0, -13362590354.0, 651619640.7, -11214424.18, 77392.33017, -184.9052456].reverse();\r\n    var b0_a2a = [57568490411.0, 1029532985.0, 9494680.718, 59272.64853, 267.8532712, 1.0].reverse();\r\n    var b0_a1b = [1.0, -0.1098628627e-2, 0.2734510407e-4, -0.2073370639e-5, 0.2093887211e-6].reverse();\r\n    var b0_a2b = [-0.1562499995e-1, 0.1430488765e-3, -0.6911147651e-5, 0.7621095161e-6, -0.934935152e-7].reverse();\r\n    // @ts-ignore\r\n    function bessel0(x) {\r\n        var a = 0, a1 = 0, a2 = 0, y = x * x;\r\n        if (x < 8) {\r\n            a1 = _horner(b0_a1a, y);\r\n            a2 = _horner(b0_a2a, y);\r\n            a = a1 / a2;\r\n        }\r\n        else {\r\n            var xx = x - 0.785398164;\r\n            y = 64 / y;\r\n            a1 = _horner(b0_a1b, y);\r\n            a2 = _horner(b0_a2b, y);\r\n            a = M.sqrt(W / x) * (M.cos(xx) * a1 - M.sin(xx) * a2 * 8 / x);\r\n        }\r\n        return a;\r\n    }\r\n    var b1_a1a = [72362614232.0, -7895059235.0, 242396853.1, -2972611.439, 15704.48260, -30.16036606].reverse();\r\n    var b1_a2a = [144725228442.0, 2300535178.0, 18583304.74, 99447.43394, 376.9991397, 1.0].reverse();\r\n    var b1_a1b = [1.0, 0.183105e-2, -0.3516396496e-4, 0.2457520174e-5, -0.240337019e-6].reverse();\r\n    var b1_a2b = [0.04687499995, -0.2002690873e-3, 0.8449199096e-5, -0.88228987e-6, 0.105787412e-6].reverse();\r\n    // @ts-ignore\r\n    function bessel1(x) {\r\n        var a = 0, a1 = 0, a2 = 0, y = x * x, xx = M.abs(x) - 2.356194491;\r\n        if (Math.abs(x) < 8) {\r\n            a1 = x * _horner(b1_a1a, y);\r\n            a2 = _horner(b1_a2a, y);\r\n            a = a1 / a2;\r\n        }\r\n        else {\r\n            y = 64 / y;\r\n            a1 = _horner(b1_a1b, y);\r\n            a2 = _horner(b1_a2b, y);\r\n            a = M.sqrt(W / M.abs(x)) * (M.cos(xx) * a1 - M.sin(xx) * a2 * 8 / M.abs(x));\r\n            if (x < 0) {\r\n                a = -a;\r\n            }\r\n        }\r\n        return a;\r\n    }\r\n    // @ts-ignore\r\n    return function besselj(x, n) {\r\n        n = Math.round(n);\r\n        if (!isFinite(x)) {\r\n            return isNaN(x) ? x : 0;\r\n        }\r\n        if (n < 0) {\r\n            return ((n % 2) ? -1 : 1) * besselj(x, -n);\r\n        }\r\n        if (x < 0) {\r\n            return ((n % 2) ? -1 : 1) * besselj(-x, n);\r\n        }\r\n        if (n === 0) {\r\n            return bessel0(x);\r\n        }\r\n        if (n === 1) {\r\n            return bessel1(x);\r\n        }\r\n        if (x === 0) {\r\n            return 0;\r\n        }\r\n        var ret = 0.0;\r\n        if (x > n) {\r\n            ret = _bessel_iter(x, n, bessel0(x), bessel1(x), -1);\r\n        }\r\n        else {\r\n            var m = 2 * M.floor((n + M.floor(M.sqrt(40 * n))) / 2);\r\n            var jsum = false;\r\n            var bjp = 0.0, sum = 0.0;\r\n            var bj = 1.0, bjm = 0.0;\r\n            var tox = 2 / x;\r\n            for (var j = m; j > 0; j--) {\r\n                bjm = j * tox * bj - bjp;\r\n                bjp = bj;\r\n                bj = bjm;\r\n                if (M.abs(bj) > 1E10) {\r\n                    bj *= 1E-10;\r\n                    bjp *= 1E-10;\r\n                    ret *= 1E-10;\r\n                    sum *= 1E-10;\r\n                }\r\n                if (jsum) {\r\n                    sum += bj;\r\n                }\r\n                jsum = !jsum;\r\n                if (j == n) {\r\n                    ret = bjp;\r\n                }\r\n            }\r\n            sum = 2.0 * sum - bj;\r\n            ret /= sum;\r\n        }\r\n        return ret;\r\n    };\r\n})();\r\nexport var bessely = (function () {\r\n    var W = 0.636619772;\r\n    var b0_a1a = [-2957821389.0, 7062834065.0, -512359803.6, 10879881.29, -86327.92757, 228.4622733].reverse();\r\n    var b0_a2a = [40076544269.0, 745249964.8, 7189466.438, 47447.26470, 226.1030244, 1.0].reverse();\r\n    var b0_a1b = [1.0, -0.1098628627e-2, 0.2734510407e-4, -0.2073370639e-5, 0.2093887211e-6].reverse();\r\n    var b0_a2b = [-0.1562499995e-1, 0.1430488765e-3, -0.6911147651e-5, 0.7621095161e-6, -0.934945152e-7].reverse();\r\n    // @ts-ignore\r\n    function bessel0(x) {\r\n        var a = 0, a1 = 0, a2 = 0, y = x * x, xx = x - 0.785398164;\r\n        if (x < 8) {\r\n            a1 = _horner(b0_a1a, y);\r\n            a2 = _horner(b0_a2a, y);\r\n            a = a1 / a2 + W * besselj(x, 0) * M.log(x);\r\n        }\r\n        else {\r\n            y = 64 / y;\r\n            a1 = _horner(b0_a1b, y);\r\n            a2 = _horner(b0_a2b, y);\r\n            a = M.sqrt(W / x) * (M.sin(xx) * a1 + M.cos(xx) * a2 * 8 / x);\r\n        }\r\n        return a;\r\n    }\r\n    var b1_a1a = [-0.4900604943e13, 0.1275274390e13, -0.5153438139e11, 0.7349264551e9, -0.4237922726e7, 0.8511937935e4].reverse();\r\n    var b1_a2a = [0.2499580570e14, 0.4244419664e12, 0.3733650367e10, 0.2245904002e8, 0.1020426050e6, 0.3549632885e3, 1].reverse();\r\n    var b1_a1b = [1.0, 0.183105e-2, -0.3516396496e-4, 0.2457520174e-5, -0.240337019e-6].reverse();\r\n    var b1_a2b = [0.04687499995, -0.2002690873e-3, 0.8449199096e-5, -0.88228987e-6, 0.105787412e-6].reverse();\r\n    // @ts-ignore\r\n    function bessel1(x) {\r\n        var a = 0, a1 = 0, a2 = 0, y = x * x, xx = x - 2.356194491;\r\n        if (x < 8) {\r\n            a1 = x * _horner(b1_a1a, y);\r\n            a2 = _horner(b1_a2a, y);\r\n            a = a1 / a2 + W * (besselj(x, 1) * M.log(x) - 1 / x);\r\n        }\r\n        else {\r\n            y = 64 / y;\r\n            a1 = _horner(b1_a1b, y);\r\n            a2 = _horner(b1_a2b, y);\r\n            a = M.sqrt(W / x) * (M.sin(xx) * a1 + M.cos(xx) * a2 * 8 / x);\r\n        }\r\n        return a;\r\n    }\r\n    return _bessel_wrap(bessel0, bessel1, 'BESSELY', 1, -1);\r\n})();\r\nexport var besseli = (function () {\r\n    var b0_a = [1.0, 3.5156229, 3.0899424, 1.2067492, 0.2659732, 0.360768e-1, 0.45813e-2].reverse();\r\n    var b0_b = [0.39894228, 0.1328592e-1, 0.225319e-2, -0.157565e-2, 0.916281e-2, -0.2057706e-1, 0.2635537e-1, -0.1647633e-1, 0.392377e-2].reverse();\r\n    // @ts-ignore\r\n    function bessel0(x) {\r\n        if (x <= 3.75) {\r\n            return _horner(b0_a, x * x / (3.75 * 3.75));\r\n        }\r\n        return M.exp(M.abs(x)) / M.sqrt(M.abs(x)) * _horner(b0_b, 3.75 / M.abs(x));\r\n    }\r\n    var b1_a = [0.5, 0.87890594, 0.51498869, 0.15084934, 0.2658733e-1, 0.301532e-2, 0.32411e-3].reverse();\r\n    var b1_b = [0.39894228, -0.3988024e-1, -0.362018e-2, 0.163801e-2, -0.1031555e-1, 0.2282967e-1, -0.2895312e-1, 0.1787654e-1, -0.420059e-2].reverse();\r\n    // @ts-ignore\r\n    function bessel1(x) {\r\n        if (x < 3.75) {\r\n            return x * _horner(b1_a, x * x / (3.75 * 3.75));\r\n        }\r\n        return (x < 0 ? -1 : 1) * M.exp(M.abs(x)) / M.sqrt(M.abs(x)) * _horner(b1_b, 3.75 / M.abs(x));\r\n    }\r\n    // @ts-ignore\r\n    return function besseli(x, n) {\r\n        n = Math.round(n);\r\n        if (n === 0) {\r\n            return bessel0(x);\r\n        }\r\n        if (n === 1) {\r\n            return bessel1(x);\r\n        }\r\n        if (n < 0) {\r\n            return NaN;\r\n        }\r\n        if (M.abs(x) === 0) {\r\n            return 0;\r\n        }\r\n        if (x == Infinity) {\r\n            return Infinity;\r\n        }\r\n        var ret = 0.0, j, tox = 2 / M.abs(x), bip = 0.0, bi = 1.0, bim = 0.0;\r\n        var m = 2 * M.round((n + M.round(M.sqrt(40 * n))) / 2);\r\n        for (j = m; j > 0; j--) {\r\n            bim = j * tox * bi + bip;\r\n            bip = bi;\r\n            bi = bim;\r\n            if (M.abs(bi) > 1E10) {\r\n                bi *= 1E-10;\r\n                bip *= 1E-10;\r\n                ret *= 1E-10;\r\n            }\r\n            if (j == n) {\r\n                ret = bip;\r\n            }\r\n        }\r\n        ret *= besseli(x, 0) / bi;\r\n        return x < 0 && (n % 2) ? -ret : ret;\r\n    };\r\n})();\r\nexport var besselk = (function () {\r\n    var b0_a = [-0.57721566, 0.42278420, 0.23069756, 0.3488590e-1, 0.262698e-2, 0.10750e-3, 0.74e-5].reverse();\r\n    var b0_b = [1.25331414, -0.7832358e-1, 0.2189568e-1, -0.1062446e-1, 0.587872e-2, -0.251540e-2, 0.53208e-3].reverse();\r\n    // @ts-ignore\r\n    function bessel0(x) {\r\n        if (x <= 2) {\r\n            return -M.log(x / 2) * besseli(x, 0) + _horner(b0_a, x * x / 4);\r\n        }\r\n        return M.exp(-x) / M.sqrt(x) * _horner(b0_b, 2 / x);\r\n    }\r\n    var b1_a = [1.0, 0.15443144, -0.67278579, -0.18156897, -0.1919402e-1, -0.110404e-2, -0.4686e-4].reverse();\r\n    var b1_b = [1.25331414, 0.23498619, -0.3655620e-1, 0.1504268e-1, -0.780353e-2, 0.325614e-2, -0.68245e-3].reverse();\r\n    // @ts-ignore\r\n    function bessel1(x) {\r\n        if (x <= 2) {\r\n            return M.log(x / 2) * besseli(x, 1) + (1 / x) * _horner(b1_a, x * x / 4);\r\n        }\r\n        return M.exp(-x) / M.sqrt(x) * _horner(b1_b, 2 / x);\r\n    }\r\n    return _bessel_wrap(bessel0, bessel1, 'BESSELK', 2, 1);\r\n})();\r\n","/**\r\n * @license\r\n Copyright (c) 2013 jStat\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights\r\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n copies of the Software, and to permit persons to whom the Software is\r\n furnished to do so, subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n */\r\nexport function erf(x) {\r\n    const cof = [-1.3026537197817094, 6.4196979235649026e-1, 1.9476473204185836e-2,\r\n        -9.561514786808631e-3, -9.46595344482036e-4, 3.66839497852761e-4,\r\n        4.2523324806907e-5, -2.0278578112534e-5, -1.624290004647e-6,\r\n        1.303655835580e-6, 1.5626441722e-8, -8.5238095915e-8,\r\n        6.529054439e-9, 5.059343495e-9, -9.91364156e-10,\r\n        -2.27365122e-10, 9.6467911e-11, 2.394038e-12,\r\n        -6.886027e-12, 8.94487e-13, 3.13092e-13,\r\n        -1.12708e-13, 3.81e-16, 7.106e-15,\r\n        -1.523e-15, -9.4e-17, 1.21e-16,\r\n        -2.8e-17];\r\n    let j = cof.length - 1;\r\n    let isneg = false;\r\n    let d = 0;\r\n    let dd = 0;\r\n    let t, ty, tmp, res;\r\n    if (x === 0) {\r\n        return 0;\r\n    }\r\n    if (x < 0) {\r\n        x = -x;\r\n        isneg = true;\r\n    }\r\n    t = 2 / (2 + x);\r\n    ty = 4 * t - 2;\r\n    for (; j > 0; j--) {\r\n        tmp = d;\r\n        d = ty * d - dd + cof[j];\r\n        dd = tmp;\r\n    }\r\n    res = t * Math.exp(-x * x + 0.5 * (cof[0] + ty * d) - dd);\r\n    return isneg ? res - 1 : 1 - res;\r\n}\r\nexport function erfc(x) {\r\n    return 1 - erf(x);\r\n}\r\nfunction erfcinv(p) {\r\n    let j = 0;\r\n    let x, err, t, pp;\r\n    if (p >= 2) {\r\n        return -100;\r\n    }\r\n    if (p <= 0) {\r\n        return 100;\r\n    }\r\n    pp = (p < 1) ? p : 2 - p;\r\n    t = Math.sqrt(-2 * Math.log(pp / 2));\r\n    x = -0.70711 * ((2.30753 + t * 0.27061) /\r\n        (1 + t * (0.99229 + t * 0.04481)) - t);\r\n    for (; j < 2; j++) {\r\n        err = erfc(x) - pp;\r\n        x += err / (1.12837916709551257 * Math.exp(-x * x) - x * err);\r\n    }\r\n    return (p < 1) ? x : -x;\r\n}\r\nexport const exponential = {\r\n    pdf: (x, rate) => {\r\n        return x < 0 ? 0 : rate * Math.exp(-rate * x);\r\n    },\r\n    cdf: (x, rate) => {\r\n        return x < 0 ? 0 : 1 - Math.exp(-rate * x);\r\n    },\r\n};\r\nexport function gammafn(x) {\r\n    const p = [-1.716185138865495, 24.76565080557592, -379.80425647094563,\r\n        629.3311553128184, 866.9662027904133, -31451.272968848367,\r\n        -36144.413418691176, 66456.14382024054\r\n    ];\r\n    const q = [-30.8402300119739, 315.35062697960416, -1015.1563674902192,\r\n        -3107.771671572311, 22538.118420980151, 4755.8462775278811,\r\n        -134659.9598649693, -115132.2596755535];\r\n    let fact = false;\r\n    let n = 0;\r\n    let xden = 0;\r\n    let xnum = 0;\r\n    let y = x;\r\n    let i, z, yi, res;\r\n    if (x > 171.6243769536076) {\r\n        return Infinity;\r\n    }\r\n    if (y <= 0) {\r\n        res = y % 1;\r\n        if (res) {\r\n            fact = (!(y & 1) ? 1 : -1) * Math.PI / Math.sin(Math.PI * res);\r\n            y = 1 - y;\r\n        }\r\n        else {\r\n            return Infinity;\r\n        }\r\n    }\r\n    yi = y;\r\n    if (y < 1) {\r\n        z = y++;\r\n    }\r\n    else {\r\n        z = (y -= n = (y | 0) - 1) - 1;\r\n    }\r\n    for (i = 0; i < 8; ++i) {\r\n        xnum = (xnum + p[i]) * z;\r\n        xden = xden * z + q[i];\r\n    }\r\n    res = xnum / xden + 1;\r\n    if (yi < y) {\r\n        res /= yi;\r\n    }\r\n    else if (yi > y) {\r\n        for (i = 0; i < n; ++i) {\r\n            res *= y;\r\n            y++;\r\n        }\r\n    }\r\n    if (fact) {\r\n        res = fact / res;\r\n    }\r\n    return res;\r\n}\r\nexport const gamma = {\r\n    pdf: function pdf(x, shape, scale) {\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        return (x === 0 && shape === 1) ? 1 / scale :\r\n            Math.exp((shape - 1) * Math.log(x) - x / scale -\r\n                gammaln(shape) - shape * Math.log(scale));\r\n    },\r\n    cdf: function cdf(x, shape, scale) {\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        return lowRegGamma(shape, x / scale);\r\n    },\r\n    inv: function (p, shape, scale) {\r\n        return gammapinv(p, shape) * scale;\r\n    }\r\n};\r\nexport function gammaln(x) {\r\n    let j = 0;\r\n    const cof = [\r\n        76.18009172947146, -86.50532032941677, 24.01409824083091,\r\n        -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5\r\n    ];\r\n    let ser = 1.000000000190015;\r\n    let xx, y, tmp;\r\n    tmp = (y = xx = x) + 5.5;\r\n    tmp -= (xx + 0.5) * Math.log(tmp);\r\n    for (; j < 6; j++) {\r\n        ser += cof[j] / ++y;\r\n    }\r\n    return Math.log(2.5066282746310005 * ser / xx) - tmp;\r\n}\r\nfunction lowRegGamma(a, x) {\r\n    const aln = gammaln(a);\r\n    let ap = a;\r\n    let sum = 1 / a;\r\n    let del = sum;\r\n    let b = x + 1 - a;\r\n    let c = 1 / 1.0e-30;\r\n    let d = 1 / b;\r\n    let h = d;\r\n    let i = 1;\r\n    // calculate maximum number of itterations required for a\r\n    const ITMAX = -~(Math.log((a >= 1) ? a : 1 / a) * 8.5 + a * 0.4 + 17);\r\n    let an;\r\n    if (x < 0 || a <= 0) {\r\n        return NaN;\r\n    }\r\n    else if (x < a + 1) {\r\n        for (; i <= ITMAX; i++) {\r\n            sum += del *= x / ++ap;\r\n        }\r\n        return (sum * Math.exp(-x + a * Math.log(x) - (aln)));\r\n    }\r\n    for (; i <= ITMAX; i++) {\r\n        an = -i * (i - a);\r\n        b += 2;\r\n        d = an * d + b;\r\n        c = b + an / c;\r\n        d = 1 / d;\r\n        h *= d * c;\r\n    }\r\n    return (1 - h * Math.exp(-x + a * Math.log(x) - (aln)));\r\n}\r\nfunction gammapinv(p, a) {\r\n    let j = 0;\r\n    const a1 = a - 1;\r\n    const EPS = 1e-8;\r\n    const gln = gammaln(a);\r\n    let x, err, t, u, pp;\r\n    let lna1;\r\n    let afac;\r\n    if (p >= 1) {\r\n        return Math.max(100, a + 100 * Math.sqrt(a));\r\n    }\r\n    if (p <= 0) {\r\n        return 0;\r\n    }\r\n    if (a > 1) {\r\n        lna1 = Math.log(a1);\r\n        afac = Math.exp(a1 * (lna1 - 1) - gln);\r\n        pp = (p < 0.5) ? p : 1 - p;\r\n        t = Math.sqrt(-2 * Math.log(pp));\r\n        x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\r\n        if (p < 0.5) {\r\n            x = -x;\r\n        }\r\n        x = Math.max(1e-3, a * Math.pow(1 - 1 / (9 * a) - x / (3 * Math.sqrt(a)), 3));\r\n    }\r\n    else {\r\n        t = 1 - a * (0.253 + a * 0.12);\r\n        if (p < t) {\r\n            x = Math.pow(p / t, 1 / a);\r\n        }\r\n        else {\r\n            x = 1 - Math.log(1 - (p - t) / (1 - t));\r\n        }\r\n    }\r\n    for (; j < 12; j++) {\r\n        if (x <= 0) {\r\n            return 0;\r\n        }\r\n        err = lowRegGamma(a, x) - p;\r\n        if (a > 1) {\r\n            t = afac * Math.exp(-(x - a1) + a1 * (Math.log(x) - lna1));\r\n        }\r\n        else {\r\n            t = Math.exp(-x + a1 * Math.log(x) - gln);\r\n        }\r\n        u = err / t;\r\n        x -= (t = u / (1 - 0.5 * Math.min(1, u * ((a - 1) / x - 1))));\r\n        if (x <= 0) {\r\n            x = 0.5 * (x + t);\r\n        }\r\n        if (Math.abs(t) < EPS * x) {\r\n            break;\r\n        }\r\n    }\r\n    return x;\r\n}\r\nexport const normal = {\r\n    pdf: function pdf(x, mean, std) {\r\n        return Math.exp(-0.5 * Math.log(2 * Math.PI) -\r\n            Math.log(std) - Math.pow(x - mean, 2) / (2 * std * std));\r\n    },\r\n    cdf: function cdf(x, mean, std) {\r\n        return 0.5 * (1 + erf((x - mean) / Math.sqrt(2 * std * std)));\r\n    },\r\n    inv: function (p, mean, std) {\r\n        return -1.41421356237309505 * std * erfcinv(2 * p) + mean;\r\n    }\r\n};\r\nexport const beta = {\r\n    pdf: function pdf(x, alpha, beta) {\r\n        // PDF is zero outside the support\r\n        if (x > 1 || x < 0) {\r\n            return 0;\r\n        }\r\n        // PDF is one for the uniform case\r\n        if (alpha == 1 && beta == 1) {\r\n            return 1;\r\n        }\r\n        if (alpha < 512 && beta < 512) {\r\n            return (Math.pow(x, alpha - 1) * Math.pow(1 - x, beta - 1)) /\r\n                betafn(alpha, beta);\r\n        }\r\n        else {\r\n            return Math.exp((alpha - 1) * Math.log(x) +\r\n                (beta - 1) * Math.log(1 - x) -\r\n                betaln(alpha, beta));\r\n        }\r\n    },\r\n    cdf: function cdf(x, alpha, beta) {\r\n        return (x > 1 || x < 0) ? +(x > 1) : ibeta(x, alpha, beta);\r\n    },\r\n    inv: function inv(x, alpha, beta) {\r\n        return ibetainv(x, alpha, beta);\r\n    },\r\n};\r\nfunction betafn(x, y) {\r\n    // ensure arguments are positive\r\n    if (x <= 0 || y <= 0) {\r\n        return undefined;\r\n    }\r\n    // make sure x + y doesn't exceed the upper limit of usable values\r\n    return (x + y > 170)\r\n        ? Math.exp(betaln(x, y))\r\n        : gammafn(x) * gammafn(y) / gammafn(x + y);\r\n}\r\nfunction betaln(x, y) {\r\n    return gammaln(x) + gammaln(y) - gammaln(x + y);\r\n}\r\nfunction ibetainv(p, a, b) {\r\n    var EPS = 1e-8;\r\n    var a1 = a - 1;\r\n    var b1 = b - 1;\r\n    var j = 0;\r\n    var lna, lnb, pp, t, u, err, x, al, h, w, afac;\r\n    if (p <= 0) {\r\n        return 0;\r\n    }\r\n    if (p >= 1) {\r\n        return 1;\r\n    }\r\n    if (a >= 1 && b >= 1) {\r\n        pp = (p < 0.5) ? p : 1 - p;\r\n        t = Math.sqrt(-2 * Math.log(pp));\r\n        x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\r\n        if (p < 0.5) {\r\n            x = -x;\r\n        }\r\n        al = (x * x - 3) / 6;\r\n        h = 2 / (1 / (2 * a - 1) + 1 / (2 * b - 1));\r\n        w = (x * Math.sqrt(al + h) / h) - (1 / (2 * b - 1) - 1 / (2 * a - 1)) *\r\n            (al + 5 / 6 - 2 / (3 * h));\r\n        x = a / (a + b * Math.exp(2 * w));\r\n    }\r\n    else {\r\n        lna = Math.log(a / (a + b));\r\n        lnb = Math.log(b / (a + b));\r\n        t = Math.exp(a * lna) / a;\r\n        u = Math.exp(b * lnb) / b;\r\n        w = t + u;\r\n        if (p < t / w) {\r\n            x = Math.pow(a * w * p, 1 / a);\r\n        }\r\n        else {\r\n            x = 1 - Math.pow(b * w * (1 - p), 1 / b);\r\n        }\r\n    }\r\n    afac = -gammaln(a) - gammaln(b) + gammaln(a + b);\r\n    for (; j < 10; j++) {\r\n        if (x === 0 || x === 1) {\r\n            return x;\r\n        }\r\n        // @ts-ignore\r\n        err = ibeta(x, a, b) - p;\r\n        t = Math.exp(a1 * Math.log(x) + b1 * Math.log(1 - x) + afac);\r\n        u = err / t;\r\n        x -= (t = u / (1 - 0.5 * Math.min(1, u * (a1 / x - b1 / (1 - x)))));\r\n        if (x <= 0) {\r\n            x = 0.5 * (x + t);\r\n        }\r\n        if (x >= 1) {\r\n            x = 0.5 * (x + t + 1);\r\n        }\r\n        if (Math.abs(t) < EPS * x && j > 0) {\r\n            break;\r\n        }\r\n    }\r\n    return x;\r\n}\r\nfunction ibeta(x, a, b) {\r\n    // Factors in front of the continued fraction.\r\n    var bt = (x === 0 || x === 1) ? 0 :\r\n        Math.exp(gammaln(a + b) - gammaln(a) -\r\n            gammaln(b) + a * Math.log(x) + b *\r\n            Math.log(1 - x));\r\n    if (x < 0 || x > 1) {\r\n        return false;\r\n    }\r\n    if (x < (a + 1) / (a + b + 2)) \r\n    // Use continued fraction directly.\r\n    {\r\n        return bt * betacf(x, a, b) / a;\r\n    }\r\n    // else use continued fraction after making the symmetry transformation.\r\n    return 1 - bt * betacf(1 - x, b, a) / b;\r\n}\r\nfunction betacf(x, a, b) {\r\n    var fpmin = 1e-30;\r\n    var m = 1;\r\n    var qab = a + b;\r\n    var qap = a + 1;\r\n    var qam = a - 1;\r\n    var c = 1;\r\n    var d = 1 - qab * x / qap;\r\n    var m2, aa, del, h;\r\n    // These q's will be used in factors that occur in the coefficients\r\n    if (Math.abs(d) < fpmin) {\r\n        d = fpmin;\r\n    }\r\n    d = 1 / d;\r\n    h = d;\r\n    for (; m <= 100; m++) {\r\n        m2 = 2 * m;\r\n        aa = m * (b - m) * x / ((qam + m2) * (a + m2));\r\n        // One step (the even one) of the recurrence\r\n        d = 1 + aa * d;\r\n        if (Math.abs(d) < fpmin) {\r\n            d = fpmin;\r\n        }\r\n        c = 1 + aa / c;\r\n        if (Math.abs(c) < fpmin) {\r\n            c = fpmin;\r\n        }\r\n        d = 1 / d;\r\n        h *= d * c;\r\n        aa = -(a + m) * (qab + m) * x / ((a + m2) * (qap + m2));\r\n        // Next step of the recurrence (the odd one)\r\n        d = 1 + aa * d;\r\n        if (Math.abs(d) < fpmin) {\r\n            d = fpmin;\r\n        }\r\n        c = 1 + aa / c;\r\n        if (Math.abs(c) < fpmin) {\r\n            c = fpmin;\r\n        }\r\n        d = 1 / d;\r\n        del = d * c;\r\n        h *= del;\r\n        if (Math.abs(del - 1.0) < 3e-7) {\r\n            break;\r\n        }\r\n    }\r\n    return h;\r\n}\r\nexport const binomial = {\r\n    pdf: function (k, n, p) {\r\n        return (p === 0 || p === 1) ?\r\n            ((n * p) === k ? 1 : 0) :\r\n            combination(n, k) * Math.pow(p, k) * Math.pow(1 - p, n - k);\r\n    },\r\n    cdf: function (x, n, p) {\r\n        var betacdf;\r\n        var eps = 1e-10;\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        if (x >= n) {\r\n            return 1;\r\n        }\r\n        if (p < 0 || p > 1 || n <= 0) {\r\n            return NaN;\r\n        }\r\n        x = Math.floor(x);\r\n        var z = p;\r\n        var a = x + 1;\r\n        var b = n - x;\r\n        var s = a + b;\r\n        var bt = Math.exp(gammaln(s) - gammaln(b) -\r\n            gammaln(a) + a * Math.log(z) + b * Math.log(1 - z));\r\n        if (z < (a + 1) / (s + 2)) {\r\n            betacdf = bt * betinc(z, a, b, eps);\r\n        }\r\n        else {\r\n            betacdf = 1 - bt * betinc(1 - z, b, a, eps);\r\n        }\r\n        return Math.round((1 - betacdf) * (1 / eps)) / (1 / eps);\r\n    }\r\n};\r\nfunction betinc(x, a, b, eps) {\r\n    var a0 = 0;\r\n    var b0 = 1;\r\n    var a1 = 1;\r\n    var b1 = 1;\r\n    var m9 = 0;\r\n    var a2 = 0;\r\n    var c9;\r\n    while (Math.abs((a1 - a2) / a1) > eps) {\r\n        a2 = a1;\r\n        c9 = -(a + m9) * (a + b + m9) * x / (a + 2 * m9) / (a + 2 * m9 + 1);\r\n        a0 = a1 + c9 * a0;\r\n        b0 = b1 + c9 * b0;\r\n        m9 = m9 + 1;\r\n        c9 = m9 * (b - m9) * x / (a + 2 * m9 - 1) / (a + 2 * m9);\r\n        a1 = a0 + c9 * a1;\r\n        b1 = b0 + c9 * b1;\r\n        a0 = a0 / b1;\r\n        b0 = b0 / b1;\r\n        a1 = a1 / b1;\r\n        b1 = 1;\r\n    }\r\n    return a1 / a;\r\n}\r\nfunction combination(n, m) {\r\n    // make sure n or m don't exceed the upper limit of usable values\r\n    return (n > 170 || m > 170)\r\n        ? Math.exp(combinationln(n, m))\r\n        : (factorial(n) / factorial(m)) / factorial(n - m);\r\n}\r\nfunction combinationln(n, m) {\r\n    return factorialln(n) - factorialln(m) - factorialln(n - m);\r\n}\r\n// natural log factorial of n\r\nexport function factorialln(n) {\r\n    return n < 0 ? NaN : gammaln(n + 1);\r\n}\r\n// factorial of n\r\nexport function factorial(n) {\r\n    return n < 0 ? NaN : gammafn(n + 1);\r\n}\r\nexport const chisquare = {\r\n    pdf: function pdf(x, dof) {\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        return (x === 0 && dof === 2) ? 0.5 :\r\n            Math.exp((dof / 2 - 1) * Math.log(x) - x / 2 - (dof / 2) *\r\n                Math.log(2) - gammaln(dof / 2));\r\n    },\r\n    cdf: function cdf(x, dof) {\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        return lowRegGamma(dof / 2, x / 2);\r\n    },\r\n    inv: function (p, dof) {\r\n        return 2 * gammapinv(p, 0.5 * dof);\r\n    }\r\n};\r\nexport const centralF = {\r\n    // This implementation of the pdf function avoids float overflow\r\n    // See the way that R calculates this value:\r\n    // https://svn.r-project.org/R/trunk/src/nmath/df.c\r\n    pdf: function pdf(x, df1, df2) {\r\n        var p, q, f;\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        if (df1 <= 2) {\r\n            if (x === 0 && df1 < 2) {\r\n                return Infinity;\r\n            }\r\n            if (x === 0 && df1 === 2) {\r\n                return 1;\r\n            }\r\n            return (1 / betafn(df1 / 2, df2 / 2)) *\r\n                Math.pow(df1 / df2, df1 / 2) *\r\n                Math.pow(x, (df1 / 2) - 1) *\r\n                Math.pow((1 + (df1 / df2) * x), -(df1 + df2) / 2);\r\n        }\r\n        p = (df1 * x) / (df2 + x * df1);\r\n        q = df2 / (df2 + x * df1);\r\n        f = df1 * q / 2.0;\r\n        return f * binomial.pdf((df1 - 2) / 2, (df1 + df2 - 2) / 2, p);\r\n    },\r\n    cdf: function cdf(x, df1, df2) {\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        return ibeta((df1 * x) / (df1 * x + df2), df1 / 2, df2 / 2);\r\n    },\r\n    inv: function inv(x, df1, df2) {\r\n        return df2 / (df1 * (1 / ibetainv(x, df1 / 2, df2 / 2) - 1));\r\n    },\r\n};\r\nexport const weibull = {\r\n    pdf: function pdf(x, scale, shape) {\r\n        if (x < 0 || scale < 0 || shape < 0) {\r\n            return 0;\r\n        }\r\n        return (shape / scale) * Math.pow((x / scale), (shape - 1)) *\r\n            Math.exp(-(Math.pow((x / scale), shape)));\r\n    },\r\n    cdf: function cdf(x, scale, shape) {\r\n        return x < 0 ? 0 : 1 - Math.exp(-Math.pow((x / scale), shape));\r\n    },\r\n};\r\nexport const poisson = {\r\n    pdf: function pdf(k, l) {\r\n        if (l < 0 || (k % 1) !== 0 || k < 0) {\r\n            return 0;\r\n        }\r\n        return Math.pow(l, k) * Math.exp(-l) / factorial(k);\r\n    },\r\n    cdf: function cdf(x, l) {\r\n        var k = 0;\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        var sum = 0;\r\n        for (; k <= x; k++) {\r\n            sum += poisson.pdf(k, l);\r\n        }\r\n        return sum;\r\n    },\r\n};\r\nexport const hypgeom = {\r\n    pdf: function pdf(k, N, m, n) {\r\n        // Hypergeometric PDF.\r\n        // A simplification of the CDF algorithm below.\r\n        // k = number of successes drawn\r\n        // N = population size\r\n        // m = number of successes in population\r\n        // n = number of items drawn from population\r\n        // if(k !== k | 0) {\r\n        //   return false;\r\n        // } else\r\n        if (k < 0 || k < m - (N - n)) {\r\n            // It's impossible to have this few successes drawn.\r\n            return 0;\r\n        }\r\n        else if (k > n || k > m) {\r\n            // It's impossible to have this many successes drawn.\r\n            return 0;\r\n        }\r\n        else if (m * 2 > N) {\r\n            // More than half the population is successes.\r\n            if (n * 2 > N) {\r\n                // More than half the population is sampled.\r\n                return hypgeom.pdf(N - m - n + k, N, N - m, N - n);\r\n            }\r\n            else {\r\n                // Half or less of the population is sampled.\r\n                return hypgeom.pdf(n - k, N, N - m, n);\r\n            }\r\n        }\r\n        else if (n * 2 > N) {\r\n            // Half or less is successes.\r\n            return hypgeom.pdf(m - k, N, m, N - n);\r\n        }\r\n        else if (m < n) {\r\n            // We want to have the number of things sampled to be less than the\r\n            // successes available. So swap the definitions of successful and sampled.\r\n            return hypgeom.pdf(k, N, n, m);\r\n        }\r\n        else {\r\n            // If we get here, half or less of the population was sampled, half or\r\n            // less of it was successes, and we had fewer sampled things than\r\n            // successes. Now we can do this complicated iterative algorithm in an\r\n            // efficient way.\r\n            // The basic premise of the algorithm is that we partially normalize our\r\n            // intermediate product to keep it in a numerically good region, and then\r\n            // finish the normalization at the end.\r\n            // This variable holds the scaled probability of the current number of\r\n            // successes.\r\n            var scaledPDF = 1;\r\n            // This keeps track of how much we have normalized.\r\n            var samplesDone = 0;\r\n            for (var i = 0; i < k; i++) {\r\n                // For every possible number of successes up to that observed...\r\n                while (scaledPDF > 1 && samplesDone < n) {\r\n                    // Intermediate result is growing too big. Apply some of the\r\n                    // normalization to shrink everything.\r\n                    scaledPDF *= 1 - (m / (N - samplesDone));\r\n                    // Say we've normalized by this sample already.\r\n                    samplesDone++;\r\n                }\r\n                // Work out the partially-normalized hypergeometric PDF for the next\r\n                // number of successes\r\n                scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\r\n            }\r\n            for (; samplesDone < n; samplesDone++) {\r\n                // Apply all the rest of the normalization\r\n                scaledPDF *= 1 - (m / (N - samplesDone));\r\n            }\r\n            // Bound answer sanely before returning.\r\n            return Math.min(1, Math.max(0, scaledPDF));\r\n        }\r\n    },\r\n    cdf: function cdf(x, N, m, n) {\r\n        // Hypergeometric CDF.\r\n        // This algorithm is due to Prof. Thomas S. Ferguson, <tom@math.ucla.edu>,\r\n        // and comes from his hypergeometric test calculator at\r\n        // <http://www.math.ucla.edu/~tom/distributions/Hypergeometric.html>.\r\n        // x = number of successes drawn\r\n        // N = population size\r\n        // m = number of successes in population\r\n        // n = number of items drawn from population\r\n        if (x < 0 || x < m - (N - n)) {\r\n            // It's impossible to have this few successes drawn or fewer.\r\n            return 0;\r\n        }\r\n        else if (x >= n || x >= m) {\r\n            // We will always have this many successes or fewer.\r\n            return 1;\r\n        }\r\n        else if (m * 2 > N) {\r\n            // More than half the population is successes.\r\n            if (n * 2 > N) {\r\n                // More than half the population is sampled.\r\n                return cdf(N - m - n + x, N, N - m, N - n);\r\n            }\r\n            else {\r\n                // Half or less of the population is sampled.\r\n                return 1 - hypgeom.cdf(n - x - 1, N, N - m, n);\r\n            }\r\n        }\r\n        else if (n * 2 > N) {\r\n            // Half or less is successes.\r\n            return 1 - hypgeom.cdf(m - x - 1, N, m, N - n);\r\n        }\r\n        else if (m < n) {\r\n            // We want to have the number of things sampled to be less than the\r\n            // successes available. So swap the definitions of successful and sampled.\r\n            return hypgeom.cdf(x, N, n, m);\r\n        }\r\n        else {\r\n            // If we get here, half or less of the population was sampled, half or\r\n            // less of it was successes, and we had fewer sampled things than\r\n            // successes. Now we can do this complicated iterative algorithm in an\r\n            // efficient way.\r\n            // The basic premise of the algorithm is that we partially normalize our\r\n            // intermediate sum to keep it in a numerically good region, and then\r\n            // finish the normalization at the end.\r\n            // Holds the intermediate, scaled total CDF.\r\n            var scaledCDF = 1;\r\n            // This variable holds the scaled probability of the current number of\r\n            // successes.\r\n            var scaledPDF = 1;\r\n            // This keeps track of how much we have normalized.\r\n            var samplesDone = 0;\r\n            for (var i = 0; i < x; i++) {\r\n                // For every possible number of successes up to that observed...\r\n                while (scaledCDF > 1 && samplesDone < n) {\r\n                    // Intermediate result is growing too big. Apply some of the\r\n                    // normalization to shrink everything.\r\n                    var factor = 1 - (m / (N - samplesDone));\r\n                    scaledPDF *= factor;\r\n                    scaledCDF *= factor;\r\n                    // Say we've normalized by this sample already.\r\n                    samplesDone++;\r\n                }\r\n                // Work out the partially-normalized hypergeometric PDF for the next\r\n                // number of successes\r\n                scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\r\n                // Add to the CDF answer.\r\n                scaledCDF += scaledPDF;\r\n            }\r\n            for (; samplesDone < n; samplesDone++) {\r\n                // Apply all the rest of the normalization\r\n                scaledCDF *= 1 - (m / (N - samplesDone));\r\n            }\r\n            // Bound answer sanely before returning.\r\n            return Math.min(1, Math.max(0, scaledCDF));\r\n        }\r\n    }\r\n};\r\nexport const studentt = {\r\n    pdf: function pdf(x, dof) {\r\n        dof = dof > 1e100 ? 1e100 : dof;\r\n        return (1 / (Math.sqrt(dof) * betafn(0.5, dof / 2))) *\r\n            Math.pow(1 + ((x * x) / dof), -((dof + 1) / 2));\r\n    },\r\n    cdf: function cdf(x, dof) {\r\n        var dof2 = dof / 2;\r\n        return ibeta((x + Math.sqrt(x * x + dof)) /\r\n            (2 * Math.sqrt(x * x + dof)), dof2, dof2);\r\n    },\r\n    inv: function (p, dof) {\r\n        var x = ibetainv(2 * Math.min(p, 1 - p), 0.5 * dof, 0.5);\r\n        x = Math.sqrt(dof * (1 - x) / x);\r\n        return (p > 0.5) ? x : -x;\r\n    },\r\n};\r\nexport const lognormal = {\r\n    pdf: function pdf(x, mu, sigma) {\r\n        if (x <= 0) {\r\n            return 0;\r\n        }\r\n        return Math.exp(-Math.log(x) - 0.5 * Math.log(2 * Math.PI) -\r\n            Math.log(sigma) - Math.pow(Math.log(x) - mu, 2) /\r\n            (2 * sigma * sigma));\r\n    },\r\n    cdf: function cdf(x, mu, sigma) {\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        return 0.5 +\r\n            (0.5 * erf((Math.log(x) - mu) / Math.sqrt(2 * sigma * sigma)));\r\n    },\r\n    inv: function (p, mu, sigma) {\r\n        return Math.exp(-1.41421356237309505 * sigma * erfcinv(2 * p) + mu);\r\n    },\r\n};\r\nexport const negbin = {\r\n    pdf: function pdf(k, r, p) {\r\n        if (k !== k >>> 0) {\r\n            return false;\r\n        }\r\n        if (k < 0) {\r\n            return 0;\r\n        }\r\n        return combination(k + r - 1, r - 1) *\r\n            Math.pow(1 - p, k) * Math.pow(p, r);\r\n    },\r\n    cdf: function cdf(x, r, p) {\r\n        var sum = 0, k = 0;\r\n        if (x < 0) {\r\n            return 0;\r\n        }\r\n        for (; k <= x; k++) {\r\n            sum += negbin.pdf(k, r, p);\r\n        }\r\n        return sum;\r\n    }\r\n};\r\nfunction sum(arr) {\r\n    var sum = 0;\r\n    var i = arr.length;\r\n    while (--i >= 0) {\r\n        sum += arr[i];\r\n    }\r\n    return sum;\r\n}\r\nexport function mean(arr) {\r\n    return sum(arr) / arr.length;\r\n}\r\nexport function sumsqerr(arr) {\r\n    var meanv = mean(arr);\r\n    var sum = 0;\r\n    var i = arr.length;\r\n    var tmp;\r\n    while (--i >= 0) {\r\n        tmp = arr[i] - meanv;\r\n        sum += tmp * tmp;\r\n    }\r\n    return sum;\r\n}\r\nexport function variance(arr, flag) {\r\n    return sumsqerr(arr) / (arr.length - (flag ? 1 : 0));\r\n}\r\nexport function stdev(arr, flag) {\r\n    return Math.sqrt(variance(arr, flag));\r\n}\r\n// 2 different parameter setups\r\n// (value, alpha, sd, n)\r\n// (value, alpha, array)\r\nexport function normalci() {\r\n    var args = [].slice.call(arguments), ans = new Array(2), change;\r\n    if (args.length === 4) {\r\n        change = Math.abs(normal.inv(args[1] / 2, 0, 1) *\r\n            args[2] / Math.sqrt(args[3]));\r\n    }\r\n    else {\r\n        // @ts-ignore\r\n        change = Math.abs(normal.inv(args[1] / 2, 0, 1) * stdev(args[2]) / Math.sqrt(args[2].length));\r\n    }\r\n    ans[0] = args[0] - change;\r\n    ans[1] = args[0] + change;\r\n    return ans;\r\n}\r\nexport function tci() {\r\n    var args = [].slice.call(arguments), ans = new Array(2), change;\r\n    if (args.length === 4) {\r\n        change = Math.abs(studentt.inv(args[1] / 2, args[3] - 1) *\r\n            args[2] / Math.sqrt(args[3]));\r\n    }\r\n    else {\r\n        // @ts-ignore\r\n        change = Math.abs(studentt.inv(args[1] / 2, args[2].length - 1) * stdev(args[2], true) / Math.sqrt(args[2].length));\r\n    }\r\n    ans[0] = args[0] - change;\r\n    ans[1] = args[0] + change;\r\n    return ans;\r\n}\r\nfunction product(arr) {\r\n    var prod = 1;\r\n    var i = arr.length;\r\n    while (--i >= 0) {\r\n        prod *= arr[i];\r\n    }\r\n    return prod;\r\n}\r\nexport function geomean(arr) {\r\n    return Math.pow(product(arr), 1 / arr.length);\r\n}\r\nexport function covariance(arr1, arr2) {\r\n    var u = mean(arr1);\r\n    var v = mean(arr2);\r\n    var arr1Len = arr1.length;\r\n    var sq_dev = new Array(arr1Len);\r\n    var i;\r\n    for (i = 0; i < arr1Len; i++) {\r\n        sq_dev[i] = (arr1[i] - u) * (arr2[i] - v);\r\n    }\r\n    return sum(sq_dev) / (arr1Len - 1);\r\n}\r\nexport function corrcoeff(arr1, arr2) {\r\n    return covariance(arr1, arr2) /\r\n        stdev(arr1, 1) /\r\n        stdev(arr2, 1);\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class MathPlugin extends FunctionPlugin {\r\n    fact(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FACT'), (arg) => {\r\n            arg = Math.trunc(arg);\r\n            let ret = 1;\r\n            for (let i = 1; i <= arg; i++) {\r\n                ret *= i;\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n    factdouble(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('FACTDOUBLE'), (arg) => {\r\n            arg = Math.trunc(arg);\r\n            let ret = 1;\r\n            for (let i = arg; i >= 1; i -= 2) {\r\n                ret *= i;\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n    combin(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COMBIN'), (n, m) => {\r\n            if (m > n) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.WrongOrder);\r\n            }\r\n            n = Math.trunc(n);\r\n            m = Math.trunc(m);\r\n            return combin(n, m);\r\n        });\r\n    }\r\n    combina(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COMBINA'), (n, m) => {\r\n            n = Math.trunc(n);\r\n            m = Math.trunc(m);\r\n            if (n + m - 1 >= 1030) {\r\n                //Product #2 does not enforce this\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            if (n === 0 && m === 0) {\r\n                return 1;\r\n            }\r\n            return combin(n + m - 1, m);\r\n        });\r\n    }\r\n    gcd(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('GCD'), (...args) => {\r\n            const processedArgs = this.arithmeticHelper.coerceNumbersCoerceRangesDropNulls(args);\r\n            if (processedArgs instanceof CellError) {\r\n                return processedArgs;\r\n            }\r\n            let ret = 0;\r\n            for (const val of processedArgs) {\r\n                if (val < 0) {\r\n                    return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n                }\r\n                ret = binaryGCD(ret, Math.trunc(val));\r\n            }\r\n            if (ret > Number.MAX_SAFE_INTEGER) {\r\n                //inconsistency with product #1\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n    lcm(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('LCM'), (...args) => {\r\n            const processedArgs = this.arithmeticHelper.coerceNumbersCoerceRangesDropNulls(args);\r\n            if (processedArgs instanceof CellError) {\r\n                return processedArgs;\r\n            }\r\n            let ret = 1;\r\n            for (const val of processedArgs) {\r\n                if (val < 0) {\r\n                    return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n                }\r\n                ret = binaryLCM(ret, Math.trunc(val));\r\n            }\r\n            if (ret > Number.MAX_SAFE_INTEGER) {\r\n                //inconsistency with product #1\r\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n    mround(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MROUND'), (nom, denom) => {\r\n            if (denom === 0) {\r\n                return 0;\r\n            }\r\n            if ((nom > 0 && denom < 0) || (nom < 0 && denom > 0)) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.DistinctSigns);\r\n            }\r\n            return Math.round(nom / denom) * denom;\r\n        });\r\n    }\r\n    multinomial(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('MULTINOMIAL'), (...args) => {\r\n            let n = 0;\r\n            let ans = 1;\r\n            for (let arg of args) {\r\n                if (arg < 0) {\r\n                    return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n                }\r\n                arg = Math.trunc(arg);\r\n                for (let i = 1; i <= arg; i++) {\r\n                    ans *= (n + i) / i;\r\n                }\r\n                n += arg;\r\n            }\r\n            return Math.round(ans);\r\n        });\r\n    }\r\n    quotient(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('QUOTIENT'), (nom, denom) => {\r\n            if (denom === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            return Math.trunc(nom / denom);\r\n        });\r\n    }\r\n    seriessum(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SERIESSUM'), (x, n, m, range) => {\r\n            const coefs = this.arithmeticHelper.manyToOnlyNumbersDropNulls(range.valuesFromTopLeftCorner());\r\n            if (coefs instanceof CellError) {\r\n                return coefs;\r\n            }\r\n            let ret = 0;\r\n            coefs.reverse();\r\n            for (const coef of coefs) {\r\n                ret *= Math.pow(x, m);\r\n                ret += coef;\r\n            }\r\n            return ret * Math.pow(x, n);\r\n        });\r\n    }\r\n    sign(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SIGN'), (arg) => {\r\n            if (arg > 0) {\r\n                return 1;\r\n            }\r\n            else if (arg < 0) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        });\r\n    }\r\n    sumx2my2(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SUMX2MY2'), (rangeX, rangeY) => {\r\n            const valsX = rangeX.valuesFromTopLeftCorner();\r\n            const valsY = rangeY.valuesFromTopLeftCorner();\r\n            if (valsX.length !== valsY.length) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const n = valsX.length;\r\n            let ret = 0;\r\n            for (let i = 0; i < n; i++) {\r\n                const valX = valsX[i];\r\n                const valY = valsY[i];\r\n                if (valX instanceof CellError) {\r\n                    return valX;\r\n                }\r\n                if (valY instanceof CellError) {\r\n                    return valY;\r\n                }\r\n                if (typeof valX === 'number' && typeof valY === 'number') {\r\n                    ret += Math.pow(valX, 2) - Math.pow(valY, 2);\r\n                }\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n    sumx2py2(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SUMX2PY2'), (rangeX, rangeY) => {\r\n            const valsX = rangeX.valuesFromTopLeftCorner();\r\n            const valsY = rangeY.valuesFromTopLeftCorner();\r\n            if (valsX.length !== valsY.length) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const n = valsX.length;\r\n            let ret = 0;\r\n            for (let i = 0; i < n; i++) {\r\n                const valX = valsX[i];\r\n                const valY = valsY[i];\r\n                if (valX instanceof CellError) {\r\n                    return valX;\r\n                }\r\n                if (valY instanceof CellError) {\r\n                    return valY;\r\n                }\r\n                if (typeof valX === 'number' && typeof valY === 'number') {\r\n                    ret += Math.pow(valX, 2) + Math.pow(valY, 2);\r\n                }\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n    sumxmy2(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SUMXMY2'), (rangeX, rangeY) => {\r\n            const valsX = rangeX.valuesFromTopLeftCorner();\r\n            const valsY = rangeY.valuesFromTopLeftCorner();\r\n            if (valsX.length !== valsY.length) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const n = valsX.length;\r\n            let ret = 0;\r\n            for (let i = 0; i < n; i++) {\r\n                const valX = valsX[i];\r\n                const valY = valsY[i];\r\n                if (valX instanceof CellError) {\r\n                    return valX;\r\n                }\r\n                if (valY instanceof CellError) {\r\n                    return valY;\r\n                }\r\n                if (typeof valX === 'number' && typeof valY === 'number') {\r\n                    ret += Math.pow(valX - valY, 2);\r\n                }\r\n            }\r\n            return ret;\r\n        });\r\n    }\r\n}\r\nMathPlugin.implementedFunctions = {\r\n    'FACT': {\r\n        method: 'fact',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, maxValue: 170 }\r\n        ]\r\n    },\r\n    'FACTDOUBLE': {\r\n        method: 'factdouble',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, maxValue: 288 }\r\n        ]\r\n    },\r\n    'COMBIN': {\r\n        method: 'combin',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, lessThan: 1030 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 }\r\n        ]\r\n    },\r\n    'COMBINA': {\r\n        method: 'combina',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\r\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 }\r\n        ]\r\n    },\r\n    'GCD': {\r\n        method: 'gcd',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY },\r\n        ],\r\n        repeatLastArgs: 1\r\n    },\r\n    'LCM': {\r\n        method: 'lcm',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY },\r\n        ],\r\n        repeatLastArgs: 1\r\n    },\r\n    'MROUND': {\r\n        method: 'mround',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n    },\r\n    'MULTINOMIAL': {\r\n        method: 'multinomial',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n        repeatLastArgs: 1,\r\n        expandRanges: true,\r\n    },\r\n    'QUOTIENT': {\r\n        method: 'quotient',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n    },\r\n    'SERIESSUM': {\r\n        method: 'seriessum',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n    },\r\n    'SIGN': {\r\n        method: 'sign',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n    },\r\n    'SUMX2MY2': {\r\n        method: 'sumx2my2',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n    },\r\n    'SUMX2PY2': {\r\n        method: 'sumx2py2',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n    },\r\n    'SUMXMY2': {\r\n        method: 'sumxmy2',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n    },\r\n};\r\nfunction combin(n, m) {\r\n    if (2 * m > n) {\r\n        m = n - m;\r\n    }\r\n    let ret = 1;\r\n    for (let i = 1; i <= m; i++) {\r\n        ret *= (n - m + i) / i;\r\n    }\r\n    return Math.round(ret);\r\n}\r\nfunction binaryGCD(a, b) {\r\n    if (a < b) {\r\n        [a, b] = [b, a];\r\n    }\r\n    while (b > 0) {\r\n        [a, b] = [b, a % b];\r\n    }\r\n    return a;\r\n}\r\nfunction binaryLCM(a, b) {\r\n    if (a === 0 || b === 0) {\r\n        return 0;\r\n    }\r\n    return a * (b / binaryGCD(a, b));\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { coerceComplexToString } from '../ArithmeticHelper';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class ComplexPlugin extends FunctionPlugin {\r\n    complex(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COMPLEX'), (re, im, unit) => {\r\n            if (unit !== 'i' && unit !== 'j') {\r\n                return new CellError(ErrorType.VALUE, ErrorMessage.ShouldBeIorJ);\r\n            }\r\n            return coerceComplexToString([re, im], unit);\r\n        });\r\n    }\r\n    imabs(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMABS'), abs);\r\n    }\r\n    imaginary(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMAGINARY'), ([_re, im]) => im);\r\n    }\r\n    imreal(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMREAL'), ([re, _im]) => re);\r\n    }\r\n    imargument(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMARGUMENT'), ([re, im]) => {\r\n            if (re === 0 && im === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            return Math.atan2(im, re);\r\n        });\r\n    }\r\n    imconjugate(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMCONJUGATE'), ([re, im]) => coerceComplexToString([re, -im]));\r\n    }\r\n    imcos(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMCOS'), (arg) => coerceComplexToString(cos(arg)));\r\n    }\r\n    imcosh(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMCOSH'), (arg) => coerceComplexToString(cosh(arg)));\r\n    }\r\n    imcot(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMCOT'), (arg) => coerceComplexToString(div(cos(arg), sin(arg))));\r\n    }\r\n    imcsc(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMCSC'), (arg) => coerceComplexToString(div([1, 0], sin(arg))));\r\n    }\r\n    imcsch(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMCSCH'), (arg) => coerceComplexToString(div([1, 0], sinh(arg))));\r\n    }\r\n    imsec(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMSEC'), (arg) => coerceComplexToString(div([1, 0], cos(arg))));\r\n    }\r\n    imsech(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMSECH'), (arg) => coerceComplexToString(div([1, 0], cosh(arg))));\r\n    }\r\n    imsin(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMSIN'), (arg) => coerceComplexToString(sin(arg)));\r\n    }\r\n    imsinh(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMSINH'), (arg) => coerceComplexToString(sinh(arg)));\r\n    }\r\n    imtan(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMTAN'), (arg) => coerceComplexToString(div(sin(arg), cos(arg))));\r\n    }\r\n    imdiv(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMDIV'), (arg1, arg2) => coerceComplexToString(div(arg1, arg2)));\r\n    }\r\n    improduct(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMPRODUCT'), (...args) => {\r\n            const coerced = this.arithmeticHelper.coerceComplexExactRanges(args);\r\n            if (coerced instanceof CellError) {\r\n                return coerced;\r\n            }\r\n            let prod = [1, 0];\r\n            for (const val of coerced) {\r\n                prod = mul(prod, val);\r\n            }\r\n            return coerceComplexToString(prod);\r\n        });\r\n    }\r\n    imsum(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMSUM'), (...args) => {\r\n            const coerced = this.arithmeticHelper.coerceComplexExactRanges(args);\r\n            if (coerced instanceof CellError) {\r\n                return coerced;\r\n            }\r\n            let sum = [0, 0];\r\n            for (const val of coerced) {\r\n                sum = add(sum, val);\r\n            }\r\n            return coerceComplexToString(sum);\r\n        });\r\n    }\r\n    imsub(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMSUB'), (arg1, arg2) => coerceComplexToString(sub(arg1, arg2)));\r\n    }\r\n    imexp(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMEXP'), (arg) => coerceComplexToString(exp(arg)));\r\n    }\r\n    imln(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMLN'), (arg) => coerceComplexToString(ln(arg)));\r\n    }\r\n    imlog10(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMLOG10'), (arg) => {\r\n            const [re, im] = ln(arg);\r\n            const c = Math.log(10);\r\n            return coerceComplexToString([re / c, im / c]);\r\n        });\r\n    }\r\n    imlog2(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMLOG2'), (arg) => {\r\n            const [re, im] = ln(arg);\r\n            const c = Math.log(2);\r\n            return coerceComplexToString([re / c, im / c]);\r\n        });\r\n    }\r\n    impower(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMPOWER'), (arg, n) => coerceComplexToString(power(arg, n)));\r\n    }\r\n    imsqrt(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('IMSQRT'), (arg) => coerceComplexToString(power(arg, 0.5)));\r\n    }\r\n}\r\nComplexPlugin.implementedFunctions = {\r\n    'COMPLEX': {\r\n        method: 'complex',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.STRING, defaultValue: 'i' },\r\n        ],\r\n    },\r\n    'IMABS': {\r\n        method: 'imabs',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMAGINARY': {\r\n        method: 'imaginary',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMREAL': {\r\n        method: 'imreal',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMARGUMENT': {\r\n        method: 'imargument',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMCONJUGATE': {\r\n        method: 'imconjugate',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMCOS': {\r\n        method: 'imcos',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMCOSH': {\r\n        method: 'imcosh',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMCOT': {\r\n        method: 'imcot',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMCSC': {\r\n        method: 'imcsc',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMCSCH': {\r\n        method: 'imcsch',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMSEC': {\r\n        method: 'imsec',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMSECH': {\r\n        method: 'imsech',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMSIN': {\r\n        method: 'imsin',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMSINH': {\r\n        method: 'imsinh',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMTAN': {\r\n        method: 'imtan',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMDIV': {\r\n        method: 'imdiv',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMPRODUCT': {\r\n        method: 'improduct',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'IMSUM': {\r\n        method: 'imsum',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'IMSUB': {\r\n        method: 'imsub',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMEXP': {\r\n        method: 'imexp',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMLN': {\r\n        method: 'imln',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMLOG10': {\r\n        method: 'imlog10',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMLOG2': {\r\n        method: 'imlog2',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n    'IMPOWER': {\r\n        method: 'impower',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n        ],\r\n    },\r\n    'IMSQRT': {\r\n        method: 'imsqrt',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.COMPLEX },\r\n        ],\r\n    },\r\n};\r\nfunction add([re1, im1], [re2, im2]) {\r\n    return [re1 + re2, im1 + im2];\r\n}\r\nfunction sub([re1, im1], [re2, im2]) {\r\n    return [re1 - re2, im1 - im2];\r\n}\r\nfunction mul([re1, im1], [re2, im2]) {\r\n    return [re1 * re2 - im1 * im2, re1 * im2 + re2 * im1];\r\n}\r\nfunction div([re1, im1], [re2, im2]) {\r\n    const denom = Math.pow(re2, 2) + Math.pow(im2, 2);\r\n    const [nomRe, nomIm] = mul([re1, im1], [re2, -im2]);\r\n    return [nomRe / denom, nomIm / denom];\r\n}\r\nfunction cos([re, im]) {\r\n    return [Math.cos(re) * Math.cosh(im), -Math.sin(re) * Math.sinh(im)];\r\n}\r\nfunction cosh([re, im]) {\r\n    return [Math.cosh(re) * Math.cos(im), Math.sinh(re) * Math.sin(im)];\r\n}\r\nfunction sin([re, im]) {\r\n    return [Math.sin(re) * Math.cosh(im), Math.cos(re) * Math.sinh(im)];\r\n}\r\nfunction sinh([re, im]) {\r\n    return [Math.sinh(re) * Math.cos(im), Math.cosh(re) * Math.sin(im)];\r\n}\r\nfunction exp([re, im]) {\r\n    return [Math.exp(re) * Math.cos(im), Math.exp(re) * Math.sin(im)];\r\n}\r\nfunction abs([re, im]) {\r\n    return Math.sqrt(re * re + im * im);\r\n}\r\nfunction ln([re, im]) {\r\n    return [Math.log(abs([re, im])), Math.atan2(im, re)];\r\n}\r\nfunction power(arg, n) {\r\n    const [re, im] = ln(arg);\r\n    return exp([n * re, n * im]);\r\n}\r\n","/**\r\n * @license\r\n * Copyright (c) 2022 Handsoncode. All rights reserved.\r\n */\r\nimport { CellError, ErrorType } from '../../Cell';\r\nimport { ErrorMessage } from '../../error-message';\r\nimport { getRawValue, isExtendedNumber } from '../InterpreterValue';\r\nimport { centralF, chisquare, corrcoeff, covariance, geomean, mean, normal, stdev, studentt, sumsqerr, variance } from './3rdparty/jstat/jstat';\r\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\r\nexport class StatisticalAggregationPlugin extends FunctionPlugin {\r\n    avedev(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('AVEDEV'), (...args) => {\r\n            const coerced = this.arithmeticHelper.coerceNumbersExactRanges(args);\r\n            if (coerced instanceof CellError) {\r\n                return coerced;\r\n            }\r\n            if (coerced.length === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            const avg = mean(coerced);\r\n            return coerced.reduce((a, b) => a + Math.abs(b - avg), 0) / coerced.length;\r\n        });\r\n    }\r\n    devsq(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('DEVSQ'), (...args) => {\r\n            const coerced = this.arithmeticHelper.coerceNumbersExactRanges(args);\r\n            if (coerced instanceof CellError) {\r\n                return coerced;\r\n            }\r\n            if (coerced.length === 0) {\r\n                return 0;\r\n            }\r\n            return sumsqerr(coerced);\r\n        });\r\n    }\r\n    geomean(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('GEOMEAN'), (...args) => {\r\n            const coerced = this.arithmeticHelper.coerceNumbersExactRanges(args);\r\n            if (coerced instanceof CellError) {\r\n                return coerced;\r\n            }\r\n            if (coerced.length === 0) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.OneValue);\r\n            }\r\n            for (const val of coerced) {\r\n                if (val <= 0) {\r\n                    return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n                }\r\n            }\r\n            return geomean(coerced);\r\n        });\r\n    }\r\n    harmean(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('HARMEAN'), (...args) => {\r\n            const coerced = this.arithmeticHelper.coerceNumbersExactRanges(args);\r\n            if (coerced instanceof CellError) {\r\n                return coerced;\r\n            }\r\n            if (coerced.length === 0) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.OneValue);\r\n            }\r\n            for (const val of coerced) {\r\n                if (val <= 0) {\r\n                    return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\r\n                }\r\n            }\r\n            return coerced.length / (coerced.reduce((a, b) => a + 1 / b, 0));\r\n        });\r\n    }\r\n    correl(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CORREL'), (dataX, dataY) => {\r\n            if (dataX.numberOfElements() !== dataY.numberOfElements()) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const ret = parseTwoArrays(dataX, dataY);\r\n            if (ret instanceof CellError) {\r\n                return ret;\r\n            }\r\n            const n = ret[0].length;\r\n            if (n <= 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\r\n            }\r\n            return corrcoeff(ret[0], ret[1]);\r\n        });\r\n    }\r\n    rsq(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('RSQ'), (dataX, dataY) => {\r\n            if (dataX.numberOfElements() !== dataY.numberOfElements()) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const ret = parseTwoArrays(dataX, dataY);\r\n            if (ret instanceof CellError) {\r\n                return ret;\r\n            }\r\n            const n = ret[0].length;\r\n            if (n <= 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\r\n            }\r\n            return Math.pow(corrcoeff(ret[0], ret[1]), 2);\r\n        });\r\n    }\r\n    covariancep(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COVARIANCE.P'), (dataX, dataY) => {\r\n            if (dataX.numberOfElements() !== dataY.numberOfElements()) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const ret = parseTwoArrays(dataX, dataY);\r\n            if (ret instanceof CellError) {\r\n                return ret;\r\n            }\r\n            const n = ret[0].length;\r\n            if (n < 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.OneValue);\r\n            }\r\n            if (n === 1) {\r\n                return 0;\r\n            }\r\n            return covariance(ret[0], ret[1]) * (n - 1) / n;\r\n        });\r\n    }\r\n    covariances(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('COVARIANCE.S'), (dataX, dataY) => {\r\n            if (dataX.numberOfElements() !== dataY.numberOfElements()) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const ret = parseTwoArrays(dataX, dataY);\r\n            if (ret instanceof CellError) {\r\n                return ret;\r\n            }\r\n            const n = ret[0].length;\r\n            if (n <= 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\r\n            }\r\n            return covariance(ret[0], ret[1]);\r\n        });\r\n    }\r\n    ztest(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('Z.TEST'), (range, x, sigma) => {\r\n            const vals = this.arithmeticHelper.manyToExactNumbers(range.valuesFromTopLeftCorner());\r\n            if (vals instanceof CellError) {\r\n                return vals;\r\n            }\r\n            const n = vals.length;\r\n            if (sigma === undefined) {\r\n                if (n < 2) {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\r\n                }\r\n                sigma = stdev(vals, true);\r\n            }\r\n            if (n < 1) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.OneValue);\r\n            }\r\n            if (sigma === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            return 1 - normal.cdf((mean(vals) - x) / (sigma / Math.sqrt(n)), 0, 1);\r\n        });\r\n    }\r\n    ftest(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('F.TEST'), (dataX, dataY) => {\r\n            const arrX = this.arithmeticHelper.manyToExactNumbers(dataX.valuesFromTopLeftCorner());\r\n            const arrY = this.arithmeticHelper.manyToExactNumbers(dataY.valuesFromTopLeftCorner());\r\n            if (arrX instanceof CellError) {\r\n                return arrX;\r\n            }\r\n            if (arrY instanceof CellError) {\r\n                return arrY;\r\n            }\r\n            if (arrX.length <= 1 || arrY.length <= 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            const vx = variance(arrX, true);\r\n            const vy = variance(arrY, true);\r\n            if (vx === 0 || vy === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            const r = vx / vy;\r\n            const v = centralF.cdf(r, arrX.length - 1, arrY.length - 1);\r\n            return 2 * Math.min(v, 1 - v);\r\n        });\r\n    }\r\n    steyx(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('STEYX'), (dataX, dataY) => {\r\n            if (dataX.numberOfElements() !== dataY.numberOfElements()) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const ret = parseTwoArrays(dataX, dataY);\r\n            if (ret instanceof CellError) {\r\n                return ret;\r\n            }\r\n            const n = ret[0].length;\r\n            if (n <= 2) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.ThreeValues);\r\n            }\r\n            return Math.sqrt((sumsqerr(ret[0]) - Math.pow(covariance(ret[0], ret[1]) * (n - 1), 2) / sumsqerr(ret[1])) / (n - 2));\r\n        });\r\n    }\r\n    slope(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SLOPE'), (dataX, dataY) => {\r\n            if (dataX.numberOfElements() !== dataY.numberOfElements()) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const ret = parseTwoArrays(dataX, dataY);\r\n            if (ret instanceof CellError) {\r\n                return ret;\r\n            }\r\n            const n = ret[0].length;\r\n            if (n <= 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\r\n            }\r\n            return covariance(ret[0], ret[1]) * (n - 1) / sumsqerr(ret[1]);\r\n        });\r\n    }\r\n    chisqtest(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('CHISQ.TEST'), (dataX, dataY) => {\r\n            const r = dataX.height();\r\n            const c = dataX.width();\r\n            if (dataY.height() !== r || dataY.width() !== c) {\r\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n            }\r\n            const ret = parseTwoArrays(dataX, dataY);\r\n            if (ret instanceof CellError) {\r\n                return ret;\r\n            }\r\n            if (ret[0].length <= 1) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\r\n            }\r\n            let sum = 0;\r\n            for (let i = 0; i < ret[0].length; i++) {\r\n                if (ret[1][i] === 0) {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO);\r\n                }\r\n                sum += Math.pow(ret[0][i] - ret[1][i], 2) / ret[1][i];\r\n            }\r\n            if (sum < 0) {\r\n                return new CellError(ErrorType.NUM, ErrorMessage.NaN);\r\n            }\r\n            return 1 - chisquare.cdf(sum, (r > 1 && c > 1) ? (r - 1) * (c - 1) : r * c - 1);\r\n        });\r\n    }\r\n    ttest(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('T.TEST'), (dataX, dataY, tails, type) => {\r\n            const arrX = this.arithmeticHelper.manyToExactNumbers(dataX.valuesFromTopLeftCorner());\r\n            const arrY = this.arithmeticHelper.manyToExactNumbers(dataY.valuesFromTopLeftCorner());\r\n            if (arrX instanceof CellError) {\r\n                return arrX;\r\n            }\r\n            if (arrY instanceof CellError) {\r\n                return arrY;\r\n            }\r\n            const n = arrX.length;\r\n            const m = arrY.length;\r\n            if (type === 1) {\r\n                if (m !== n) {\r\n                    return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\r\n                }\r\n                if (n <= 1) {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\r\n                }\r\n                const sub = Array(n);\r\n                for (let i = 0; i < n; i++) {\r\n                    sub[i] = arrX[i] - arrY[i];\r\n                }\r\n                const s = stdev(sub, true);\r\n                if (s === 0) {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO);\r\n                }\r\n                const t = Math.abs(Math.sqrt(n) * mean(sub) / s);\r\n                return tails * (1 - studentt.cdf(t, n - 1));\r\n            }\r\n            else if (type === 2) {\r\n                if (n <= 1 || m <= 1) {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\r\n                }\r\n                const s = (sumsqerr(arrX) + sumsqerr(arrY)) / (n + m - 2);\r\n                if (s === 0) {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO);\r\n                }\r\n                const t = Math.abs((mean(arrX) - mean(arrY)) / Math.sqrt(s * (1 / n + 1 / m)));\r\n                return tails * (1 - studentt.cdf(t, n + m - 2));\r\n            }\r\n            else { //type === 3\r\n                if (n <= 1 || m <= 1) {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\r\n                }\r\n                const sx = variance(arrX, true);\r\n                const sy = variance(arrY, true);\r\n                if (sx === 0 && sy === 0) {\r\n                    return new CellError(ErrorType.DIV_BY_ZERO);\r\n                }\r\n                const t = Math.abs((mean(arrX) - mean(arrY)) / Math.sqrt(sx / n + sy / m));\r\n                const v = Math.pow(sx / n + sy / m, 2) / (Math.pow(sx / n, 2) / (n - 1) + Math.pow(sy / m, 2) / (m - 1));\r\n                return tails * (1 - studentt.cdf(t, v));\r\n            }\r\n        });\r\n    }\r\n    skew(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SKEW'), (...args) => {\r\n            const coerced = this.arithmeticHelper.coerceNumbersExactRanges(args);\r\n            if (coerced instanceof CellError) {\r\n                return coerced;\r\n            }\r\n            const n = coerced.length;\r\n            if (n < 3) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.ThreeValues);\r\n            }\r\n            const avg = mean(coerced);\r\n            const s = stdev(coerced, true);\r\n            if (s === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            return coerced.reduce((a, b) => a + Math.pow((b - avg) / s, 3), 0) * n / (n - 1) / (n - 2);\r\n        });\r\n    }\r\n    skewp(ast, state) {\r\n        return this.runFunction(ast.args, state, this.metadata('SKEW.P'), (...args) => {\r\n            const coerced = this.arithmeticHelper.coerceNumbersExactRanges(args);\r\n            if (coerced instanceof CellError) {\r\n                return coerced;\r\n            }\r\n            const n = coerced.length;\r\n            if (n < 3) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.ThreeValues);\r\n            }\r\n            const avg = mean(coerced);\r\n            const s = stdev(coerced, false);\r\n            if (s === 0) {\r\n                return new CellError(ErrorType.DIV_BY_ZERO);\r\n            }\r\n            return coerced.reduce((a, b) => a + Math.pow((b - avg) / s, 3), 0) / n;\r\n        });\r\n    }\r\n}\r\nStatisticalAggregationPlugin.implementedFunctions = {\r\n    'AVEDEV': {\r\n        method: 'avedev',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'DEVSQ': {\r\n        method: 'devsq',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'GEOMEAN': {\r\n        method: 'geomean',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'HARMEAN': {\r\n        method: 'harmean',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'CORREL': {\r\n        method: 'correl',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n    },\r\n    'RSQ': {\r\n        method: 'rsq',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n    },\r\n    'COVARIANCE.P': {\r\n        method: 'covariancep',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n    },\r\n    'COVARIANCE.S': {\r\n        method: 'covariances',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n    },\r\n    'Z.TEST': {\r\n        method: 'ztest',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.NUMBER },\r\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true },\r\n        ],\r\n    },\r\n    'F.TEST': {\r\n        method: 'ftest',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n    },\r\n    'STEYX': {\r\n        method: 'steyx',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n    },\r\n    'SLOPE': {\r\n        method: 'slope',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n    },\r\n    'CHISQ.TEST': {\r\n        method: 'chisqtest',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n        ],\r\n    },\r\n    'T.TEST': {\r\n        method: 'ttest',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.RANGE },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1, maxValue: 2 },\r\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1, maxValue: 3 },\r\n        ],\r\n    },\r\n    'SKEW': {\r\n        method: 'skew',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n    'SKEW.P': {\r\n        method: 'skewp',\r\n        parameters: [\r\n            { argumentType: ArgumentTypes.ANY },\r\n        ],\r\n        repeatLastArgs: 1,\r\n    },\r\n};\r\nStatisticalAggregationPlugin.aliases = {\r\n    COVAR: 'COVARIANCE.P',\r\n    FTEST: 'F.TEST',\r\n    PEARSON: 'CORREL',\r\n    ZTEST: 'Z.TEST',\r\n    CHITEST: 'CHISQ.TEST',\r\n    TTEST: 'T.TEST',\r\n    COVARIANCEP: 'COVARIANCE.P',\r\n    COVARIANCES: 'COVARIANCE.S',\r\n    SKEWP: 'SKEW.P',\r\n};\r\nfunction parseTwoArrays(dataX, dataY) {\r\n    const xit = dataX.iterateValuesFromTopLeftCorner();\r\n    const yit = dataY.iterateValuesFromTopLeftCorner();\r\n    let x, y;\r\n    const arrX = [];\r\n    const arrY = [];\r\n    while (x = xit.next(), y = yit.next(), !x.done && !y.done) {\r\n        const xval = x.value;\r\n        const yval = y.value;\r\n        if (xval instanceof CellError) {\r\n            return xval;\r\n        }\r\n        else if (yval instanceof CellError) {\r\n            return yval;\r\n        }\r\n        else if (isExtendedNumber(xval) && isExtendedNumber(yval)) {\r\n            arrX.push(getRawValue(xval));\r\n            arrY.push(getRawValue(yval));\r\n        }\r\n    }\r\n    return [arrX, arrY];\r\n}\r\n"],"sourceRoot":""}