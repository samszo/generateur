{"version":3,"file":"revertJSONPatch.js","names":["revertJSONPatch","document","operations","options","allRevertOperations","immutableJSONPatch","before","operation","revertOperations","path","parsePath","op","revertAdd","revertRemove","revertReplace","revertCopy","revertMove","parseFrom","from","Error","JSON","stringify","updatedJson","res","json","concat","undefined","compileJSONPointer","value","getIn","isArrayItem","existsIn","length","startsWith","move"],"sources":["../../src/revertJSONPatch.ts"],"sourcesContent":["import { existsIn, getIn } from './immutabilityHelpers.js'\nimport {\n  immutableJSONPatch,\n  isArrayItem,\n  parseFrom,\n  parsePath\n} from './immutableJSONPatch.js'\nimport { compileJSONPointer } from './jsonPointer.js'\nimport type {\n  JSONValue,\n  JSONPatchAdd,\n  JSONPatchDocument,\n  JSONPatchMove,\n  JSONPatchRemove,\n  JSONPatchReplace,\n  JSONPath,\n  RevertJSONPatchOptions\n} from './types.js'\nimport { startsWith } from './utils.js'\n\n/**\n * Create the inverse of a set of json patch operations\n * @param document\n * @param operations Array with JSON patch actions\n * @param [options]\n * @return Returns the operations to revert the changes\n */\nexport function revertJSONPatch (document: JSONValue, operations: JSONPatchDocument, options?: RevertJSONPatchOptions) : JSONPatchDocument {\n  let allRevertOperations: JSONPatchDocument = []\n\n  immutableJSONPatch(document, operations, {\n    before: (document, operation) => {\n      let revertOperations: JSONPatchDocument\n      const path = parsePath(document, operation.path)\n      if (operation.op === 'add') {\n        revertOperations = revertAdd(document, path)\n      } else if (operation.op === 'remove') {\n        revertOperations = revertRemove(document, path)\n      } else if (operation.op === 'replace') {\n        revertOperations = revertReplace(document, path)\n      } else if (operation.op === 'copy') {\n        revertOperations = revertCopy(document, path)\n      } else if (operation.op === 'move') {\n        revertOperations = revertMove(document, path, parseFrom(operation.from))\n      } else if (operation.op === 'test') {\n        revertOperations = []\n      } else {\n        throw new Error('Unknown JSONPatch operation ' + JSON.stringify(operation))\n      }\n\n      let updatedJson\n      if (options && options.before) {\n        const res = options.before(document, operation, revertOperations)\n        if (res && res.revertOperations) {\n          revertOperations = res.revertOperations\n        }\n        if (res && res.document) {\n          updatedJson = res.document\n        }\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        if (res && res.json) {\n          // TODO: deprecated since v5.0.0. Cleanup this warning some day\n          throw new Error('Deprecation warning: returned object property \".json\" has been renamed to \".document\"')\n        }\n      }\n\n      allRevertOperations = revertOperations.concat(allRevertOperations)\n\n      if (updatedJson !== undefined) {\n        return {\n          document: updatedJson\n        }\n      }\n    }\n  })\n\n  return allRevertOperations\n}\n\nfunction revertReplace (document: JSONValue, path: JSONPath) : [JSONPatchReplace] {\n  return [{\n    op: 'replace',\n    path: compileJSONPointer(path),\n    value: getIn(document, path)\n  }]\n}\n\nfunction revertRemove (document: JSONValue, path: JSONPath) : [JSONPatchAdd] {\n  return [{\n    op: 'add',\n    path: compileJSONPointer(path),\n    value: getIn(document, path)\n  }]\n}\n\nfunction revertAdd (document: JSONValue, path: JSONPath) : [JSONPatchRemove] | [JSONPatchReplace] {\n  if (isArrayItem(document, path) || !existsIn(document, path)) {\n    return [{\n      op: 'remove',\n      path: compileJSONPointer(path)\n    }]\n  } else {\n    return revertReplace(document, path)\n  }\n}\n\nfunction revertCopy (document: JSONValue, path: JSONPath) : [JSONPatchRemove] | [JSONPatchReplace] {\n  return revertAdd(document, path)\n}\n\nfunction revertMove (document: JSONValue, path: JSONPath, from: JSONPath) : [JSONPatchReplace] | [JSONPatchMove] | [JSONPatchMove, JSONPatchAdd] {\n  if (path.length < from.length && startsWith(from, path)) {\n    // replacing the parent with the child\n    return [\n      {\n        op: 'replace',\n        path: compileJSONPointer(path),\n        value: document\n      }\n    ]\n  }\n\n  const move: JSONPatchMove = {\n    op: 'move',\n    from: compileJSONPointer(path),\n    path: compileJSONPointer(from)\n  }\n\n  if (!isArrayItem(document, path) && existsIn(document, path)) {\n    // the move replaces an existing value in an object\n    return [\n      move,\n      ...revertRemove(document, path)\n    ]\n  } else {\n    return [\n      move\n    ]\n  }\n}\n"],"mappings":"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"}